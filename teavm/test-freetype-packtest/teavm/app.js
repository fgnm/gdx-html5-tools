"use strict";
var main;
(function() {
var $rt_seed = 2463534242;
function $rt_nextId() {
    var x = $rt_seed;
    x ^= x << 13;
    x ^= x >> 17;
    x ^= x << 5;
    $rt_seed = x;
    return x;
}
function $rt_compare(a, b) {
    return a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1;
}
function $rt_isInstance(obj, cls) {
    return obj !== null && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls);
}
function $rt_isAssignable(from, to) {
    if (from === to) {
        return true;
    }
    if (to.$meta.item !== null) {
        return from.$meta.item !== null && $rt_isAssignable(from.$meta.item, to.$meta.item);
    }
    var supertypes = from.$meta.supertypes;
    for (var i = 0;i < supertypes.length;i = i + 1 | 0) {
        if ($rt_isAssignable(supertypes[i], to)) {
            return true;
        }
    }
    return false;
}
function $rt_castToInterface(obj, cls) {
    if (obj !== null && !$rt_isInstance(obj, cls)) {
        $rt_throwCCE();
    }
    return obj;
}
function $rt_castToClass(obj, cls) {
    if (obj !== null && !(obj instanceof cls)) {
        $rt_throwCCE();
    }
    return obj;
}
Array.prototype.fill = Array.prototype.fill || function(value, start, end) {
    var len = this.length;
    if (!len) return this;
    start = start | 0;
    var i = start < 0 ? Math.max(len + start, 0) : Math.min(start, len);
    end = end === undefined ? len : end | 0;
    end = end < 0 ? Math.max(len + end, 0) : Math.min(end, len);
    for (;i < end;i++) {
        this[i] = value;
    }
    return this;
};
function $rt_createArray(cls, sz) {
    var data = new Array(sz);
    data.fill(null);
    return new $rt_array(cls, data);
}
function $rt_createArrayFromData(cls, init) {
    return $rt_wrapArray(cls, init);
}
function $rt_wrapArray(cls, data) {
    return new $rt_array(cls, data);
}
function $rt_createUnfilledArray(cls, sz) {
    return new $rt_array(cls, new Array(sz));
}
function $rt_createNumericArray(cls, nativeArray) {
    return new $rt_array(cls, nativeArray);
}
var $rt_createLongArray;
var $rt_createLongArrayFromData;
if (typeof BigInt64Array !== 'function') {
    $rt_createLongArray = function(sz) {
        var data = new Array(sz);
        var arr = new $rt_array($rt_longcls(), data);
        data.fill(Long_ZERO);
        return arr;
    };
    $rt_createLongArrayFromData = function(init) {
        return new $rt_array($rt_longcls(), init);
    };
} else {
    $rt_createLongArray = function(sz) {
        return $rt_createNumericArray($rt_longcls(), new BigInt64Array(sz));
    };
    $rt_createLongArrayFromData = function(data) {
        var buffer = new BigInt64Array(data.length);
        buffer.set(data);
        return $rt_createNumericArray($rt_longcls(), buffer);
    };
}
function $rt_createCharArray(sz) {
    return $rt_createNumericArray($rt_charcls(), new Uint16Array(sz));
}
function $rt_createCharArrayFromData(data) {
    var buffer = new Uint16Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_charcls(), buffer);
}
function $rt_createByteArray(sz) {
    return $rt_createNumericArray($rt_bytecls(), new Int8Array(sz));
}
function $rt_createByteArrayFromData(data) {
    var buffer = new Int8Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_bytecls(), buffer);
}
function $rt_createShortArray(sz) {
    return $rt_createNumericArray($rt_shortcls(), new Int16Array(sz));
}
function $rt_createShortArrayFromData(data) {
    var buffer = new Int16Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_shortcls(), buffer);
}
function $rt_createIntArray(sz) {
    return $rt_createNumericArray($rt_intcls(), new Int32Array(sz));
}
function $rt_createIntArrayFromData(data) {
    var buffer = new Int32Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_intcls(), buffer);
}
function $rt_createBooleanArray(sz) {
    return $rt_createNumericArray($rt_booleancls(), new Int8Array(sz));
}
function $rt_createBooleanArrayFromData(data) {
    var buffer = new Int8Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_booleancls(), buffer);
}
function $rt_createFloatArray(sz) {
    return $rt_createNumericArray($rt_floatcls(), new Float32Array(sz));
}
function $rt_createFloatArrayFromData(data) {
    var buffer = new Float32Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_floatcls(), buffer);
}
function $rt_createDoubleArray(sz) {
    return $rt_createNumericArray($rt_doublecls(), new Float64Array(sz));
}
function $rt_createDoubleArrayFromData(data) {
    var buffer = new Float64Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_doublecls(), buffer);
}
function $rt_arraycls(cls) {
    var result = cls.$array;
    if (result === null) {
        var arraycls = {  };
        var name = "[" + cls.$meta.binaryName;
        arraycls.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false, simpleName : null, declaringClass : null, enclosingClass : null };
        arraycls.classObject = null;
        arraycls.$array = null;
        result = arraycls;
        cls.$array = arraycls;
    }
    return result;
}
function $rt_createcls() {
    return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
}
function $rt_createPrimitiveCls(name, binaryName) {
    var cls = $rt_createcls();
    cls.$meta.primitive = true;
    cls.$meta.name = name;
    cls.$meta.binaryName = binaryName;
    cls.$meta.enum = false;
    cls.$meta.item = null;
    cls.$meta.simpleName = null;
    cls.$meta.declaringClass = null;
    cls.$meta.enclosingClass = null;
    return cls;
}
var $rt_booleanclsCache = null;
function $rt_booleancls() {
    if ($rt_booleanclsCache === null) {
        $rt_booleanclsCache = $rt_createPrimitiveCls("boolean", "Z");
    }
    return $rt_booleanclsCache;
}
var $rt_charclsCache = null;
function $rt_charcls() {
    if ($rt_charclsCache === null) {
        $rt_charclsCache = $rt_createPrimitiveCls("char", "C");
    }
    return $rt_charclsCache;
}
var $rt_byteclsCache = null;
function $rt_bytecls() {
    if ($rt_byteclsCache === null) {
        $rt_byteclsCache = $rt_createPrimitiveCls("byte", "B");
    }
    return $rt_byteclsCache;
}
var $rt_shortclsCache = null;
function $rt_shortcls() {
    if ($rt_shortclsCache === null) {
        $rt_shortclsCache = $rt_createPrimitiveCls("short", "S");
    }
    return $rt_shortclsCache;
}
var $rt_intclsCache = null;
function $rt_intcls() {
    if ($rt_intclsCache === null) {
        $rt_intclsCache = $rt_createPrimitiveCls("int", "I");
    }
    return $rt_intclsCache;
}
var $rt_longclsCache = null;
function $rt_longcls() {
    if ($rt_longclsCache === null) {
        $rt_longclsCache = $rt_createPrimitiveCls("long", "J");
    }
    return $rt_longclsCache;
}
var $rt_floatclsCache = null;
function $rt_floatcls() {
    if ($rt_floatclsCache === null) {
        $rt_floatclsCache = $rt_createPrimitiveCls("float", "F");
    }
    return $rt_floatclsCache;
}
var $rt_doubleclsCache = null;
function $rt_doublecls() {
    if ($rt_doubleclsCache === null) {
        $rt_doubleclsCache = $rt_createPrimitiveCls("double", "D");
    }
    return $rt_doubleclsCache;
}
var $rt_voidclsCache = null;
function $rt_voidcls() {
    if ($rt_voidclsCache === null) {
        $rt_voidclsCache = $rt_createPrimitiveCls("void", "V");
    }
    return $rt_voidclsCache;
}
function $rt_throw(ex) {
    throw $rt_exception(ex);
}
var $rt_javaExceptionProp = Symbol("javaException");
function $rt_exception(ex) {
    var err = ex.$jsException;
    if (!err) {
        err = new Error("Java exception thrown");
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(err);
        }
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return err;
}
function $rt_fillStack(err, ex) {
    if (typeof $rt_decodeStack === "function" && err.stack) {
        var stack = $rt_decodeStack(err.stack);
        var javaStack = $rt_createArray($rt_stecls(), stack.length);
        var elem;
        var noStack = false;
        for (var i = 0;i < stack.length;++i) {
            var element = stack[i];
            elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
            if (elem == null) {
                noStack = true;
                break;
            }
            javaStack.data[i] = elem;
        }
        if (!noStack) {
            $rt_setStack(ex, javaStack);
        }
    }
}
function $rt_createMultiArray(cls, dimensions) {
    var first = 0;
    for (var i = dimensions.length - 1;i >= 0;i = i - 1 | 0) {
        if (dimensions[i] === 0) {
            first = i;
            break;
        }
    }
    if (first > 0) {
        for (i = 0;i < first;i = i + 1 | 0) {
            cls = $rt_arraycls(cls);
        }
        if (first === dimensions.length - 1) {
            return $rt_createArray(cls, dimensions[first]);
        }
    }
    var arrays = new Array($rt_primitiveArrayCount(dimensions, first));
    var firstDim = dimensions[first] | 0;
    for (i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createArray(cls, firstDim);
    }
    return $rt_createMultiArrayImpl(cls, arrays, dimensions, first);
}
function $rt_createByteMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_bytecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createByteArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_bytecls(), arrays, dimensions);
}
function $rt_createCharMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_charcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createCharArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_charcls(), arrays, dimensions, 0);
}
function $rt_createBooleanMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_booleancls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createBooleanArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_booleancls(), arrays, dimensions, 0);
}
function $rt_createShortMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_shortcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createShortArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_shortcls(), arrays, dimensions, 0);
}
function $rt_createIntMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_intcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createIntArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_intcls(), arrays, dimensions, 0);
}
function $rt_createLongMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_longcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createLongArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_longcls(), arrays, dimensions, 0);
}
function $rt_createFloatMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_floatcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createFloatArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_floatcls(), arrays, dimensions, 0);
}
function $rt_createDoubleMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_doublecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createDoubleArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_doublecls(), arrays, dimensions, 0);
}
function $rt_primitiveArrayCount(dimensions, start) {
    var val = dimensions[start + 1] | 0;
    for (var i = start + 2;i < dimensions.length;i = i + 1 | 0) {
        val = val * (dimensions[i] | 0) | 0;
        if (val === 0) {
            break;
        }
    }
    return val;
}
function $rt_createMultiArrayImpl(cls, arrays, dimensions, start) {
    var limit = arrays.length;
    for (var i = start + 1 | 0;i < dimensions.length;i = i + 1 | 0) {
        cls = $rt_arraycls(cls);
        var dim = dimensions[i];
        var index = 0;
        var packedIndex = 0;
        while (index < limit) {
            var arr = $rt_createUnfilledArray(cls, dim);
            for (var j = 0;j < dim;j = j + 1 | 0) {
                arr.data[j] = arrays[index];
                index = index + 1 | 0;
            }
            arrays[packedIndex] = arr;
            packedIndex = packedIndex + 1 | 0;
        }
        limit = packedIndex;
    }
    return arrays[0];
}
function $rt_assertNotNaN(value) {
    if (typeof value === 'number' && isNaN(value)) {
        throw "NaN";
    }
    return value;
}
function $rt_createOutputFunction(printFunction) {
    var buffer = "";
    var utf8Buffer = 0;
    var utf8Remaining = 0;
    function putCodePoint(ch) {
        if (ch === 0xA) {
            printFunction(buffer);
            buffer = "";
        } else if (ch < 0x10000) {
            buffer += String.fromCharCode(ch);
        } else {
            ch = ch - 0x10000 | 0;
            var hi = (ch >> 10) + 0xD800;
            var lo = (ch & 0x3FF) + 0xDC00;
            buffer += String.fromCharCode(hi, lo);
        }
    }
    return function(ch) {
        if ((ch & 0x80) === 0) {
            putCodePoint(ch);
        } else if ((ch & 0xC0) === 0x80) {
            if (utf8Buffer > 0) {
                utf8Remaining <<= 6;
                utf8Remaining |= ch & 0x3F;
                if ( --utf8Buffer === 0) {
                    putCodePoint(utf8Remaining);
                }
            }
        } else if ((ch & 0xE0) === 0xC0) {
            utf8Remaining = ch & 0x1F;
            utf8Buffer = 1;
        } else if ((ch & 0xF0) === 0xE0) {
            utf8Remaining = ch & 0x0F;
            utf8Buffer = 2;
        } else if ((ch & 0xF8) === 0xF0) {
            utf8Remaining = ch & 0x07;
            utf8Buffer = 3;
        }
    };
}
var $rt_putStdout = typeof $rt_putStdoutCustom === "function" ? $rt_putStdoutCustom : typeof console === "object" ? $rt_createOutputFunction(function(msg) {
    console.info(msg);
}) : function() {
};
var $rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : typeof console === "object" ? $rt_createOutputFunction(function(msg) {
    console.error(msg);
}) : function() {
};
var $rt_packageData = null;
function $rt_packages(data) {
    var i = 0;
    var packages = new Array(data.length);
    for (var j = 0;j < data.length;++j) {
        var prefixIndex = data[i++];
        var prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
        packages[j] = prefix + data[i++] + ".";
    }
    $rt_packageData = packages;
}
function $rt_metadata(data) {
    var packages = $rt_packageData;
    var i = 0;
    while (i < data.length) {
        var cls = data[i++];
        cls.$meta = {  };
        var m = cls.$meta;
        var className = data[i++];
        m.name = className !== 0 ? className : null;
        if (m.name !== null) {
            var packageIndex = data[i++];
            if (packageIndex >= 0) {
                m.name = packages[packageIndex] + m.name;
            }
        }
        m.binaryName = "L" + m.name + ";";
        var superclass = data[i++];
        m.superclass = superclass !== 0 ? superclass : null;
        m.supertypes = data[i++];
        if (m.superclass) {
            m.supertypes.push(m.superclass);
            cls.prototype = Object.create(m.superclass.prototype);
        } else {
            cls.prototype = {  };
        }
        var flags = data[i++];
        m.enum = (flags & 8) !== 0;
        m.flags = flags;
        m.primitive = false;
        m.item = null;
        cls.prototype.constructor = cls;
        cls.classObject = null;
        m.accessLevel = data[i++];
        var innerClassInfo = data[i++];
        if (innerClassInfo === 0) {
            m.simpleName = null;
            m.declaringClass = null;
            m.enclosingClass = null;
        } else {
            var enclosingClass = innerClassInfo[0];
            m.enclosingClass = enclosingClass !== 0 ? enclosingClass : null;
            var declaringClass = innerClassInfo[1];
            m.declaringClass = declaringClass !== 0 ? declaringClass : null;
            var simpleName = innerClassInfo[2];
            m.simpleName = simpleName !== 0 ? simpleName : null;
        }
        var clinit = data[i++];
        cls.$clinit = clinit !== 0 ? clinit : function() {
        };
        var virtualMethods = data[i++];
        if (virtualMethods !== 0) {
            for (var j = 0;j < virtualMethods.length;j += 2) {
                var name = virtualMethods[j];
                var func = virtualMethods[j + 1];
                if (typeof name === 'string') {
                    name = [name];
                }
                for (var k = 0;k < name.length;++k) {
                    cls.prototype[name[k]] = func;
                }
            }
        }
        cls.$array = null;
    }
}
function $rt_wrapFunction0(f) {
    return function() {
        return f(this);
    };
}
function $rt_wrapFunction1(f) {
    return function(p1) {
        return f(this, p1);
    };
}
function $rt_wrapFunction2(f) {
    return function(p1, p2) {
        return f(this, p1, p2);
    };
}
function $rt_wrapFunction3(f) {
    return function(p1, p2, p3) {
        return f(this, p1, p2, p3, p3);
    };
}
function $rt_wrapFunction4(f) {
    return function(p1, p2, p3, p4) {
        return f(this, p1, p2, p3, p4);
    };
}
function $rt_threadStarter(f) {
    return function() {
        var args = Array.prototype.slice.apply(arguments);
        $rt_startThread(function() {
            f.apply(this, args);
        });
    };
}
function $rt_mainStarter(f) {
    return function(args, callback) {
        if (!args) {
            args = [];
        }
        var javaArgs = $rt_createArray($rt_objcls(), args.length);
        for (var i = 0;i < args.length;++i) {
            javaArgs.data[i] = $rt_str(args[i]);
        }
        $rt_startThread(function() {
            f.call(null, javaArgs);
        }, callback);
    };
}
var $rt_stringPool_instance;
function $rt_stringPool(strings) {
    $rt_stringPool_instance = new Array(strings.length);
    for (var i = 0;i < strings.length;++i) {
        $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
    }
}
function $rt_s(index) {
    return $rt_stringPool_instance[index];
}
function $rt_eraseClinit(target) {
    return target.$clinit = function() {
    };
}
var $rt_numberConversionView = new DataView(new ArrayBuffer(8));
var $rt_doubleToLongBits;
var $rt_longBitsToDouble;
if (typeof BigInt !== 'function') {
    $rt_doubleToLongBits = function(n) {
        $rt_numberConversionView.setFloat64(0, n, true);
        return new Long($rt_numberConversionView.getInt32(0, true), $rt_numberConversionView.getInt32(4, true));
    };
    $rt_longBitsToDouble = function(n) {
        $rt_numberConversionView.setInt32(0, n.lo, true);
        $rt_numberConversionView.setInt32(4, n.hi, true);
        return $rt_numberConversionView.getFloat64(0, true);
    };
} else {
    $rt_doubleToLongBits = function(n) {
        $rt_numberConversionView.setFloat64(0, n, true);
        var lo = $rt_numberConversionView.getInt32(0, true);
        var hi = $rt_numberConversionView.getInt32(4, true);
        return BigInt.asIntN(64, BigInt.asUintN(32, BigInt(lo)) | BigInt(hi) << BigInt(32));
    };
    $rt_longBitsToDouble = function(n) {
        var hi = Number(BigInt.asIntN(32, n >> BigInt(32)));
        var lo = Number(BigInt.asIntN(32, n & BigInt(0xFFFFFFFF)));
        $rt_numberConversionView.setInt32(0, lo, true);
        $rt_numberConversionView.setInt32(4, hi, true);
        return $rt_numberConversionView.getFloat64(0, true);
    };
}
function $rt_floatToIntBits(n) {
    $rt_numberConversionView.setFloat32(0, n);
    return $rt_numberConversionView.getInt32(0);
}
function $rt_intBitsToFloat(n) {
    $rt_numberConversionView.setInt32(0, n);
    return $rt_numberConversionView.getFloat32(0);
}
function $rt_javaException(e) {
    return e instanceof Error && typeof e[$rt_javaExceptionProp] === 'object' ? e[$rt_javaExceptionProp] : null;
}
function $rt_jsException(e) {
    return typeof e.$jsException === 'object' ? e.$jsException : null;
}
function $rt_wrapException(err) {
    var ex = err[$rt_javaExceptionProp];
    if (!ex) {
        ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return ex;
}
function $dbg_class(obj) {
    var cls = obj.constructor;
    var arrayDegree = 0;
    while (cls.$meta && cls.$meta.item) {
        ++arrayDegree;
        cls = cls.$meta.item;
    }
    var clsName = "";
    if (cls === $rt_booleancls()) {
        clsName = "boolean";
    } else if (cls === $rt_bytecls()) {
        clsName = "byte";
    } else if (cls === $rt_shortcls()) {
        clsName = "short";
    } else if (cls === $rt_charcls()) {
        clsName = "char";
    } else if (cls === $rt_intcls()) {
        clsName = "int";
    } else if (cls === $rt_longcls()) {
        clsName = "long";
    } else if (cls === $rt_floatcls()) {
        clsName = "float";
    } else if (cls === $rt_doublecls()) {
        clsName = "double";
    } else {
        clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
    }
    while (arrayDegree-- > 0) {
        clsName += "[]";
    }
    return clsName;
}
function Long(lo, hi) {
    this.lo = lo | 0;
    this.hi = hi | 0;
}
Long.prototype.__teavm_class__ = function() {
    return "long";
};
function Long_isPositive(a) {
    return (a.hi & 0x80000000) === 0;
}
function Long_isNegative(a) {
    return (a.hi & 0x80000000) !== 0;
}
var Long_MAX_NORMAL = 1 << 18;
var Long_ZERO;
var Long_create;
var Long_fromInt;
var Long_fromNumber;
var Long_toNumber;
var Long_hi;
var Long_lo;
if (typeof BigInt !== "function") {
    Long.prototype.toString = function() {
        var result = [];
        var n = this;
        var positive = Long_isPositive(n);
        if (!positive) {
            n = Long_neg(n);
        }
        var radix = new Long(10, 0);
        do  {
            var divRem = Long_divRem(n, radix);
            result.push(String.fromCharCode(48 + divRem[1].lo));
            n = divRem[0];
        }while (n.lo !== 0 || n.hi !== 0);
        result = (result.reverse()).join('');
        return positive ? result : "-" + result;
    };
    Long.prototype.valueOf = function() {
        return Long_toNumber(this);
    };
    Long_ZERO = new Long(0, 0);
    Long_fromInt = function(val) {
        return new Long(val,  -(val < 0) | 0);
    };
    Long_fromNumber = function(val) {
        if (val >= 0) {
            return new Long(val | 0, val / 0x100000000 | 0);
        } else {
            return Long_neg(new Long( -val | 0,  -val / 0x100000000 | 0));
        }
    };
    Long_create = function(lo, hi) {
        return new Long(lo, hi);
    };
    Long_toNumber = function(val) {
        return 0x100000000 * val.hi + (val.lo >>> 0);
    };
    Long_hi = function(val) {
        return val.hi;
    };
    Long_lo = function(val) {
        return val.lo;
    };
} else {
    Long_ZERO = BigInt(0);
    Long_create = function(lo, hi) {
        return BigInt.asIntN(64, BigInt.asUintN(32, BigInt(lo)) | BigInt(hi) << BigInt(32));
    };
    Long_fromInt = function(val) {
        return BigInt(val);
    };
    Long_fromNumber = function(val) {
        return BigInt(val >= 0 ? Math.floor(val) : Math.ceil(val));
    };
    Long_toNumber = function(val) {
        return Number(val);
    };
    Long_hi = function(val) {
        return Number(BigInt.asIntN(64, val >> BigInt(32))) | 0;
    };
    Long_lo = function(val) {
        return Number(BigInt.asIntN(32, val)) | 0;
    };
}
var $rt_imul = Math.imul || function(a, b) {
    var ah = a >>> 16 & 0xFFFF;
    var al = a & 0xFFFF;
    var bh = b >>> 16 & 0xFFFF;
    var bl = b & 0xFFFF;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
};
var $rt_udiv = function(a, b) {
    return (a >>> 0) / (b >>> 0) >>> 0;
};
var $rt_umod = function(a, b) {
    return (a >>> 0) % (b >>> 0) >>> 0;
};
function $rt_checkBounds(index, array) {
    if (index < 0 || index >= array.length) {
        $rt_throwAIOOBE();
    }
    return index;
}
function $rt_checkUpperBound(index, array) {
    if (index >= array.length) {
        $rt_throwAIOOBE();
    }
    return index;
}
function $rt_checkLowerBound(index) {
    if (index < 0) {
        $rt_throwAIOOBE();
    }
    return index;
}
function $rt_classWithoutFields(superclass) {
    if (superclass === 0) {
        return function() {
        };
    }
    if (superclass === void 0) {
        superclass = $rt_objcls();
    }
    return function() {
        superclass.call(this);
    };
}
function $rt_setCloneMethod(target, f) {
    target.$clone = f;
}
function $rt_cls(cls) {
    return jl_Class_getClass(cls);
}
function $rt_str(str) {
    if (str === null) {
        return null;
    }
    var characters = $rt_createCharArray(str.length);
    var charsBuffer = characters.data;
    for (var i = 0; i < str.length; i = (i + 1) | 0) {
        charsBuffer[i] = str.charCodeAt(i) & 0xFFFF;
    }
    return jl_String__init_(characters);
}
function $rt_ustr(str) {
    if (str === null) {
        return null;
    }
    var data = str.$characters.data;
    var result = "";
    for (var i = 0; i < data.length; i = (i + 1) | 0) {
        result += String.fromCharCode(data[i]);
    }
    return result;
}
function $rt_objcls() { return jl_Object; }
function $rt_stecls() {
    return jl_StackTraceElement;
}
function $rt_nullCheck(val) {
    if (val === null) {
        $rt_throw(jl_NullPointerException__init_());
    }
    return val;
}
function $rt_intern(str) {
    return str;
}
function $rt_getThread() {
    return jl_Thread_currentThread();
}
function $rt_setThread(t) {
    return jl_Thread_setCurrentThread(t);
}
function $rt_createException(message) {
    return jl_RuntimeException__init_(message);
}
function $rt_createStackElement(className, methodName, fileName, lineNumber) {
    return null;
}
function $rt_setStack(e, stack) {
}
function $rt_throwAIOOBE() {
}
function $rt_throwCCE() {
}
var $java = Object.create(null);
function jl_Object() {
    this.$monitor = null;
    this.$id$ = 0;
}
function jl_Object__init_() {
    var var_0 = new jl_Object();
    jl_Object__init_0(var_0);
    return var_0;
}
function jl_Object_monitorEnterSync($o) {
    var var$2;
    if ($o.$monitor === null)
        jl_Object_createMonitor($o);
    if ($o.$monitor.$owner === null)
        $o.$monitor.$owner = jl_Thread_currentThread();
    else if ($o.$monitor.$owner !== jl_Thread_currentThread())
        $rt_throw(jl_IllegalStateException__init_($rt_s(0)));
    var$2 = $o.$monitor;
    var$2.$count = var$2.$count + 1 | 0;
}
function jl_Object_monitorExitSync($o) {
    var var$2, var$3;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        var$2 = $o.$monitor;
        var$3 = var$2.$count - 1 | 0;
        var$2.$count = var$3;
        if (!var$3)
            $o.$monitor.$owner = null;
        jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
}
function jl_Object_monitorEnter($o) {
    jl_Object_monitorEnter0($o, 1);
}
function jl_Object_monitorEnter0($o, $count) {
    var var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$count = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($o.$monitor === null)
            jl_Object_createMonitor($o);
        if ($o.$monitor.$owner === null)
            $o.$monitor.$owner = jl_Thread_currentThread();
        if ($o.$monitor.$owner === jl_Thread_currentThread()) {
            var$3 = $o.$monitor;
            var$3.$count = var$3.$count + $count | 0;
            return;
        }
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait($o, $count);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, $count, var$3, $ptr);
}
function jl_Object_createMonitor($o) {
    $o.$monitor = jl_Object$Monitor__init_();
}
function jl_Object_monitorEnterWait(var$1, var$2) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            jl_Object_monitorEnterWait0(var$1, var$2, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function jl_Object_monitorEnterWait0($o, $count, $callback) {
    var $thread_0, var$5, $monitor;
    $thread_0 = jl_Thread_currentThread();
    if ($o.$monitor === null) {
        jl_Object_createMonitor($o);
        jl_Thread_setCurrentThread($thread_0);
        var$5 = $o.$monitor;
        var$5.$count = var$5.$count + $count | 0;
        $callback.$complete(null);
        return;
    }
    if ($o.$monitor.$owner === null) {
        $o.$monitor.$owner = $thread_0;
        jl_Thread_setCurrentThread($thread_0);
        var$5 = $o.$monitor;
        var$5.$count = var$5.$count + $count | 0;
        $callback.$complete(null);
        return;
    }
    $monitor = $o.$monitor;
    if ($monitor.$enteringThreads === null)
        $monitor.$enteringThreads = otp_Platform_createQueue();
    otp_PlatformQueue_add$static($monitor.$enteringThreads, jl_Object$monitorEnterWait$lambda$_6_0__init_($thread_0, $o, $count, $callback));
}
function jl_Object_monitorExit($o) {
    jl_Object_monitorExit0($o, 1);
}
function jl_Object_monitorExit0($o, $count) {
    var $monitor;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        $monitor = $o.$monitor;
        $monitor.$count = $monitor.$count - $count | 0;
        if ($monitor.$count > 0)
            return;
        $monitor.$owner = null;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads))
            otp_Platform_postpone(jl_Object$monitorExit$lambda$_8_0__init_($o));
        else
            jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
}
function jl_Object_waitForOtherThreads($o) {
    var $monitor, $enteringThreads, $r;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === null) {
        $monitor = $o.$monitor;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads)) {
            $enteringThreads = $monitor.$enteringThreads;
            $r = otp_PlatformQueue_remove$static($enteringThreads);
            $monitor.$enteringThreads = null;
            $r.$run();
        }
        return;
    }
}
function jl_Object_isEmptyMonitor($this) {
    var $monitor, var$2;
    $monitor = $this.$monitor;
    if ($monitor === null)
        return 1;
    a: {
        b: {
            if ($monitor.$owner === null) {
                if ($monitor.$enteringThreads !== null) {
                    var$2 = $monitor.$enteringThreads;
                    if (!otp_PlatformQueue_isEmpty$static(var$2))
                        break b;
                }
                if ($monitor.$notifyListeners === null)
                    break a;
                var$2 = $monitor.$notifyListeners;
                if (otp_PlatformQueue_isEmpty$static(var$2))
                    break a;
            }
        }
        return 0;
    }
    jl_Object_deleteMonitor($this);
    return 1;
}
function jl_Object_deleteMonitor($this) {
    $this.$monitor = null;
}
function jl_Object__init_0($this) {}
function jl_Object_getClass($this) {
    return jl_Class_getClass($this.constructor);
}
function jl_Object_hashCode($this) {
    return jl_Object_identity($this);
}
function jl_Object_equals($this, $other) {
    return $this !== $other ? 0 : 1;
}
function jl_Object_toString($this) {
    return ((((jl_StringBuilder__init_()).$append((jl_Object_getClass($this)).$getName())).$append($rt_s(1))).$append(jl_Integer_toHexString(jl_Object_identity($this)))).$toString();
}
function jl_Object_identity($this) {
    var $platformThis, var$2;
    $platformThis = $this;
    if (!$platformThis.$id$) {
        var$2 = $rt_nextId();
        $platformThis.$id$ = var$2;
    }
    return $this.$id$;
}
function jl_Object_clone($this) {
    var var$1, $result, var$3;
    if (!$rt_isInstance($this, jl_Cloneable)) {
        var$1 = $this;
        if (var$1.constructor.$meta.item === null)
            $rt_throw(jl_CloneNotSupportedException__init_());
    }
    $result = otp_Platform_clone($this);
    var$1 = $result;
    var$3 = $rt_nextId();
    var$1.$id$ = var$3;
    return $result;
}
function jl_Object_lambda$monitorExit$2($o) {
    jl_Object_waitForOtherThreads($o);
}
function jl_Object_lambda$monitorEnterWait$0($thread_0, $o, $count, $callback) {
    var var$5;
    jl_Thread_setCurrentThread($thread_0);
    $o.$monitor.$owner = $thread_0;
    var$5 = $o.$monitor;
    var$5.$count = var$5.$count + $count | 0;
    $callback.$complete(null);
}
function jur_AbstractCharClass$LazyCharClass() {
    var a = this; jl_Object.call(a);
    a.$posValue = null;
    a.$negValue = null;
}
function jur_AbstractCharClass$LazyCharClass__init_($this) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$LazyCharClass_getValue($this, $negative) {
    if (!$negative && $this.$posValue === null)
        $this.$posValue = $this.$computeValue();
    else if ($negative && $this.$negValue === null)
        $this.$negValue = ($this.$computeValue()).$setNegative(1);
    if ($negative)
        return $this.$negValue;
    return $this.$posValue;
}
var jur_AbstractCharClass$LazyBlank = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyBlank__init_() {
    var var_0 = new jur_AbstractCharClass$LazyBlank();
    jur_AbstractCharClass$LazyBlank__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyBlank__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyBlank_computeValue($this) {
    return ((jur_CharClass__init_()).$add(32)).$add(9);
}
var jur_AbstractCharClass$LazyCntrl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyCntrl__init_() {
    var var_0 = new jur_AbstractCharClass$LazyCntrl();
    jur_AbstractCharClass$LazyCntrl__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyCntrl__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyCntrl_computeValue($this) {
    return ((jur_CharClass__init_()).$add0(0, 31)).$add(127);
}
function cbgggf_FreeType$Pointer() {
    jl_Object.call(this);
    this.$address = 0;
}
function cbgggf_FreeType$Pointer__init_(var_0) {
    var var_1 = new cbgggf_FreeType$Pointer();
    cbgggf_FreeType$Pointer__init_0(var_1, var_0);
    return var_1;
}
function cbgggf_FreeType$Pointer__init_0($this, $address) {
    jl_Object__init_0($this);
    $this.$address = $address;
}
var cbgggf_FreeType$GlyphSlot = $rt_classWithoutFields(cbgggf_FreeType$Pointer);
function cbgggf_FreeType$GlyphSlot__init_(var_0) {
    var var_1 = new cbgggf_FreeType$GlyphSlot();
    cbgggf_FreeType$GlyphSlot__init_0(var_1, var_0);
    return var_1;
}
function cbgggf_FreeType$GlyphSlot__init_0($this, $address) {
    cbgggf_FreeType$Pointer__init_0($this, $address);
}
function cbgggf_FreeType$GlyphSlot_getMetrics($this) {
    return cbgggf_FreeType$GlyphMetrics__init_(Module._c_GlyphSlot_getMetrics($this.$address));
}
function cbgggf_FreeType$GlyphSlot_getFormat($this) {
    return Module._c_GlyphSlot_getFormat($this.$address);
}
function cbgggf_FreeType$GlyphSlot_getGlyph($this) {
    var $glyph;
    $glyph = Module._c_GlyphSlot_getGlyph($this.$address);
    if ($glyph)
        return cbgggf_FreeType$Glyph__init_($glyph);
    $rt_throw(cbgu_GdxRuntimeException__init_((((jl_StringBuilder__init_()).$append($rt_s(2))).$append0(Module._c_FreeType_getLastErrorCode())).$toString()));
}
var ju_Enumeration = $rt_classWithoutFields(0);
function jnci_BufferedEncoder$Controller() {
    var a = this; jl_Object.call(a);
    a.$in = null;
    a.$out = null;
    a.$inPosition = 0;
    a.$outPosition = 0;
}
function jnci_BufferedEncoder$Controller__init_(var_0, var_1) {
    var var_2 = new jnci_BufferedEncoder$Controller();
    jnci_BufferedEncoder$Controller__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnci_BufferedEncoder$Controller__init_0($this, $in, $out) {
    jl_Object__init_0($this);
    $this.$in = $in;
    $this.$out = $out;
}
function jnci_BufferedEncoder$Controller_hasMoreInput($this) {
    return jn_Buffer_hasRemaining($this.$in);
}
function jnci_BufferedEncoder$Controller_hasMoreInput0($this, $sz) {
    return jn_Buffer_remaining($this.$in) < $sz ? 0 : 1;
}
function jnci_BufferedEncoder$Controller_hasMoreOutput($this) {
    return jn_Buffer_hasRemaining($this.$out);
}
function jnci_BufferedEncoder$Controller_hasMoreOutput0($this, $sz) {
    return jn_Buffer_remaining($this.$out) < $sz ? 0 : 1;
}
function jnci_BufferedEncoder$Controller_setInPosition($this, $inPosition) {
    $this.$inPosition = $inPosition;
}
function jnci_BufferedEncoder$Controller_setOutPosition($this, $outPosition) {
    $this.$outPosition = $outPosition;
}
var cbgur_ClassReflection = $rt_classWithoutFields();
function cbgur_ClassReflection_getNoArgPublicConstructor($c) {
    var $constructors, var$3;
    $constructors = $c.$getConstructors();
    var$3 = $constructors.data;
    if (var$3.length <= 0)
        return null;
    return cbgur_Constructor__init_(var$3[0]);
}
function cbgur_ClassReflection_getConstructor($c, $parameterTypes) {
    var $constructor, var$4, $e, $$je;
    if ($parameterTypes !== null && $parameterTypes.data.length) {
        a: {
            b: {
                try {
                    $constructor = $c.$getConstructor($parameterTypes);
                    var$4 = cbgur_Constructor__init_($constructor);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_SecurityException) {
                        $e = $$je;
                        break a;
                    } else if ($$je instanceof jl_NoSuchMethodException) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return var$4;
            }
            $rt_throw(cbgur_ReflectionException__init_((((jl_StringBuilder__init_()).$append($rt_s(3))).$append($c.$getName())).$toString(), $e));
        }
        $rt_throw(cbgur_ReflectionException__init_(((((jl_StringBuilder__init_()).$append($rt_s(4))).$append($c.$getName())).$append($rt_s(5))).$toString(), $e));
    }
    return cbgur_ClassReflection_getNoArgPublicConstructor($c);
}
function cbgur_ClassReflection_getDeclaredConstructor($c, $parameterTypes) {
    var $declaredConstructor, var$4, $e, $$je;
    a: {
        try {
            $declaredConstructor = $c.$getDeclaredConstructor($parameterTypes);
            var$4 = cbgur_Constructor__init_($declaredConstructor);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_SecurityException) {
                $e = $$je;
                break a;
            } else if ($$je instanceof jl_NoSuchMethodException) {
                $e = $$je;
                $rt_throw(cbgur_ReflectionException__init_((((jl_StringBuilder__init_()).$append($rt_s(3))).$append($c.$getName())).$toString(), $e));
            } else {
                throw $$e;
            }
        }
        return var$4;
    }
    $rt_throw(cbgur_ReflectionException__init_((((jl_StringBuilder__init_()).$append($rt_s(6))).$append($c.$getName())).$toString(), $e));
}
var jl_AutoCloseable = $rt_classWithoutFields(0);
var ji_Closeable = $rt_classWithoutFields(0);
var ji_Flushable = $rt_classWithoutFields(0);
var ji_OutputStream = $rt_classWithoutFields();
function ji_OutputStream__init_($this) {
    jl_Object__init_0($this);
}
function ji_OutputStream_write($this, $b, $off, $len) {
    var $i, var$5, var$6;
    $i = 0;
    while ($i < $len) {
        var$5 = $b.data;
        var$6 = $off + 1 | 0;
        $this.$write(var$5[$off]);
        $i = $i + 1 | 0;
        $off = var$6;
    }
}
function ji_ByteArrayOutputStream() {
    var a = this; ji_OutputStream.call(a);
    a.$buf = null;
    a.$count0 = 0;
}
function ji_ByteArrayOutputStream__init_(var_0) {
    var var_1 = new ji_ByteArrayOutputStream();
    ji_ByteArrayOutputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_ByteArrayOutputStream__init_0($this, $size) {
    ji_OutputStream__init_($this);
    $this.$buf = $rt_createByteArray($size);
}
function ji_ByteArrayOutputStream_write($this, $b, $off, $len) {
    var $i, var$5, var$6, var$7, var$8;
    ji_ByteArrayOutputStream_ensureCapacity($this, $this.$count0 + $len | 0);
    $i = 0;
    while ($i < $len) {
        var$5 = $b.data;
        var$6 = $this.$buf.data;
        var$7 = $this.$count0;
        $this.$count0 = var$7 + 1 | 0;
        var$8 = $off + 1 | 0;
        var$6[var$7] = var$5[$off];
        $i = $i + 1 | 0;
        $off = var$8;
    }
}
function ji_ByteArrayOutputStream_ensureCapacity($this, $capacity) {
    var var$2;
    if ($this.$buf.data.length < $capacity) {
        var$2 = jl_Math_max($capacity, ($this.$buf.data.length * 3 | 0) / 2 | 0);
        $this.$buf = ju_Arrays_copyOf($this.$buf, var$2);
    }
}
function ji_ByteArrayOutputStream_toByteArray($this) {
    return ju_Arrays_copyOf($this.$buf, $this.$count0);
}
var cbgu_StreamUtils$OptimizedByteArrayOutputStream = $rt_classWithoutFields(ji_ByteArrayOutputStream);
function cbgu_StreamUtils$OptimizedByteArrayOutputStream__init_(var_0) {
    var var_1 = new cbgu_StreamUtils$OptimizedByteArrayOutputStream();
    cbgu_StreamUtils$OptimizedByteArrayOutputStream__init_0(var_1, var_0);
    return var_1;
}
function cbgu_StreamUtils$OptimizedByteArrayOutputStream__init_0($this, $initialSize) {
    ji_ByteArrayOutputStream__init_0($this, $initialSize);
}
function cbgu_StreamUtils$OptimizedByteArrayOutputStream_toByteArray($this) {
    jl_Object_monitorEnterSync($this);
    try {
        if ($this.$count0 != $this.$buf.data.length)
            return ji_ByteArrayOutputStream_toByteArray($this);
        return $this.$buf;
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
var ji_Serializable = $rt_classWithoutFields(0);
var jl_Number = $rt_classWithoutFields();
function jl_Number__init_($this) {
    jl_Object__init_0($this);
}
var jl_Comparable = $rt_classWithoutFields(0);
function jl_Integer() {
    jl_Number.call(this);
    this.$value = 0;
}
var jl_Integer_TYPE = null;
var jl_Integer_integerCache = null;
function jl_Integer_$callClinit() {
    jl_Integer_$callClinit = $rt_eraseClinit(jl_Integer);
    jl_Integer__clinit_();
}
function jl_Integer__init_(var_0) {
    var var_1 = new jl_Integer();
    jl_Integer__init_0(var_1, var_0);
    return var_1;
}
function jl_Integer__init_0($this, $value) {
    jl_Integer_$callClinit();
    jl_Number__init_($this);
    $this.$value = $value;
}
function jl_Integer_toString($i, $radix) {
    jl_Integer_$callClinit();
    if (!($radix >= 2 && $radix <= 36))
        $radix = 10;
    return ((jl_AbstractStringBuilder__init_(20)).$append1($i, $radix)).$toString();
}
function jl_Integer_hashCode($value) {
    jl_Integer_$callClinit();
    return $value >>> 4 ^ $value << 28 ^ $value << 8 ^ $value >>> 24;
}
function jl_Integer_toHexString($i) {
    jl_Integer_$callClinit();
    return otci_IntegerUtil_toUnsignedLogRadixString($i, 4);
}
function jl_Integer_toString0($i) {
    jl_Integer_$callClinit();
    return jl_Integer_toString($i, 10);
}
function jl_Integer_parseInt($s, $radix) {
    var $negative, $index, $value, var$6, $digit;
    jl_Integer_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        if ($s !== null && !$s.$isEmpty()) {
            a: {
                $negative = 0;
                $index = 0;
                switch ($s.$charAt(0)) {
                    case 43:
                        $index = 1;
                        break a;
                    case 45:
                        $negative = 1;
                        $index = 1;
                        break a;
                    default:
                }
            }
            $value = 0;
            if ($index == $s.$length())
                $rt_throw(jl_NumberFormatException__init_());
            while ($index < $s.$length()) {
                var$6 = $index + 1 | 0;
                $digit = jl_Character_getNumericValue($s.$charAt($index));
                if ($digit < 0)
                    $rt_throw(jl_NumberFormatException__init_0((((jl_StringBuilder__init_()).$append($rt_s(7))).$append($s)).$toString()));
                if ($digit >= $radix)
                    $rt_throw(jl_NumberFormatException__init_0((((((jl_StringBuilder__init_()).$append($rt_s(8))).$append0($radix)).$append($rt_s(9))).$append($s)).$toString()));
                $value = $rt_imul($radix, $value) + $digit | 0;
                if ($value < 0) {
                    if (var$6 == $s.$length() && $value == (-2147483648) && $negative)
                        return (-2147483648);
                    $rt_throw(jl_NumberFormatException__init_0((((jl_StringBuilder__init_()).$append($rt_s(10))).$append($s)).$toString()));
                }
                $index = var$6;
            }
            if ($negative)
                $value =  -$value | 0;
            return $value;
        }
        $rt_throw(jl_NumberFormatException__init_0($rt_s(11)));
    }
    $rt_throw(jl_NumberFormatException__init_0((((jl_StringBuilder__init_()).$append($rt_s(12))).$append0($radix)).$toString()));
}
function jl_Integer_valueOf($i) {
    jl_Integer_$callClinit();
    if ($i >= (-128) && $i <= 127) {
        jl_Integer_ensureIntegerCache();
        return jl_Integer_integerCache.data[$i + 128 | 0];
    }
    return jl_Integer__init_($i);
}
function jl_Integer_ensureIntegerCache() {
    var $j;
    jl_Integer_$callClinit();
    a: {
        if (jl_Integer_integerCache === null) {
            jl_Integer_integerCache = $rt_createArray(jl_Integer, 256);
            $j = 0;
            while (true) {
                if ($j >= jl_Integer_integerCache.data.length)
                    break a;
                jl_Integer_integerCache.data[$j] = jl_Integer__init_($j - 128 | 0);
                $j = $j + 1 | 0;
            }
        }
    }
}
function jl_Integer_intValue($this) {
    return $this.$value;
}
function jl_Integer_toString1($this) {
    return jl_Integer_toString0($this.$value);
}
function jl_Integer_hashCode0($this) {
    return jl_Integer_hashCode($this.$value);
}
function jl_Integer_equals($this, $other) {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Integer && $other.$value == $this.$value ? 1 : 0;
}
function jl_Integer_numberOfLeadingZeros($i) {
    var $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i >>> 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 >>> 8;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 >>> 4;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 >>> 2;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 >>> 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer_numberOfTrailingZeros($i) {
    var $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i << 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 << 8;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 << 4;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 << 2;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 << 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer_rotateLeft($i, $distance) {
    var var$3;
    jl_Integer_$callClinit();
    var$3 = $distance & 31;
    return $i << var$3 | $i >>> (32 - var$3 | 0);
}
function jl_Integer__clinit_() {
    jl_Integer_TYPE = $rt_cls($rt_intcls());
}
var jl_AbstractStringBuilder$Constants = $rt_classWithoutFields();
var jl_AbstractStringBuilder$Constants_intPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null;
var jl_AbstractStringBuilder$Constants_floatAnalysisResult = null;
function jl_AbstractStringBuilder$Constants_$callClinit() {
    jl_AbstractStringBuilder$Constants_$callClinit = $rt_eraseClinit(jl_AbstractStringBuilder$Constants);
    jl_AbstractStringBuilder$Constants__clinit_();
}
function jl_AbstractStringBuilder$Constants__clinit_() {
    jl_AbstractStringBuilder$Constants_intPowersOfTen = $rt_createIntArrayFromData([1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]);
    jl_AbstractStringBuilder$Constants_longPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(1000), Long_fromInt(10000), Long_fromInt(100000), Long_fromInt(1000000), Long_fromInt(10000000), Long_fromInt(100000000), Long_fromInt(1000000000), Long_create(1410065408, 2), Long_create(1215752192, 23), Long_create(3567587328, 232), Long_create(1316134912, 2328), Long_create(276447232, 23283), Long_create(2764472320, 232830), Long_create(1874919424, 2328306),
    Long_create(1569325056, 23283064), Long_create(2808348672, 232830643)]);
    jl_AbstractStringBuilder$Constants_longLogPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(10000), Long_fromInt(100000000), Long_create(1874919424, 2328306)]);
    jl_AbstractStringBuilder$Constants_doubleAnalysisResult = otcit_DoubleAnalyzer$Result__init_();
    jl_AbstractStringBuilder$Constants_floatAnalysisResult = otcit_FloatAnalyzer$Result__init_();
}
var cbgu_Disposable = $rt_classWithoutFields(0);
var cbgggf_FreeType$Stroker = $rt_classWithoutFields(cbgggf_FreeType$Pointer);
function cbgggf_FreeType$Stroker__init_(var_0) {
    var var_1 = new cbgggf_FreeType$Stroker();
    cbgggf_FreeType$Stroker__init_0(var_1, var_0);
    return var_1;
}
function cbgggf_FreeType$Stroker__init_0($this, $address) {
    cbgggf_FreeType$Pointer__init_0($this, $address);
}
function cbgggf_FreeType$Stroker_set($this, $radius, $lineCap, $lineJoin, $miterLimit) {
    Module._c_Stroker_set($this.$address, $radius, $lineCap, $lineJoin, $miterLimit);
}
function cbgggf_FreeType$Stroker_dispose($this) {
    Module._c_Stroker_done($this.$address);
}
function jur_AbstractSet() {
    var a = this; jl_Object.call(a);
    a.$next = null;
    a.$isSecondPassVisited = 0;
    a.$index = null;
    a.$type = 0;
}
var jur_AbstractSet_counter = 0;
function jur_AbstractSet_$callClinit() {
    jur_AbstractSet_$callClinit = $rt_eraseClinit(jur_AbstractSet);
    jur_AbstractSet__clinit_();
}
function jur_AbstractSet__init_($this) {
    var var$1, var$2;
    jur_AbstractSet_$callClinit();
    jl_Object__init_0($this);
    var$1 = new jl_Integer;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    jl_Integer__init_0(var$1, var$2);
    $this.$index = var$1.$toString();
}
function jur_AbstractSet__init_0($this, $n) {
    var var$2, var$3;
    jur_AbstractSet_$callClinit();
    jl_Object__init_0($this);
    var$2 = new jl_Integer;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    jl_Integer__init_0(var$2, var$3);
    $this.$index = var$2.$toString();
    $this.$next = $n;
}
function jur_AbstractSet_find($this, $stringIndex, $testString, $matchResult) {
    var $length;
    $length = $matchResult.$getRightBound();
    while (true) {
        if ($stringIndex > $length)
            return (-1);
        if ($this.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
}
function jur_AbstractSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($this.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
}
function jur_AbstractSet_setType($this, $type) {
    $this.$type = $type;
}
function jur_AbstractSet_getType($this) {
    return $this.$type;
}
function jur_AbstractSet_getNext($this) {
    return $this.$next;
}
function jur_AbstractSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_AbstractSet_first($this, $set) {
    return 1;
}
function jur_AbstractSet_processBackRefReplacement($this) {
    return null;
}
function jur_AbstractSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next !== null) {
        if (!$this.$next.$isSecondPassVisited) {
            $set = $this.$next.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next.$isSecondPassVisited = 1;
                $this.$next = $set;
            }
            $this.$next.$processSecondPass();
        } else if ($this.$next instanceof jur_SingleSet && $this.$next.$fSet.$isBackReferenced)
            $this.$next = $this.$next.$next;
    }
}
function jur_AbstractSet__clinit_() {
    jur_AbstractSet_counter = 1;
}
function jur_JointSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$children = null;
    a.$fSet = null;
    a.$groupIndex = 0;
}
function jur_JointSet__init_() {
    var var_0 = new jur_JointSet();
    jur_JointSet__init_0(var_0);
    return var_0;
}
function jur_JointSet__init_1(var_0, var_1) {
    var var_2 = new jur_JointSet();
    jur_JointSet__init_2(var_2, var_0, var_1);
    return var_2;
}
function jur_JointSet__init_0($this) {
    jur_AbstractSet__init_($this);
}
function jur_JointSet__init_2($this, $children, $fSet) {
    jur_AbstractSet__init_($this);
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex = $fSet.$getGroupIndex();
}
function jur_JointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    if ($this.$children === null)
        return (-1);
    $start = $matchResult.$getStart($this.$groupIndex);
    $matchResult.$setStart($this.$groupIndex, $stringIndex);
    $size = $this.$children.$size();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setStart($this.$groupIndex, $start);
            return (-1);
        }
        $e = $this.$children.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
}
function jur_JointSet_setNext($this, $next) {
    $this.$fSet.$setNext($next);
}
function jur_JointSet_first($this, $set) {
    var $i;
    a: {
        if ($this.$children !== null) {
            $i = $this.$children.$iterator();
            while (true) {
                if (!$i.$hasNext())
                    break a;
                if (!($i.$next0()).$first($set))
                    continue;
                else
                    return 1;
            }
        }
    }
    return 0;
}
function jur_JointSet_hasConsumed($this, $matchResult) {
    var var$2, var$3;
    a: {
        if ($matchResult.$getEnd($this.$groupIndex) >= 0) {
            var$2 = $matchResult.$getStart($this.$groupIndex);
            var$3 = $this.$groupIndex;
            if (var$2 == $matchResult.$getEnd(var$3)) {
                var$2 = 0;
                break a;
            }
        }
        var$2 = 1;
    }
    return var$2;
}
function jur_JointSet_processSecondPass($this) {
    var $childrenSize, $i, $child, $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    a: {
        if ($this.$children !== null) {
            $childrenSize = $this.$children.$size();
            $i = 0;
            while (true) {
                if ($i >= $childrenSize)
                    break a;
                $child = $this.$children.$get($i);
                $set = $child.$processBackRefReplacement();
                if ($set === null)
                    $set = $child;
                else {
                    $child.$isSecondPassVisited = 1;
                    $this.$children.$remove($i);
                    $this.$children.$add1($i, $set);
                }
                if (!$set.$isSecondPassVisited)
                    $set.$processSecondPass();
                $i = $i + 1 | 0;
            }
        }
    }
    if ($this.$next !== null)
        jur_AbstractSet_processSecondPass($this);
}
function jur_SingleSet() {
    jur_JointSet.call(this);
    this.$kid = null;
}
function jur_SingleSet__init_(var_0, var_1) {
    var var_2 = new jur_SingleSet();
    jur_SingleSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_SingleSet__init_0($this, $child, $fSet) {
    jur_JointSet__init_0($this);
    $this.$kid = $child;
    $this.$fSet = $fSet;
    $this.$groupIndex = $fSet.$getGroupIndex();
}
function jur_SingleSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $shift;
    $start = $matchResult.$getStart($this.$groupIndex);
    $matchResult.$setStart($this.$groupIndex, $stringIndex);
    $shift = $this.$kid.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    $matchResult.$setStart($this.$groupIndex, $start);
    return (-1);
}
function jur_SingleSet_find($this, $stringIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$find($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex, $res);
    return $res;
}
function jur_SingleSet_findBack($this, $stringIndex, $lastIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex, $res);
    return $res;
}
function jur_SingleSet_first($this, $set) {
    return $this.$kid.$first($set);
}
function jur_SingleSet_processBackRefReplacement($this) {
    var $set;
    $set = jur_BackReferencedSingleSet__init_($this);
    $this.$next = $set;
    return $set;
}
function jur_SingleSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    if ($this.$kid !== null && !$this.$kid.$isSecondPassVisited) {
        $set = $this.$kid.$processBackRefReplacement();
        if ($set !== null) {
            $this.$kid.$isSecondPassVisited = 1;
            $this.$kid = $set;
        }
        $this.$kid.$processSecondPass();
    }
}
function jnc_CharsetEncoder() {
    var a = this; jl_Object.call(a);
    a.$charset = null;
    a.$replacement = null;
    a.$averageBytesPerChar = 0.0;
    a.$maxBytesPerChar = 0.0;
    a.$malformedAction = null;
    a.$unmappableAction = null;
    a.$status = 0;
}
function jnc_CharsetEncoder__init_($this, $cs, $averageBytesPerChar, $maxBytesPerChar, $replacement) {
    jl_Object__init_0($this);
    jnc_CodingErrorAction_$callClinit();
    $this.$malformedAction = jnc_CodingErrorAction_REPORT;
    $this.$unmappableAction = jnc_CodingErrorAction_REPORT;
    jnc_CharsetEncoder_checkReplacement($this, $replacement);
    $this.$charset = $cs;
    $this.$replacement = $replacement.$clone();
    $this.$averageBytesPerChar = $averageBytesPerChar;
    $this.$maxBytesPerChar = $maxBytesPerChar;
}
function jnc_CharsetEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar) {
    var var$4;
    var$4 = $rt_createByteArray(1);
    var$4.data[0] = 63;
    jnc_CharsetEncoder__init_($this, $cs, $averageBytesPerChar, $maxBytesPerChar, var$4);
}
function jnc_CharsetEncoder_checkReplacement($this, $replacement) {
    var var$2;
    if ($replacement !== null) {
        var$2 = $replacement.data.length;
        if (var$2 && var$2 >= $this.$maxBytesPerChar)
            return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(13)));
}
function jnc_CharsetEncoder_onMalformedInput($this, $newAction) {
    if ($newAction !== null) {
        $this.$malformedAction = $newAction;
        $this.$implOnMalformedInput($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(14)));
}
function jnc_CharsetEncoder_implOnMalformedInput($this, $newAction) {}
function jnc_CharsetEncoder_onUnmappableCharacter($this, $newAction) {
    if ($newAction !== null) {
        $this.$unmappableAction = $newAction;
        $this.$implOnUnmappableCharacter($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(14)));
}
function jnc_CharsetEncoder_implOnUnmappableCharacter($this, $newAction) {}
function jnc_CharsetEncoder_encode($this, $in, $out, $endOfInput) {
    var $result, $e, $remaining, $action, $$je;
    a: {
        if ($this.$status != 3) {
            if ($endOfInput)
                break a;
            if ($this.$status != 2)
                break a;
        }
        $rt_throw(jl_IllegalStateException__init_0());
    }
    $this.$status = !$endOfInput ? 1 : 2;
    while (true) {
        try {
            $result = $this.$encodeLoop($in, $out);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                $rt_throw(jnc_CoderMalfunctionError__init_($e));
            } else {
                throw $$e;
            }
        }
        if ($result.$isUnderflow()) {
            if (!$endOfInput)
                return $result;
            $remaining = jn_Buffer_remaining($in);
            if ($remaining <= 0)
                return $result;
            $result = jnc_CoderResult_malformedForLength($remaining);
        } else if ($result.$isOverflow())
            break;
        $action = !$result.$isUnmappable() ? $this.$malformedAction : $this.$unmappableAction;
        b: {
            jnc_CodingErrorAction_$callClinit();
            if ($action !== jnc_CodingErrorAction_REPLACE) {
                if ($action === jnc_CodingErrorAction_IGNORE)
                    break b;
                else
                    return $result;
            }
            if (jn_Buffer_remaining($out) < $this.$replacement.data.length)
                return jnc_CoderResult_OVERFLOW;
            jn_ByteBuffer_put($out, $this.$replacement);
        }
        $in.$position(jn_Buffer_position($in) + $result.$length() | 0);
    }
    return $result;
}
function jnc_CharsetEncoder_encode0($this, $in) {
    var $output, $result, var$4;
    if (!jn_Buffer_remaining($in))
        return jn_ByteBuffer_allocate(0);
    jnc_CharsetEncoder_reset($this);
    $output = jn_ByteBuffer_allocate(jn_Buffer_remaining($in) * $this.$averageBytesPerChar | 0);
    while (true) {
        $result = jnc_CharsetEncoder_encode($this, $in, $output, 0);
        jnc_CoderResult_$callClinit();
        if ($result === jnc_CoderResult_UNDERFLOW)
            break;
        if ($result === jnc_CoderResult_OVERFLOW) {
            $output = jnc_CharsetEncoder_allocateMore($this, $output);
            continue;
        }
        if (!$result.$isError())
            continue;
        $result.$throwException();
    }
    var$4 = jnc_CharsetEncoder_encode($this, $in, $output, 1);
    if (var$4.$isError())
        var$4.$throwException();
    while (true) {
        var$4 = jnc_CharsetEncoder_flush($this, $output);
        if (var$4.$isUnderflow())
            break;
        if (!var$4.$isOverflow())
            continue;
        $output = jnc_CharsetEncoder_allocateMore($this, $output);
    }
    jn_ByteBuffer_flip($output);
    return $output;
}
function jnc_CharsetEncoder_allocateMore($this, $buffer) {
    var $array, var$3, $result;
    $array = jn_ByteBuffer_array($buffer);
    var$3 = $array.data;
    var$3 = ju_Arrays_copyOf($array, var$3.length * 2 | 0);
    $result = jn_ByteBuffer_wrap(var$3);
    $result.$position1(jn_Buffer_position($buffer));
    return $result;
}
function jnc_CharsetEncoder_flush($this, $out) {
    var $result;
    if ($this.$status != 2 && $this.$status != 4)
        $rt_throw(jl_IllegalStateException__init_0());
    $result = $this.$implFlush($out);
    jnc_CoderResult_$callClinit();
    if ($result === jnc_CoderResult_UNDERFLOW)
        $this.$status = 3;
    return $result;
}
function jnc_CharsetEncoder_implFlush($this, $out) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult_UNDERFLOW;
}
function jnc_CharsetEncoder_reset($this) {
    $this.$status = 0;
    $this.$implReset();
    return $this;
}
function jnc_CharsetEncoder_implReset($this) {}
function jnci_BufferedEncoder() {
    var a = this; jnc_CharsetEncoder.call(a);
    a.$inArray = null;
    a.$outArray = null;
}
function jnci_BufferedEncoder__init_($this, $cs, $averageBytesPerChar, $maxBytesPerChar) {
    jnc_CharsetEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar);
    $this.$inArray = $rt_createCharArray(512);
    $this.$outArray = $rt_createByteArray(512);
}
function jnci_BufferedEncoder_encodeLoop($this, $in, $out) {
    var $inArray, $inPos, $inSize, $outArray, $i, var$8, var$9, $result, $outPos, $outSize, $controller;
    $inArray = $this.$inArray;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                var$9 = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + var$9 | 0, var$8.length);
                $in.$get0($inArray, var$9, $inSize - var$9 | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                } else {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                }
                break a;
            }
            var$8 = $outArray.data;
            $outPos = 0;
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$8.length);
            $controller = jnci_BufferedEncoder$Controller__init_($in, $out);
            $result = $this.$arrayEncode($inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
            $inPos = $controller.$inPosition;
            var$9 = $controller.$outPosition;
            if ($result === null) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                } else if (!jn_Buffer_hasRemaining($out) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                }
            }
            $out.$put0($outArray, 0, var$9);
            if ($result !== null)
                break;
        }
    }
    $in.$position(jn_Buffer_position($in) - ($inSize - $inPos | 0) | 0);
    return $result;
}
function jnci_UTF16Encoder() {
    var a = this; jnci_BufferedEncoder.call(a);
    a.$bom = 0;
    a.$littleEndian = 0;
}
function jnci_UTF16Encoder__init_(var_0, var_1, var_2) {
    var var_3 = new jnci_UTF16Encoder();
    jnci_UTF16Encoder__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnci_UTF16Encoder__init_0($this, $cs, $bom, $littleEndian) {
    jnci_BufferedEncoder__init_($this, $cs, 2.0, 4.0);
    $this.$bom = $bom;
    $this.$littleEndian = $littleEndian;
}
function jnci_UTF16Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var var$8, var$9, var$10;
    if ($this.$bom) {
        if (($outPos + 2 | 0) > $outSize) {
            if ($controller.$hasMoreOutput())
                var$8 = null;
            else {
                jnc_CoderResult_$callClinit();
                var$8 = jnc_CoderResult_OVERFLOW;
            }
            return var$8;
        }
        $this.$bom = 0;
        if (!$this.$littleEndian) {
            var$9 = $outArray.data;
            var$10 = $outPos + 1 | 0;
            var$9[$outPos] = (-2);
            $outPos = var$10 + 1 | 0;
            var$9[var$10] = (-1);
        } else {
            var$9 = $outArray.data;
            var$10 = $outPos + 1 | 0;
            var$9[$outPos] = (-1);
            $outPos = var$10 + 1 | 0;
            var$9[var$10] = (-2);
        }
    }
    return !$this.$littleEndian ? jnci_UTF16Encoder_arrayEncodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) : jnci_UTF16Encoder_arrayEncodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
}
function jnci_UTF16Encoder_arrayEncodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, var$12, $next, var$14;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $c = var$9[$inPos];
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = var$10 + (-1) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = ($c & 255) << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = $c >> 8 << 24 >> 24;
                $inPos = var$10;
            } else {
                if (var$10 == $inSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreInput(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $inPos = var$10 + 1 | 0;
                $next = var$9[var$10];
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    $inPos = $inPos + (-2) | 0;
                    if ($controller.$hasMoreOutput0(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = ($c & 255) << 24 >> 24;
                var$14 = var$12 + 1 | 0;
                var$9[var$12] = $c >> 8 << 24 >> 24;
                var$12 = var$14 + 1 | 0;
                var$9[var$14] = ($next & 255) << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = $next >> 8 << 24 >> 24;
            }
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
}
function jnci_UTF16Encoder_arrayEncodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, var$12, $next, var$14;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $c = var$9[$inPos];
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = var$10 + (-1) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = $c >> 8 << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = ($c & 255) << 24 >> 24;
                $inPos = var$10;
            } else {
                if (var$10 == $inSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreInput(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $inPos = var$10 + 1 | 0;
                $next = var$9[var$10];
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    $inPos = $inPos + (-2) | 0;
                    if ($controller.$hasMoreOutput0(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = $c >> 8 << 24 >> 24;
                var$14 = var$12 + 1 | 0;
                var$9[var$12] = ($c & 255) << 24 >> 24;
                var$12 = var$14 + 1 | 0;
                var$9[var$14] = $next >> 8 << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = ($next & 255) << 24 >> 24;
            }
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
}
var jl_Runnable = $rt_classWithoutFields(0);
function jl_Thread() {
    var a = this; jl_Object.call(a);
    a.$id = Long_ZERO;
    a.$timeSliceStart = Long_ZERO;
    a.$finishedLock = null;
    a.$name = null;
    a.$alive = 0;
    a.$target = null;
}
var jl_Thread_mainThread = null;
var jl_Thread_currentThread0 = null;
var jl_Thread_nextId = 0;
var jl_Thread_activeCount = 0;
var jl_Thread_defaultUncaughtExceptionHandler = null;
function jl_Thread_$callClinit() {
    jl_Thread_$callClinit = $rt_eraseClinit(jl_Thread);
    jl_Thread__clinit_();
}
function jl_Thread__init_(var_0) {
    var var_1 = new jl_Thread();
    jl_Thread__init_0(var_1, var_0);
    return var_1;
}
function jl_Thread__init_1(var_0, var_1) {
    var var_2 = new jl_Thread();
    jl_Thread__init_2(var_2, var_0, var_1);
    return var_2;
}
function jl_Thread__init_0($this, $name) {
    jl_Thread_$callClinit();
    jl_Thread__init_2($this, null, $name);
}
function jl_Thread__init_2($this, $target, $name) {
    var var$3;
    jl_Thread_$callClinit();
    jl_Object__init_0($this);
    $this.$finishedLock = jl_Object__init_();
    $this.$alive = 1;
    $this.$name = $name;
    $this.$target = $target;
    var$3 = jl_Thread_nextId;
    jl_Thread_nextId = var$3 + 1 | 0;
    $this.$id = Long_fromInt(var$3);
}
function jl_Thread_setCurrentThread($thread_0) {
    jl_Thread_$callClinit();
    if (jl_Thread_currentThread0 !== $thread_0)
        jl_Thread_currentThread0 = $thread_0;
    jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
}
function jl_Thread_currentThread() {
    jl_Thread_$callClinit();
    return jl_Thread_currentThread0;
}
function jl_Thread__clinit_() {
    jl_Thread_mainThread = jl_Thread__init_($rt_s(15));
    jl_Thread_currentThread0 = jl_Thread_mainThread;
    jl_Thread_nextId = 1;
    jl_Thread_activeCount = 1;
    jl_Thread_defaultUncaughtExceptionHandler = jl_DefaultUncaughtExceptionHandler__init_();
}
var jur_AbstractCharClass$LazyAlpha = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyAlpha__init_() {
    var var_0 = new jur_AbstractCharClass$LazyAlpha();
    jur_AbstractCharClass$LazyAlpha__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlpha__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyAlpha_computeValue($this) {
    return ((jur_CharClass__init_()).$add0(97, 122)).$add0(65, 90);
}
var jur_BackReferencedSingleSet = $rt_classWithoutFields(jur_SingleSet);
function jur_BackReferencedSingleSet__init_(var_0) {
    var var_1 = new jur_BackReferencedSingleSet();
    jur_BackReferencedSingleSet__init_0(var_1, var_0);
    return var_1;
}
function jur_BackReferencedSingleSet__init_0($this, $node) {
    jur_SingleSet__init_0($this, $node.$kid, $node.$fSet);
}
function jur_BackReferencedSingleSet_find($this, $startSearch, $testString, $matchResult) {
    var $res, $lastIndex, $saveStart;
    $res = 0;
    $lastIndex = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($startSearch > $lastIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex);
            $matchResult.$setStart($this.$groupIndex, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex, $saveStart);
            $startSearch = $startSearch + 1 | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $res, $saveStart;
    $res = 0;
    a: {
        while (true) {
            if ($startSearch < $stringIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex);
            $matchResult.$setStart($this.$groupIndex, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex, $saveStart);
            $startSearch = $startSearch + (-1) | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_processBackRefReplacement($this) {
    return null;
}
function jl_Throwable() {
    var a = this; jl_Object.call(a);
    a.$message = null;
    a.$cause = null;
    a.$suppressionEnabled = 0;
    a.$writableStackTrace = 0;
    a.$stackTrace = null;
}
function jl_Throwable__init_() {
    var var_0 = new jl_Throwable();
    jl_Throwable__init_0(var_0);
    return var_0;
}
function jl_Throwable__init_1(var_0) {
    var var_1 = new jl_Throwable();
    jl_Throwable__init_2(var_1, var_0);
    return var_1;
}
function jl_Throwable__init_3(var_0, var_1) {
    var var_2 = new jl_Throwable();
    jl_Throwable__init_4(var_2, var_0, var_1);
    return var_2;
}
function jl_Throwable__init_5(var_0) {
    var var_1 = new jl_Throwable();
    jl_Throwable__init_6(var_1, var_0);
    return var_1;
}
function jl_Throwable__init_0($this) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
}
function jl_Throwable__init_2($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message = $message;
}
function jl_Throwable__init_4($this, $message, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message = $message;
    $this.$cause = $cause;
}
function jl_Throwable__init_6($this, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$cause = $cause;
}
function jl_Throwable_fillInStackTrace($this) {
    return $this;
}
function jl_Throwable_getMessage($this) {
    return $this.$message;
}
function jl_Throwable_getLocalizedMessage($this) {
    return $this.$getMessage();
}
function jl_Throwable_printStackTrace($this) {
    $this.$printStackTrace(jl_System_err());
}
function jl_Throwable_printStackTrace0($this, $stream) {
    var $message, var$3, var$4, var$5, $element;
    $stream.$print((jl_Object_getClass($this)).$getName());
    $message = $this.$getLocalizedMessage();
    if ($message !== null)
        $stream.$print((((jl_StringBuilder__init_()).$append($rt_s(9))).$append($message)).$toString());
    a: {
        $stream.$println();
        if ($this.$stackTrace !== null) {
            var$3 = $this.$stackTrace.data;
            var$4 = var$3.length;
            var$5 = 0;
            while (true) {
                if (var$5 >= var$4)
                    break a;
                $element = var$3[var$5];
                $stream.$print($rt_s(16));
                $stream.$println0($element);
                var$5 = var$5 + 1 | 0;
            }
        }
    }
    if ($this.$cause !== null && $this.$cause !== $this) {
        $stream.$print($rt_s(17));
        $this.$cause.$printStackTrace($stream);
    }
}
var jl_Exception = $rt_classWithoutFields(jl_Throwable);
function jl_Exception__init_() {
    var var_0 = new jl_Exception();
    jl_Exception__init_0(var_0);
    return var_0;
}
function jl_Exception__init_1(var_0, var_1) {
    var var_2 = new jl_Exception();
    jl_Exception__init_2(var_2, var_0, var_1);
    return var_2;
}
function jl_Exception__init_3(var_0) {
    var var_1 = new jl_Exception();
    jl_Exception__init_4(var_1, var_0);
    return var_1;
}
function jl_Exception__init_5(var_0) {
    var var_1 = new jl_Exception();
    jl_Exception__init_6(var_1, var_0);
    return var_1;
}
function jl_Exception__init_0($this) {
    jl_Throwable__init_0($this);
}
function jl_Exception__init_2($this, $message, $cause) {
    jl_Throwable__init_4($this, $message, $cause);
}
function jl_Exception__init_4($this, $message) {
    jl_Throwable__init_2($this, $message);
}
function jl_Exception__init_6($this, $cause) {
    jl_Throwable__init_6($this, $cause);
}
var jl_RuntimeException = $rt_classWithoutFields(jl_Exception);
function jl_RuntimeException__init_0() {
    var var_0 = new jl_RuntimeException();
    jl_RuntimeException__init_1(var_0);
    return var_0;
}
function jl_RuntimeException__init_2(var_0, var_1) {
    var var_2 = new jl_RuntimeException();
    jl_RuntimeException__init_3(var_2, var_0, var_1);
    return var_2;
}
function jl_RuntimeException__init_(var_0) {
    var var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_4(var_1, var_0);
    return var_1;
}
function jl_RuntimeException__init_5(var_0) {
    var var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_6(var_1, var_0);
    return var_1;
}
function jl_RuntimeException__init_1($this) {
    jl_Exception__init_0($this);
}
function jl_RuntimeException__init_3($this, $message, $cause) {
    jl_Exception__init_2($this, $message, $cause);
}
function jl_RuntimeException__init_4($this, $message) {
    jl_Exception__init_4($this, $message);
}
function jl_RuntimeException__init_6($this, $cause) {
    jl_Exception__init_6($this, $cause);
}
var jnc_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException);
function jnc_BufferOverflowException__init_() {
    var var_0 = new jnc_BufferOverflowException();
    jnc_BufferOverflowException__init_0(var_0);
    return var_0;
}
function jnc_BufferOverflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
var otj_JSObject = $rt_classWithoutFields(0);
function otj_JSObject_cast$static($this) {
    return $this;
}
var otp_PlatformQueue = $rt_classWithoutFields();
function otp_PlatformQueue_wrap($obj) {
    return $obj;
}
function otp_PlatformQueue_isEmpty$static($this) {
    return $this.length ? 0 : 1;
}
function otp_PlatformQueue_add$static($this, $e) {
    var var$3;
    var$3 = otp_PlatformQueue_wrap($e);
    $this.push(var$3);
}
function otp_PlatformQueue_remove$static($this) {
    return $this.shift();
}
var jur_AbstractCharClass$LazyWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyWord__init_() {
    var var_0 = new jur_AbstractCharClass$LazyWord();
    jur_AbstractCharClass$LazyWord__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyWord__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyWord_computeValue($this) {
    return ((((jur_CharClass__init_()).$add0(97, 122)).$add0(65, 90)).$add0(48, 57)).$add(95);
}
var jur_AbstractCharClass$LazyNonWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyWord);
function jur_AbstractCharClass$LazyNonWord__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonWord();
    jur_AbstractCharClass$LazyNonWord__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonWord__init_0($this) {
    jur_AbstractCharClass$LazyWord__init_0($this);
}
function jur_AbstractCharClass$LazyNonWord_computeValue($this) {
    var $chCl;
    $chCl = (jur_AbstractCharClass$LazyWord_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jl_Enum() {
    var a = this; jl_Object.call(a);
    a.$name0 = null;
    a.$ordinal = 0;
}
function jl_Enum__init_($this, $name, $ordinal) {
    jl_Object__init_0($this);
    $this.$name0 = $name;
    $this.$ordinal = $ordinal;
}
function jl_Enum_name($this) {
    return $this.$name0;
}
function jl_Enum_ordinal($this) {
    return $this.$ordinal;
}
function jl_Enum_toString($this) {
    return $this.$name0.$toString();
}
var cbg_Application$ApplicationType = $rt_classWithoutFields(jl_Enum);
var cbg_Application$ApplicationType_Android = null;
var cbg_Application$ApplicationType_Desktop = null;
var cbg_Application$ApplicationType_HeadlessDesktop = null;
var cbg_Application$ApplicationType_Applet = null;
var cbg_Application$ApplicationType_WebGL = null;
var cbg_Application$ApplicationType_iOS = null;
var cbg_Application$ApplicationType_$VALUES = null;
function cbg_Application$ApplicationType_$callClinit() {
    cbg_Application$ApplicationType_$callClinit = $rt_eraseClinit(cbg_Application$ApplicationType);
    cbg_Application$ApplicationType__clinit_();
}
function cbg_Application$ApplicationType__init_(var_0, var_1) {
    var var_2 = new cbg_Application$ApplicationType();
    cbg_Application$ApplicationType__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbg_Application$ApplicationType_values() {
    cbg_Application$ApplicationType_$callClinit();
    return cbg_Application$ApplicationType_$VALUES.$clone();
}
function cbg_Application$ApplicationType__init_0($this, var$1, var$2) {
    cbg_Application$ApplicationType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbg_Application$ApplicationType__clinit_() {
    cbg_Application$ApplicationType_Android = cbg_Application$ApplicationType__init_($rt_s(18), 0);
    cbg_Application$ApplicationType_Desktop = cbg_Application$ApplicationType__init_($rt_s(19), 1);
    cbg_Application$ApplicationType_HeadlessDesktop = cbg_Application$ApplicationType__init_($rt_s(20), 2);
    cbg_Application$ApplicationType_Applet = cbg_Application$ApplicationType__init_($rt_s(21), 3);
    cbg_Application$ApplicationType_WebGL = cbg_Application$ApplicationType__init_($rt_s(22), 4);
    cbg_Application$ApplicationType_iOS = cbg_Application$ApplicationType__init_($rt_s(23), 5);
    cbg_Application$ApplicationType_$VALUES = $rt_createArrayFromData(cbg_Application$ApplicationType, [cbg_Application$ApplicationType_Android, cbg_Application$ApplicationType_Desktop, cbg_Application$ApplicationType_HeadlessDesktop, cbg_Application$ApplicationType_Applet, cbg_Application$ApplicationType_WebGL, cbg_Application$ApplicationType_iOS]);
}
var cgxgbwp_AssetDownloader = $rt_classWithoutFields();
var cgxgbwp_AssetDownloader_instance = null;
function cgxgbwp_AssetDownloader_getInstance() {
    return cgxgbwp_AssetDownloader_instance;
}
function cgxgbwp_AssetDownloader_setInstance($instance) {
    cgxgbwp_AssetDownloader_instance = $instance;
}
function jur_LeafSet() {
    jur_AbstractSet.call(this);
    this.$charCount = 0;
}
function jur_LeafSet__init_($this, $next) {
    jur_AbstractSet__init_0($this, $next);
    $this.$charCount = 1;
    $this.$setType(1);
}
function jur_LeafSet__init_0($this) {
    jur_AbstractSet__init_($this);
    $this.$charCount = 1;
}
function jur_LeafSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    if (($stringIndex + $this.$charCount0() | 0) > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $shift = $this.$accepts($stringIndex, $testString);
    if ($shift < 0)
        return (-1);
    return $this.$next.$matches($stringIndex + $shift | 0, $testString, $matchResult);
}
function jur_LeafSet_charCount($this) {
    return $this.$charCount;
}
function jur_LeafSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_CISequenceSet() {
    jur_LeafSet.call(this);
    this.$string = null;
}
function jur_CISequenceSet__init_(var_0) {
    var var_1 = new jur_CISequenceSet();
    jur_CISequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CISequenceSet__init_0($this, $substring) {
    jur_LeafSet__init_0($this);
    $this.$string = $substring.$toString();
    $this.$charCount = $substring.$length();
}
function jur_CISequenceSet_accepts($this, $strIndex, $testString) {
    var $i, var$4, var$5, var$6;
    $i = 0;
    while (true) {
        if ($i >= $this.$string.$length())
            return $this.$string.$length();
        var$4 = $this.$string.$charAt($i);
        var$5 = $strIndex + $i | 0;
        if (var$4 != $testString.$charAt(var$5)) {
            var$6 = $this.$string;
            if (jur_Pattern_getSupplement(var$6.$charAt($i)) != $testString.$charAt(var$5))
                break;
        }
        $i = $i + 1 | 0;
    }
    return (-1);
}
var jl_CharSequence = $rt_classWithoutFields(0);
var jl_Error = $rt_classWithoutFields(jl_Throwable);
function jl_Error__init_(var_0, var_1) {
    var var_2 = new jl_Error();
    jl_Error__init_0(var_2, var_0, var_1);
    return var_2;
}
function jl_Error__init_1(var_0) {
    var var_1 = new jl_Error();
    jl_Error__init_2(var_1, var_0);
    return var_1;
}
function jl_Error__init_3(var_0) {
    var var_1 = new jl_Error();
    jl_Error__init_4(var_1, var_0);
    return var_1;
}
function jl_Error__init_0($this, $message, $cause) {
    jl_Throwable__init_4($this, $message, $cause);
}
function jl_Error__init_2($this, $message) {
    jl_Throwable__init_2($this, $message);
}
function jl_Error__init_4($this, $cause) {
    jl_Throwable__init_6($this, $cause);
}
var jl_LinkageError = $rt_classWithoutFields(jl_Error);
function jl_LinkageError__init_(var_0) {
    var var_1 = new jl_LinkageError();
    jl_LinkageError__init_0(var_1, var_0);
    return var_1;
}
function jl_LinkageError__init_0($this, $message) {
    jl_Error__init_2($this, $message);
}
function cbgu_IntSet() {
    var a = this; jl_Object.call(a);
    a.$size0 = 0;
    a.$keyTable = null;
    a.$hasZeroValue = 0;
    a.$loadFactor = 0.0;
    a.$threshold = 0;
    a.$shift = 0;
    a.$mask = 0;
}
function cbgu_IntSet__init_() {
    var var_0 = new cbgu_IntSet();
    cbgu_IntSet__init_0(var_0);
    return var_0;
}
function cbgu_IntSet__init_1(var_0, var_1) {
    var var_2 = new cbgu_IntSet();
    cbgu_IntSet__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_IntSet__init_0($this) {
    cbgu_IntSet__init_2($this, 51, 0.800000011920929);
}
function cbgu_IntSet__init_2($this, $initialCapacity, $loadFactor) {
    var $tableSize;
    jl_Object__init_0($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold = $tableSize * $loadFactor | 0;
        $this.$mask = $tableSize - 1 | 0;
        $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask));
        $this.$keyTable = $rt_createIntArray($tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(24))).$append2($loadFactor)).$toString()));
}
function cbgu_IntSet_place($this, $item) {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift));
}
function cbgu_IntSet_locateKey($this, $key) {
    var $keyTable, $i, $other;
    $keyTable = $this.$keyTable;
    $i = $this.$place($key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask;
    }
    return $i;
}
function cbgu_IntSet_add($this, $key) {
    var $i, var$3;
    if (!$key) {
        if ($this.$hasZeroValue)
            return 0;
        $this.$hasZeroValue = 1;
        $this.$size0 = $this.$size0 + 1 | 0;
        return 1;
    }
    $i = cbgu_IntSet_locateKey($this, $key);
    if ($i >= 0)
        return 0;
    var$3 =  -($i + 1 | 0) | 0;
    $this.$keyTable.data[var$3] = $key;
    var$3 = $this.$size0 + 1 | 0;
    $this.$size0 = var$3;
    if (var$3 >= $this.$threshold)
        cbgu_IntSet_resize($this, $this.$keyTable.data.length << 1);
    return 1;
}
function cbgu_IntSet_addResize($this, $key) {
    var $keyTable, $i, var$4;
    $keyTable = $this.$keyTable;
    $i = $this.$place($key);
    while (true) {
        var$4 = $keyTable.data;
        if (!var$4[$i])
            break;
        $i = ($i + 1 | 0) & $this.$mask;
    }
    var$4[$i] = $key;
}
function cbgu_IntSet_remove($this, $key) {
    var $i, $keyTable, $mask, $next, var$6, var$7, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue)
            return 0;
        $this.$hasZeroValue = 0;
        $this.$size0 = $this.$size0 - 1 | 0;
        return 1;
    }
    $i = cbgu_IntSet_locateKey($this, $key);
    if ($i < 0)
        return 0;
    $keyTable = $this.$keyTable;
    $mask = $this.$mask;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$6 = $keyTable.data;
        var$7 = var$6[$next];
        if (!var$7)
            break;
        $placement = $this.$place(var$7);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$6[$i] = var$7;
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$6[$i] = 0;
    $this.$size0 = $this.$size0 - 1 | 0;
    return 1;
}
function cbgu_IntSet_resize($this, $newSize) {
    var $oldCapacity, $oldKeyTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable.data.length;
        $this.$threshold = $newSize * $this.$loadFactor | 0;
        $this.$mask = $newSize - 1 | 0;
        $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask));
        $oldKeyTable = $this.$keyTable;
        $this.$keyTable = $rt_createIntArray($newSize);
        if ($this.$size0 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key)
                    cbgu_IntSet_addResize($this, $key);
                $i = $i + 1 | 0;
            }
        }
    }
}
var jl_IndexOutOfBoundsException = $rt_classWithoutFields(jl_RuntimeException);
function jl_IndexOutOfBoundsException__init_() {
    var var_0 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_0(var_0);
    return var_0;
}
function jl_IndexOutOfBoundsException__init_1(var_0) {
    var var_1 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_2(var_1, var_0);
    return var_1;
}
function jl_IndexOutOfBoundsException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function jl_IndexOutOfBoundsException__init_2($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
var jl_StringIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException);
function jl_StringIndexOutOfBoundsException__init_() {
    var var_0 = new jl_StringIndexOutOfBoundsException();
    jl_StringIndexOutOfBoundsException__init_0(var_0);
    return var_0;
}
function jl_StringIndexOutOfBoundsException__init_0($this) {
    jl_IndexOutOfBoundsException__init_0($this);
}
function ju_MissingResourceException() {
    var a = this; jl_RuntimeException.call(a);
    a.$className = null;
    a.$key = null;
}
function ju_MissingResourceException__init_(var_0, var_1, var_2) {
    var var_3 = new ju_MissingResourceException();
    ju_MissingResourceException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function ju_MissingResourceException__init_0($this, $s, $className, $key) {
    jl_RuntimeException__init_4($this, $s);
    $this.$className = $className;
    $this.$key = $key;
}
var cbgu_Pools = $rt_classWithoutFields();
var cbgu_Pools_typePools = null;
function cbgu_Pools_$callClinit() {
    cbgu_Pools_$callClinit = $rt_eraseClinit(cbgu_Pools);
    cbgu_Pools__clinit_();
}
function cbgu_Pools_get($type, $max) {
    var $pool;
    cbgu_Pools_$callClinit();
    $pool = cbgu_Pools_typePools.$get1($type);
    if ($pool === null) {
        $pool = cbgu_ReflectionPool__init_($type, 4, $max);
        cbgu_Pools_typePools.$put1($type, $pool);
    }
    return $pool;
}
function cbgu_Pools_get0($type) {
    cbgu_Pools_$callClinit();
    return cbgu_Pools_get($type, 100);
}
function cbgu_Pools_obtain($type) {
    cbgu_Pools_$callClinit();
    return (cbgu_Pools_get0($type)).$obtain();
}
function cbgu_Pools_freeAll($objects, $samePool) {
    var $pool, $i, $n, $object;
    cbgu_Pools_$callClinit();
    if ($objects === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(25)));
    $pool = null;
    $i = 0;
    $n = $objects.$size1;
    while ($i < $n) {
        a: {
            $object = $objects.$get($i);
            if ($object !== null) {
                if ($pool === null) {
                    $pool = cbgu_Pools_typePools.$get1(jl_Object_getClass($object));
                    if ($pool === null)
                        break a;
                }
                $pool.$free($object);
                if (!$samePool)
                    $pool = null;
            }
        }
        $i = $i + 1 | 0;
    }
}
function cbgu_Pools__clinit_() {
    cbgu_Pools_typePools = cbgu_ObjectMap__init_();
}
function jur_CIBackReferenceSet() {
    var a = this; jur_JointSet.call(a);
    a.$referencedGroup = 0;
    a.$consCounter = 0;
}
function jur_CIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_CIBackReferenceSet();
    jur_CIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_JointSet__init_0($this);
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter = $consCounter;
}
function jur_CIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter, $group.$length());
                return $this.$next.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = $group.$charAt($i);
            var$7 = $stringIndex + $i | 0;
            if (var$6 != $testString.$charAt(var$7) && jur_Pattern_getSupplement($group.$charAt($i)) != $testString.$charAt(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
}
function jur_CIBackReferenceSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_CIBackReferenceSet_getString($this, $matchResult) {
    var $res;
    $res = $matchResult.$getGroupNoCheck($this.$referencedGroup);
    return $res;
}
function jur_CIBackReferenceSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter, (-1));
    return $res;
}
var jur_UCIBackReferenceSet = $rt_classWithoutFields(jur_CIBackReferenceSet);
function jur_UCIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_UCIBackReferenceSet();
    jur_UCIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_UCIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter);
}
function jur_UCIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter, $group.$length());
                return $this.$next.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = jl_Character_toLowerCase(jl_Character_toUpperCase($group.$charAt($i)));
            var$7 = $stringIndex + $i | 0;
            var$7 = jl_Character_toUpperCase($testString.$charAt(var$7));
            if (var$6 != jl_Character_toLowerCase(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
}
var cbgu_StreamUtils = $rt_classWithoutFields();
var cbgu_StreamUtils_EMPTY_BYTES = null;
function cbgu_StreamUtils_$callClinit() {
    cbgu_StreamUtils_$callClinit = $rt_eraseClinit(cbgu_StreamUtils);
    cbgu_StreamUtils__clinit_();
}
function cbgu_StreamUtils_copyStream($input, $output) {
    cbgu_StreamUtils_$callClinit();
    cbgu_StreamUtils_copyStream0($input, $output, $rt_createByteArray(4096));
}
function cbgu_StreamUtils_copyStream0($input, $output, $buffer) {
    var var$4;
    cbgu_StreamUtils_$callClinit();
    while (true) {
        var$4 = $input.$read($buffer);
        if (var$4 == (-1))
            break;
        $output.$write0($buffer, 0, var$4);
    }
}
function cbgu_StreamUtils_copyStream1($input, $output) {
    cbgu_StreamUtils_$callClinit();
    cbgu_StreamUtils_copyStream2($input, $output, $rt_createByteArray(4096));
}
function cbgu_StreamUtils_copyStream2($input, $output, $buffer) {
    var $startPosition, $total, var$6;
    cbgu_StreamUtils_$callClinit();
    $startPosition = jn_Buffer_position($output);
    $total = 0;
    while (true) {
        var$6 = $input.$read($buffer);
        if (var$6 == (-1))
            break;
        cbgu_BufferUtils_copy($buffer, 0, $output, var$6);
        $total = $total + var$6 | 0;
        $output.$position2($startPosition + $total | 0);
    }
    $output.$position2($startPosition);
    return $total;
}
function cbgu_StreamUtils_copyStreamToByteArray($input, $estimatedSize) {
    var $baos;
    cbgu_StreamUtils_$callClinit();
    $baos = cbgu_StreamUtils$OptimizedByteArrayOutputStream__init_(jl_Math_max(0, $estimatedSize));
    cbgu_StreamUtils_copyStream($input, $baos);
    return $baos.$toByteArray();
}
function cbgu_StreamUtils_closeQuietly($c) {
    var $$je;
    cbgu_StreamUtils_$callClinit();
    a: {
        if ($c !== null)
            try {
                $c.$close();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
    }
}
function cbgu_StreamUtils__clinit_() {
    cbgu_StreamUtils_EMPTY_BYTES = $rt_createByteArray(0);
}
function jn_ByteOrder() {
    jl_Object.call(this);
    this.$name1 = null;
}
var jn_ByteOrder_BIG_ENDIAN = null;
var jn_ByteOrder_LITTLE_ENDIAN = null;
function jn_ByteOrder_$callClinit() {
    jn_ByteOrder_$callClinit = $rt_eraseClinit(jn_ByteOrder);
    jn_ByteOrder__clinit_();
}
function jn_ByteOrder__init_(var_0) {
    var var_1 = new jn_ByteOrder();
    jn_ByteOrder__init_0(var_1, var_0);
    return var_1;
}
function jn_ByteOrder__init_0($this, $name) {
    jn_ByteOrder_$callClinit();
    jl_Object__init_0($this);
    $this.$name1 = $name;
}
function jn_ByteOrder_nativeOrder() {
    jn_ByteOrder_$callClinit();
    return jn_ByteOrder_BIG_ENDIAN;
}
function jn_ByteOrder__clinit_() {
    jn_ByteOrder_BIG_ENDIAN = jn_ByteOrder__init_($rt_s(26));
    jn_ByteOrder_LITTLE_ENDIAN = jn_ByteOrder__init_($rt_s(27));
}
var cbgg_TextureData$TextureDataType = $rt_classWithoutFields(jl_Enum);
var cbgg_TextureData$TextureDataType_Pixmap = null;
var cbgg_TextureData$TextureDataType_Custom = null;
var cbgg_TextureData$TextureDataType_$VALUES = null;
function cbgg_TextureData$TextureDataType_$callClinit() {
    cbgg_TextureData$TextureDataType_$callClinit = $rt_eraseClinit(cbgg_TextureData$TextureDataType);
    cbgg_TextureData$TextureDataType__clinit_();
}
function cbgg_TextureData$TextureDataType__init_(var_0, var_1) {
    var var_2 = new cbgg_TextureData$TextureDataType();
    cbgg_TextureData$TextureDataType__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_TextureData$TextureDataType_values() {
    cbgg_TextureData$TextureDataType_$callClinit();
    return cbgg_TextureData$TextureDataType_$VALUES.$clone();
}
function cbgg_TextureData$TextureDataType__init_0($this, var$1, var$2) {
    cbgg_TextureData$TextureDataType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_TextureData$TextureDataType__clinit_() {
    cbgg_TextureData$TextureDataType_Pixmap = cbgg_TextureData$TextureDataType__init_($rt_s(28), 0);
    cbgg_TextureData$TextureDataType_Custom = cbgg_TextureData$TextureDataType__init_($rt_s(29), 1);
    cbgg_TextureData$TextureDataType_$VALUES = $rt_createArrayFromData(cbgg_TextureData$TextureDataType, [cbgg_TextureData$TextureDataType_Pixmap, cbgg_TextureData$TextureDataType_Custom]);
}
var cgxgbw_WebApplication$AppState = $rt_classWithoutFields(jl_Enum);
var cgxgbw_WebApplication$AppState_IDLE = null;
var cgxgbw_WebApplication$AppState_QUEUE_ASSETS_LOADED = null;
var cgxgbw_WebApplication$AppState_INIT_SOUND = null;
var cgxgbw_WebApplication$AppState_APP_CREATE = null;
var cgxgbw_WebApplication$AppState_APP_READY = null;
var cgxgbw_WebApplication$AppState_$VALUES = null;
function cgxgbw_WebApplication$AppState_$callClinit() {
    cgxgbw_WebApplication$AppState_$callClinit = $rt_eraseClinit(cgxgbw_WebApplication$AppState);
    cgxgbw_WebApplication$AppState__clinit_();
}
function cgxgbw_WebApplication$AppState__init_(var_0, var_1) {
    var var_2 = new cgxgbw_WebApplication$AppState();
    cgxgbw_WebApplication$AppState__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbw_WebApplication$AppState_values() {
    cgxgbw_WebApplication$AppState_$callClinit();
    return cgxgbw_WebApplication$AppState_$VALUES.$clone();
}
function cgxgbw_WebApplication$AppState__init_0($this, var$1, var$2) {
    cgxgbw_WebApplication$AppState_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cgxgbw_WebApplication$AppState__clinit_() {
    cgxgbw_WebApplication$AppState_IDLE = cgxgbw_WebApplication$AppState__init_($rt_s(30), 0);
    cgxgbw_WebApplication$AppState_QUEUE_ASSETS_LOADED = cgxgbw_WebApplication$AppState__init_($rt_s(31), 1);
    cgxgbw_WebApplication$AppState_INIT_SOUND = cgxgbw_WebApplication$AppState__init_($rt_s(32), 2);
    cgxgbw_WebApplication$AppState_APP_CREATE = cgxgbw_WebApplication$AppState__init_($rt_s(33), 3);
    cgxgbw_WebApplication$AppState_APP_READY = cgxgbw_WebApplication$AppState__init_($rt_s(34), 4);
    cgxgbw_WebApplication$AppState_$VALUES = $rt_createArrayFromData(cgxgbw_WebApplication$AppState, [cgxgbw_WebApplication$AppState_IDLE, cgxgbw_WebApplication$AppState_QUEUE_ASSETS_LOADED, cgxgbw_WebApplication$AppState_INIT_SOUND, cgxgbw_WebApplication$AppState_APP_CREATE, cgxgbw_WebApplication$AppState_APP_READY]);
}
function jur_AbstractCharClass$LazyCategory() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category = 0;
    a.$mayContainSupplCodepoints0 = 0;
    a.$containsAllSurrogates = 0;
}
function jur_AbstractCharClass$LazyCategory__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategory__init_1(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategory__init_0($this, $cat, $mayContainSupplCodepoints) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$containsAllSurrogates = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory_computeValue($this) {
    var $chCl;
    $chCl = jur_UnicodeCategory__init_($this.$category);
    if ($this.$containsAllSurrogates)
        $chCl.$lowHighSurrogates.$set(0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints0;
    return $chCl;
}
var otcic_StdoutOutputStream = $rt_classWithoutFields(ji_OutputStream);
var otcic_StdoutOutputStream_INSTANCE = null;
function otcic_StdoutOutputStream_$callClinit() {
    otcic_StdoutOutputStream_$callClinit = $rt_eraseClinit(otcic_StdoutOutputStream);
    otcic_StdoutOutputStream__clinit_();
}
function otcic_StdoutOutputStream__init_() {
    var var_0 = new otcic_StdoutOutputStream();
    otcic_StdoutOutputStream__init_0(var_0);
    return var_0;
}
function otcic_StdoutOutputStream__init_0($this) {
    otcic_StdoutOutputStream_$callClinit();
    ji_OutputStream__init_($this);
}
function otcic_StdoutOutputStream_write($this, $b) {
    otcic_Console_writeStdout($b);
}
function otcic_StdoutOutputStream__clinit_() {
    otcic_StdoutOutputStream_INSTANCE = otcic_StdoutOutputStream__init_();
}
function jur_QuantifierSet() {
    jur_AbstractSet.call(this);
    this.$innerSet = null;
}
function jur_QuantifierSet__init_($this, $innerSet, $next, $type) {
    jur_AbstractSet__init_0($this, $next);
    $this.$innerSet = $innerSet;
    $this.$setType($type);
}
function jur_QuantifierSet_getInnerSet($this) {
    return $this.$innerSet;
}
function jur_QuantifierSet_first($this, $set) {
    return !$this.$innerSet.$first($set) && !$this.$next.$first($set) ? 0 : 1;
}
function jur_QuantifierSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_QuantifierSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next !== null && !$this.$next.$isSecondPassVisited) {
        $set = $this.$next.$processBackRefReplacement();
        if ($set !== null) {
            $this.$next.$isSecondPassVisited = 1;
            $this.$next = $set;
        }
        $this.$next.$processSecondPass();
    }
    if ($this.$innerSet !== null) {
        if (!$this.$innerSet.$isSecondPassVisited) {
            $set = $this.$innerSet.$processBackRefReplacement();
            if ($set !== null) {
                $this.$innerSet.$isSecondPassVisited = 1;
                $this.$innerSet = $set;
            }
            $this.$innerSet.$processSecondPass();
        } else if ($this.$innerSet instanceof jur_SingleSet && $this.$innerSet.$fSet.$isBackReferenced)
            $this.$innerSet = $this.$innerSet.$next;
    }
}
var jur_DotAllQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet);
function jur_DotAllQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_DotAllQuantifierSet();
    jur_DotAllQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_DotAllQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
}
function jur_DotAllQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($strLength > $stringIndex)
        return $this.$next.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_DotAllQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($this.$next.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
        return $stringIndex;
    return (-1);
}
function cbgu_LongMap$MapIterator() {
    var a = this; jl_Object.call(a);
    a.$hasNext0 = 0;
    a.$map = null;
    a.$nextIndex = 0;
    a.$currentIndex = 0;
    a.$valid = 0;
}
function cbgu_LongMap$MapIterator__init_(var_0) {
    var var_1 = new cbgu_LongMap$MapIterator();
    cbgu_LongMap$MapIterator__init_0(var_1, var_0);
    return var_1;
}
function cbgu_LongMap$MapIterator__init_0($this, $map) {
    jl_Object__init_0($this);
    $this.$valid = 1;
    $this.$map = $map;
    $this.$reset0();
}
function cbgu_LongMap$MapIterator_reset($this) {
    $this.$currentIndex = (-2);
    $this.$nextIndex = (-1);
    if (!$this.$map.$hasZeroValue0)
        $this.$findNextIndex();
    else
        $this.$hasNext0 = 1;
}
function cbgu_LongMap$MapIterator_findNextIndex($this) {
    var $keyTable, var$2, $n, var$4;
    $keyTable = $this.$map.$keyTable0;
    var$2 = $keyTable.data;
    $n = var$2.length;
    while (true) {
        var$4 = $this.$nextIndex + 1 | 0;
        $this.$nextIndex = var$4;
        if (var$4 >= $n)
            break;
        if (Long_eq(var$2[$this.$nextIndex], Long_ZERO))
            continue;
        else {
            $this.$hasNext0 = 1;
            return;
        }
    }
    $this.$hasNext0 = 0;
}
var jl_Iterable = $rt_classWithoutFields(0);
var ju_Iterator = $rt_classWithoutFields(0);
var cbgu_LongMap$Values = $rt_classWithoutFields(cbgu_LongMap$MapIterator);
function cbgu_LongMap$Values__init_(var_0) {
    var var_1 = new cbgu_LongMap$Values();
    cbgu_LongMap$Values__init_0(var_1, var_0);
    return var_1;
}
function cbgu_LongMap$Values__init_0($this, $map) {
    cbgu_LongMap$MapIterator__init_0($this, $map);
}
function cbgu_LongMap$Values_hasNext($this) {
    if ($this.$valid)
        return $this.$hasNext0;
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(35)));
}
function cbgu_LongMap$Values_next($this) {
    var $value;
    if (!$this.$hasNext0)
        $rt_throw(ju_NoSuchElementException__init_());
    if (!$this.$valid)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(35)));
    $value = $this.$nextIndex == (-1) ? $this.$map.$zeroValue : $this.$map.$valueTable.data[$this.$nextIndex];
    $this.$currentIndex = $this.$nextIndex;
    $this.$findNextIndex();
    return $value;
}
function cbgu_LongMap$Values_iterator($this) {
    return $this;
}
function cbgu_LongMap$Values_reset($this) {
    cbgu_LongMap$MapIterator_reset($this);
}
function jur_FSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$isBackReferenced = 0;
    a.$groupIndex0 = 0;
}
var jur_FSet_posFSet = null;
function jur_FSet_$callClinit() {
    jur_FSet_$callClinit = $rt_eraseClinit(jur_FSet);
    jur_FSet__clinit_();
}
function jur_FSet__init_(var_0) {
    var var_1 = new jur_FSet();
    jur_FSet__init_0(var_1, var_0);
    return var_1;
}
function jur_FSet__init_0($this, $groupIndex) {
    jur_FSet_$callClinit();
    jur_AbstractSet__init_($this);
    $this.$groupIndex0 = $groupIndex;
}
function jur_FSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $end, $shift;
    $end = $matchResult.$getEnd($this.$groupIndex0);
    $matchResult.$setEnd($this.$groupIndex0, $stringIndex);
    $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $matchResult.$setEnd($this.$groupIndex0, $end);
    return $shift;
}
function jur_FSet_getGroupIndex($this) {
    return $this.$groupIndex0;
}
function jur_FSet_hasConsumed($this, $mr) {
    return 0;
}
function jur_FSet__clinit_() {
    jur_FSet_posFSet = jur_FSet$PossessiveFSet__init_();
}
var jur_BehindFSet = $rt_classWithoutFields(jur_FSet);
function jur_BehindFSet__init_(var_0) {
    var var_1 = new jur_BehindFSet();
    jur_BehindFSet__init_0(var_1, var_0);
    return var_1;
}
function jur_BehindFSet__init_0($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_BehindFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr, $rightBound;
    $gr = $this.$getGroupIndex();
    $rightBound = $matchResult.$getConsumed($gr);
    if ($rightBound != $stringIndex)
        $stringIndex = (-1);
    return $stringIndex;
}
var cbg_Input = $rt_classWithoutFields(0);
var cgxgbwd_EventListenerWrapper = $rt_classWithoutFields(0);
function cgxgbw_WebInput() {
    var a = this; jl_Object.call(a);
    a.$canvas = null;
    a.$justTouched = 0;
    a.$touchMap = null;
    a.$touched = null;
    a.$touchX = null;
    a.$touchY = null;
    a.$deltaX = null;
    a.$deltaY = null;
    a.$pressedButtons = null;
    a.$pressedKeyCount = 0;
    a.$pressedKeys = null;
    a.$keyJustPressed = 0;
    a.$justPressedKeys = null;
    a.$processor = null;
    a.$currentEventTimeStamp = Long_ZERO;
    a.$hasFocus = 0;
}
function cgxgbw_WebInput__init_(var_0) {
    var var_1 = new cgxgbw_WebInput();
    cgxgbw_WebInput__init_0(var_1, var_0);
    return var_1;
}
function cgxgbw_WebInput_getMouseWheelVelocity($event) {
    var $agent, $delta, $detail, $wheelDelta, var$6;
    $agent = cgxgbw_WebApplication_getAgentInfo();
    $delta = 0.0;
    $detail = $event.detail;
    $wheelDelta = $event.wheelDelta;
    if ($agent.firefox ? 1 : 0)
        $delta = ($agent.macOS ? 1 : 0) ? 1.0 * $detail : 1.0 * $detail / 3.0;
    else if ($agent.opera ? 1 : 0)
        $delta = !($agent.linux ? 1 : 0) ? (-1.0) * $wheelDelta / 40.0 : (-1.0) * $wheelDelta / 80.0;
    else if (!(!($agent.chrome ? 1 : 0) && !($agent.safari ? 1 : 0) && !($agent.IE ? 1 : 0))) {
        $delta = (-1.0) * $wheelDelta;
        var$6 = $delta / 120.0;
        if (jl_Math_abs(var$6) >= 1.0)
            $delta = var$6;
        else if (!($agent.windows ? 1 : 0))
            $delta = !($agent.macOS ? 1 : 0) ? var$6 : $delta / 3.0;
    }
    return $delta;
}
function cgxgbw_WebInput__init_0($this, $canvas) {
    jl_Object__init_0($this);
    $this.$justTouched = 0;
    $this.$touchMap = cbgu_IntMap__init_(20);
    $this.$touched = $rt_createBooleanArray(20);
    $this.$touchX = $rt_createIntArray(20);
    $this.$touchY = $rt_createIntArray(20);
    $this.$deltaX = $rt_createIntArray(20);
    $this.$deltaY = $rt_createIntArray(20);
    $this.$pressedButtons = cbgu_IntSet__init_();
    $this.$pressedKeyCount = 0;
    $this.$pressedKeys = $rt_createBooleanArray(256);
    $this.$keyJustPressed = 0;
    $this.$justPressedKeys = $rt_createBooleanArray(256);
    $this.$hasFocus = 1;
    $this.$canvas = $canvas;
    cgxgbw_WebInput_hookEvents($this);
}
function cgxgbw_WebInput_hookEvents($this) {
    var $document;
    $document = $this.$canvas.ownerDocument;
    $document.addEventListener("mousedown", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("mouseup", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("mousemove", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("wheel", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("keydown", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("keyup", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("keypress", otji_JS_function($this, "handleEvent"), !!0);
    $this.$canvas.addEventListener("touchstart", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchmove", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchcancel", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchend", otji_JS_function($this, "handleEvent"), !!1);
}
function cgxgbw_WebInput_handleEvent($this, $e) {
    cgxgbw_WebInput_handleMouseEvents($this, $e);
    cgxgbw_WebInput_handleKeyboardEvents($this, $e);
}
function cgxgbw_WebInput_handleMouseEvents($this, $e) {
    var $type, $mouseEvent, $target, $canvas2, $equals, $relativeX, $relativeY, var$9, $mouseX, $mouseY, $wheel, $wheelDelta, $touchEvent, $touches, $i, $j, $touch, $real, var$20, var$21, $touchId;
    a: {
        $type = $rt_str($e.type);
        if ($type.$equals($rt_s(36))) {
            $mouseEvent = $e;
            $target = $e.target;
            $canvas2 = $this.$canvas;
            $equals = $target !== $canvas2 ? 0 : 1;
            if ($equals && !$this.$touched.data[0]) {
                $this.$hasFocus = 1;
                $this.$justTouched = 1;
                $this.$touched.data[0] = 1;
                $this.$pressedButtons.$add2(cgxgbwu_KeyCodes_getButton($mouseEvent.button));
                $this.$deltaX.data[0] = 0;
                $this.$deltaY.data[0] = 0;
                if (!$this.$isCursorCatched()) {
                    $relativeX = $this.$getRelativeX($mouseEvent, $this.$canvas);
                    $relativeY = $this.$getRelativeY($mouseEvent, $this.$canvas);
                    $this.$touchX.data[0] = $relativeX;
                    $this.$touchY.data[0] = $relativeY;
                } else {
                    var$9 = $this.$touchX.data;
                    var$9[0] = var$9[0] + cgxgbw_WebInput_getMovementXJS($this, $mouseEvent) | 0;
                    var$9 = $this.$touchY.data;
                    var$9[0] = var$9[0] + cgxgbw_WebInput_getMovementYJS($this, $mouseEvent) | 0;
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                if ($this.$processor !== null)
                    $this.$processor.$touchDown($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbwu_KeyCodes_getButton($mouseEvent.button));
                $e.preventDefault();
                $e.stopPropagation();
                break a;
            }
            $mouseX = $this.$getRelativeX($mouseEvent, $this.$canvas);
            $mouseY = $this.$getRelativeY($mouseEvent, $this.$canvas);
            if (!($mouseX >= 0.0 && $mouseX <= cbg_Gdx_graphics.$getWidth() && $mouseY >= 0.0 && $mouseY <= cbg_Gdx_graphics.$getHeight()))
                $this.$hasFocus = 0;
            return;
        }
        if ($type.$equals($rt_s(37))) {
            $mouseEvent = $e;
            if (!$this.$touched.data[0])
                return;
            $this.$pressedButtons.$remove0(cgxgbwu_KeyCodes_getButton($mouseEvent.button));
            var$9 = $this.$touched;
            var$9.data[0] = $this.$pressedButtons.$size0 <= 0 ? 0 : 1;
            if ($this.$isCursorCatched()) {
                $this.$setDelta(0, cgxgbw_WebInput_getMovementXJS($this, $mouseEvent) | 0, cgxgbw_WebInput_getMovementYJS($this, $mouseEvent) | 0);
                var$9 = $this.$touchX.data;
                var$9[0] = var$9[0] + cgxgbw_WebInput_getMovementXJS($this, $mouseEvent) | 0;
                var$9 = $this.$touchY.data;
                var$9[0] = var$9[0] + cgxgbw_WebInput_getMovementYJS($this, $mouseEvent) | 0;
            } else {
                $this.$setDelta(0, $this.$getRelativeX($mouseEvent, $this.$canvas) - $this.$touchX.data[0] | 0, $this.$getRelativeY($mouseEvent, $this.$canvas) - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = $this.$getRelativeX($mouseEvent, $this.$canvas);
                $this.$touchY.data[0] = $this.$getRelativeY($mouseEvent, $this.$canvas);
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $this.$touched.data[0] = 0;
            if ($this.$processor !== null)
                $this.$processor.$touchUp($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbwu_KeyCodes_getButton($mouseEvent.button));
        } else if (!$type.$equals($rt_s(38))) {
            if ($type.$equals($rt_s(39))) {
                $wheel = $e;
                if ($this.$processor !== null) {
                    $wheelDelta = cgxgbw_WebInput_getMouseWheelVelocity($wheel);
                    $this.$processor.$scrolled(0.0, $wheelDelta | 0);
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            } else if ($type.$equals($rt_s(40))) {
                $this.$justTouched = 1;
                $touchEvent = $e;
                $touches = $touchEvent.changedTouches;
                $i = 0;
                $j = $touches.length;
                while ($i < $j) {
                    $touch = $touches.item($i);
                    $real = $touch.identifier;
                    var$20 = $this.$touchMap;
                    var$21 = cgxgbw_WebInput_getAvailablePointer($this);
                    var$20.$put2($real, jl_Integer_valueOf(var$21));
                    $this.$touched.data[var$21] = 1;
                    $this.$touchX.data[var$21] = $this.$getRelativeX0($touch, $this.$canvas);
                    $this.$touchY.data[var$21] = $this.$getRelativeY0($touch, $this.$canvas);
                    $this.$deltaX.data[var$21] = 0;
                    $this.$deltaY.data[var$21] = 0;
                    if ($this.$processor !== null)
                        $this.$processor.$touchDown($this.$touchX.data[var$21], $this.$touchY.data[var$21], var$21, 0);
                    $i = $i + 1 | 0;
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                $e.preventDefault();
            }
        } else {
            $mouseEvent = $e;
            if ($this.$isCursorCatched()) {
                $this.$setDelta(0, cgxgbw_WebInput_getMovementXJS($this, $mouseEvent) | 0, cgxgbw_WebInput_getMovementYJS($this, $mouseEvent) | 0);
                var$9 = $this.$touchX.data;
                var$9[0] = var$9[0] + cgxgbw_WebInput_getMovementXJS($this, $mouseEvent) | 0;
                var$9 = $this.$touchY.data;
                var$9[0] = var$9[0] + cgxgbw_WebInput_getMovementYJS($this, $mouseEvent) | 0;
            } else {
                $relativeX = $this.$getRelativeX($mouseEvent, $this.$canvas);
                $relativeY = $this.$getRelativeY($mouseEvent, $this.$canvas);
                $this.$setDelta(0, $relativeX - $this.$touchX.data[0] | 0, $relativeY - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = $relativeX;
                $this.$touchY.data[0] = $relativeY;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            if ($this.$processor !== null) {
                if (!$this.$touched.data[0])
                    $this.$processor.$mouseMoved($this.$touchX.data[0], $this.$touchY.data[0]);
                else
                    $this.$processor.$touchDragged($this.$touchX.data[0], $this.$touchY.data[0], 0);
            }
        }
    }
    if ($type.$equals($rt_s(41))) {
        $touchEvent = $e;
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch = $touches.item($i);
            $real = $touch.identifier;
            $touchId = ($this.$touchMap.$get($real)).$intValue();
            $this.$setDelta($touchId, $this.$getRelativeX0($touch, $this.$canvas) - $this.$touchX.data[$touchId] | 0, $this.$getRelativeY0($touch, $this.$canvas) - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = $this.$getRelativeX0($touch, $this.$canvas);
            $this.$touchY.data[$touchId] = $this.$getRelativeY0($touch, $this.$canvas);
            if ($this.$processor !== null)
                $this.$processor.$touchDragged($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $e.preventDefault();
    }
    if ($type.$equals($rt_s(42))) {
        $touchEvent = $e;
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch = $touches.item($i);
            $real = $touch.identifier;
            $touchId = ($this.$touchMap.$get($real)).$intValue();
            $this.$touchMap.$remove($real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = $this.$getRelativeX0($touch, $this.$canvas);
            $relativeY = $this.$getRelativeY0($touch, $this.$canvas);
            $this.$setDelta($touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = $relativeX;
            $this.$touchY.data[$touchId] = $relativeY;
            if ($this.$processor !== null)
                $this.$processor.$touchUp($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $e.preventDefault();
    }
    if ($type.$equals($rt_s(43))) {
        $touchEvent = $e;
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch = $touches.item($i);
            $real = $touch.identifier;
            $touchId = ($this.$touchMap.$get($real)).$intValue();
            $this.$touchMap.$remove($real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = $this.$getRelativeX0($touch, $this.$canvas);
            $relativeY = $this.$getRelativeY0($touch, $this.$canvas);
            $this.$setDelta($touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = $relativeX;
            $this.$touchY.data[$touchId] = $relativeY;
            if ($this.$processor !== null)
                $this.$processor.$touchUp($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $e.preventDefault();
    }
}
function cgxgbw_WebInput_handleKeyboardEvents($this, $keyboardEvent) {
    var $type, $c, $code, $keyboardEvent_0, $keyChar;
    $type = $rt_str($keyboardEvent.type);
    if (!($type.$equals($rt_s(44)) && $this.$hasFocus)) {
        if ($type.$equals($rt_s(45)) && $this.$hasFocus) {
            $c = $keyboardEvent.charCode & 65535;
            if ($this.$processor !== null)
                $this.$processor.$keyTyped($c);
        } else if ($type.$equals($rt_s(46)) && $this.$hasFocus) {
            $code = cgxgbwu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            if ($this.$pressedKeys.data[$code]) {
                $this.$pressedKeyCount = $this.$pressedKeyCount - 1 | 0;
                $this.$pressedKeys.data[$code] = 0;
            }
            if ($this.$processor !== null)
                $this.$processor.$keyUp($code);
        }
    } else {
        a: {
            $keyboardEvent_0 = $keyboardEvent;
            $code = cgxgbwu_KeyCodes_keyForCode($keyboardEvent_0.keyCode);
            $keyChar = 0;
            switch ($code) {
                case 67:
                    $keyChar = 8;
                    break a;
                case 112:
                    $keyChar = 127;
                    break a;
                default:
            }
        }
        if (!($code != 67 && $code != 112)) {
            $keyboardEvent.preventDefault();
            if ($this.$processor !== null) {
                $this.$processor.$keyDown($code);
                $this.$processor.$keyTyped($keyChar);
            }
        } else if (!$this.$pressedKeys.data[$code]) {
            $this.$pressedKeyCount = $this.$pressedKeyCount + 1 | 0;
            $this.$pressedKeys.data[$code] = 1;
            $this.$keyJustPressed = 1;
            $this.$justPressedKeys.data[$code] = 1;
            if ($this.$processor !== null)
                $this.$processor.$keyDown($code);
        }
    }
}
function cgxgbw_WebInput_getAvailablePointer($this) {
    var $i;
    $i = 0;
    while (true) {
        if ($i >= 20)
            return (-1);
        if (!$this.$touchMap.$containsValue(jl_Integer_valueOf($i), 0))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function cgxgbw_WebInput_reset($this) {
    var $i;
    a: {
        $this.$justTouched = 0;
        if ($this.$keyJustPressed) {
            $this.$keyJustPressed = 0;
            $i = 0;
            while (true) {
                if ($i >= $this.$justPressedKeys.data.length)
                    break a;
                $this.$justPressedKeys.data[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
}
function cgxgbw_WebInput_setDelta($this, $touchId, $x, $y) {
    $this.$deltaX.data[$touchId] = $x;
    $this.$deltaY.data[$touchId] = $y;
}
function cgxgbw_WebInput_getMovementXJS($this, $event) {
    return $event.movementX;
}
function cgxgbw_WebInput_getMovementYJS($this, $event) {
    return $event.movementY;
}
function cgxgbw_WebInput_getCompatMode($this, $element) {
    var $compatMode, $isComp;
    $compatMode = $rt_str($element.compatMode);
    $isComp = $compatMode.$equals($rt_s(47));
    if ($isComp)
        $element = $element.documentElement;
    return $element;
}
function cgxgbw_WebInput_getScrollTop($this, $target) {
    var $val;
    $val = $target.scrollTop;
    return cgxgbw_WebInput_toInt32($val);
}
function cgxgbw_WebInput_getScrollTop0($this, $target) {
    var $element;
    $element = cgxgbw_WebInput_getCompatMode($this, $target);
    return cgxgbw_WebInput_getScrollTop($this, $element);
}
function cgxgbw_WebInput_getScrollLeft($this, $target) {
    var $val;
    $val = $target.scrollLeft;
    return cgxgbw_WebInput_toInt32($val);
}
function cgxgbw_WebInput_getScrollLeft0($this, $target) {
    var $element;
    $element = cgxgbw_WebInput_getCompatMode($this, $target);
    return cgxgbw_WebInput_getScrollLeft($this, $element);
}
function cgxgbw_WebInput_getRelativeX($this, $target, $touch) {
    var var$3;
    var$3 = ($touch.clientX - cgxgbw_WebInput_getAbsoluteLeft($this, $target) | 0) + cgxgbw_WebInput_getScrollLeft($this, $target) | 0;
    var$3 = var$3 + cgxgbw_WebInput_getScrollLeft0($this, $target.ownerDocument) | 0;
    return var$3;
}
function cgxgbw_WebInput_getRelativeY($this, $target, $touch) {
    var var$3;
    var$3 = ($touch.clientY - cgxgbw_WebInput_getAbsoluteTop($this, $target) | 0) + cgxgbw_WebInput_getScrollTop($this, $target) | 0;
    var$3 = var$3 + cgxgbw_WebInput_getScrollTop0($this, $target.ownerDocument) | 0;
    return var$3;
}
function cgxgbw_WebInput_getRelativeX0($this, $e, $target) {
    var $xScaleRatio, var$4;
    $xScaleRatio = $target.width * 1.0 / cgxgbw_WebInput_getClientWidth($this, $target);
    var$4 = $xScaleRatio * ((($e.clientX - cgxgbw_WebInput_getAbsoluteLeft($this, $target) | 0) + cgxgbw_WebInput_getScrollLeft($this, $target) | 0) + cgxgbw_WebInput_getScrollLeft0($this, $target.ownerDocument) | 0);
    return jl_Math_round(var$4);
}
function cgxgbw_WebInput_getRelativeY0($this, $e, $target) {
    var $yScaleRatio, var$4;
    $yScaleRatio = $target.height * 1.0 / cgxgbw_WebInput_getClientHeight($this, $target);
    var$4 = $yScaleRatio * ((($e.clientY - cgxgbw_WebInput_getAbsoluteTop($this, $target) | 0) + cgxgbw_WebInput_getScrollTop($this, $target) | 0) + cgxgbw_WebInput_getScrollTop0($this, $target.ownerDocument) | 0);
    return jl_Math_round(var$4);
}
function cgxgbw_WebInput_getRelativeX1($this, $touch, $target) {
    var $xScaleRatio;
    $xScaleRatio = $target.width * 1.0 / cgxgbw_WebInput_getClientWidth($this, $target);
    return jl_Math_round($xScaleRatio * cgxgbw_WebInput_getRelativeX($this, $target, $touch));
}
function cgxgbw_WebInput_getRelativeY1($this, $touch, $target) {
    var $yScaleRatio;
    $yScaleRatio = $target.height * 1.0 / cgxgbw_WebInput_getClientHeight($this, $target);
    return jl_Math_round($yScaleRatio * cgxgbw_WebInput_getRelativeY($this, $target, $touch));
}
function cgxgbw_WebInput_getClientWidth($this, $target) {
    return $target.clientWidth;
}
function cgxgbw_WebInput_getClientHeight($this, $target) {
    return $target.clientHeight;
}
function cgxgbw_WebInput_getAbsoluteTop($this, $target) {
    return cgxgbw_WebInput_toInt32(cgxgbw_WebInput_getSubPixelAbsoluteTop($this, $target));
}
function cgxgbw_WebInput_getSubPixelAbsoluteTop($this, $elem) {
    var $top, $curr;
    $top = 0.0;
    $curr = $elem;
    while ($curr.offsetParent !== null) {
        $top = $top - $curr.scrollTop;
        $curr = $curr.parentNode;
    }
    while ($elem !== null) {
        $top = $top + $elem.offsetTop;
        $elem = $curr.offsetParent;
    }
    return $top;
}
function cgxgbw_WebInput_getAbsoluteLeft($this, $target) {
    return cgxgbw_WebInput_toInt32(cgxgbw_WebInput_getSubPixelAbsoluteLeft($this, $target));
}
function cgxgbw_WebInput_getSubPixelAbsoluteLeft($this, $elem) {
    var $left, $curr;
    $left = 0.0;
    $curr = $elem;
    while ($curr.offsetParent !== null) {
        $left = $left - $curr.scrollLeft;
        $curr = $curr.parentNode;
    }
    while ($elem !== null) {
        $left = $left + $elem.offsetLeft;
        $elem = $curr.offsetParent;
    }
    return $left;
}
function cgxgbw_WebInput_toInt32($val) {
    return $val | 0;
}
function cgxgbw_WebInput_isCursorCatched($this) {
    return 0;
}
function cgxgbw_WebInput_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
var cbggg_PixmapPacker$PackStrategy = $rt_classWithoutFields(0);
function jur_LowHighSurrogateRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$surrChars = null;
    a.$alt = 0;
}
function jur_LowHighSurrogateRangeSet__init_(var_0) {
    var var_1 = new jur_LowHighSurrogateRangeSet();
    jur_LowHighSurrogateRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LowHighSurrogateRangeSet__init_0($this, $surrChars) {
    jur_JointSet__init_0($this);
    $this.$surrChars = $surrChars.$getInstance();
    $this.$alt = $surrChars.$alt0;
}
function jur_LowHighSurrogateRangeSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_LowHighSurrogateRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $startStr, $strLength, var$6, var$7, $ch, $low, $high;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    var$6 = $stringIndex + 1 | 0;
    var$7 = $rt_compare(var$6, $strLength);
    if (var$7 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $ch = $testString.$charAt($stringIndex);
    if (!$this.$surrChars.$contains($ch))
        return (-1);
    if (jl_Character_isHighSurrogate($ch)) {
        if (var$7 < 0) {
            $low = $testString.$charAt(var$6);
            if (jl_Character_isLowSurrogate($low))
                return (-1);
        }
    } else if (jl_Character_isLowSurrogate($ch) && $stringIndex > $startStr) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    return $this.$next.$matches(var$6, $testString, $matchResult);
}
var jur_GroupQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet);
function jur_GroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_GroupQuantifierSet();
    jur_GroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
}
function jur_GroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
var jur_ReluctantGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_ReluctantGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantGroupQuantifierSet();
    jur_ReluctantGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $res;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $res = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        return $res;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
}
var cbg_Application = $rt_classWithoutFields(0);
function cbggg_PixmapPacker$Page() {
    var a = this; jl_Object.call(a);
    a.$rects = null;
    a.$image = null;
    a.$texture = null;
    a.$addedRects = null;
    a.$dirty = 0;
}
function cbggg_PixmapPacker$Page__init_(var_0) {
    var var_1 = new cbggg_PixmapPacker$Page();
    cbggg_PixmapPacker$Page__init_0(var_1, var_0);
    return var_1;
}
function cbggg_PixmapPacker$Page__init_0($this, $packer) {
    var var$2;
    jl_Object__init_0($this);
    $this.$rects = cbgu_OrderedMap__init_();
    $this.$addedRects = cbgu_Array__init_();
    $this.$image = cbgg_Pixmap__init_($packer.$pageWidth, $packer.$pageHeight, $packer.$pageFormat);
    var$2 = $this.$image;
    cbgg_Pixmap$Blending_$callClinit();
    var$2.$setBlending(cbgg_Pixmap$Blending_None);
    $this.$image.$setColor($packer.$getTransparentColor());
    $this.$image.$fill();
}
function cbggg_PixmapPacker$Page_updateTexture($this, $minFilter, $magFilter, $useMipMaps) {
    if ($this.$texture !== null) {
        if (!$this.$dirty)
            return 0;
        $this.$texture.$load($this.$texture.$getTextureData());
    } else {
        $this.$texture = cbggg_PixmapPacker$Page$1__init_($this, cbggg_PixmapTextureData__init_($this.$image, $this.$image.$getFormat(), $useMipMaps, 0, 1));
        $this.$texture.$setFilter($minFilter, $magFilter);
    }
    $this.$dirty = 0;
    return 1;
}
function cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage() {
    cbggg_PixmapPacker$Page.call(this);
    this.$root = null;
}
function cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage__init_(var_0) {
    var var_1 = new cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage();
    cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage__init_0(var_1, var_0);
    return var_1;
}
function cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage__init_0($this, $packer) {
    cbggg_PixmapPacker$Page__init_0($this, $packer);
    $this.$root = cbggg_PixmapPacker$GuillotineStrategy$Node__init_();
    $this.$root.$rect.$x = $packer.$padding;
    $this.$root.$rect.$y = $packer.$padding;
    $this.$root.$rect.$width = $packer.$pageWidth - ($packer.$padding * 2 | 0) | 0;
    $this.$root.$rect.$height = $packer.$pageHeight - ($packer.$padding * 2 | 0) | 0;
}
var jnci_AsciiEncoder = $rt_classWithoutFields(jnci_BufferedEncoder);
function jnci_AsciiEncoder__init_(var_0) {
    var var_1 = new jnci_AsciiEncoder();
    jnci_AsciiEncoder__init_0(var_1, var_0);
    return var_1;
}
function jnci_AsciiEncoder__init_0($this, $cs) {
    jnci_BufferedEncoder__init_($this, $cs, 1.0, 1.0);
}
function jnci_AsciiEncoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, $next, var$13;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $c = var$10[$inPos];
            if (jl_Character_isHighSurrogate($c)) {
                if (var$9 >= $inSize) {
                    if ($controller.$hasMoreInput(2)) {
                        var$9 = var$9 + (-1) | 0;
                        break a;
                    }
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $next = var$10[var$9];
                if (!jl_Character_isLowSurrogate($next)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                var$9 = var$9 + (-1) | 0;
                $result = jnc_CoderResult_unmappableForLength(2);
                break a;
            }
            if (jl_Character_isLowSurrogate($c))
                $result = jnc_CoderResult_malformedForLength(1);
            if ($c >= 128) {
                $result = jnc_CoderResult_unmappableForLength(1);
                var$9 = var$9 + (-1) | 0;
                break a;
            }
            var$10 = $outArray.data;
            var$13 = $outPos + 1 | 0;
            var$10[$outPos] = $c << 24 >> 24;
            $inPos = var$9;
            $outPos = var$13;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
}
var cbg_Gdx = $rt_classWithoutFields();
var cbg_Gdx_app = null;
var cbg_Gdx_graphics = null;
var cbg_Gdx_audio = null;
var cbg_Gdx_input = null;
var cbg_Gdx_files = null;
var cbg_Gdx_gl = null;
var cbg_Gdx_gl20 = null;
var cbg_Gdx_gl30 = null;
var jl_ReflectiveOperationException = $rt_classWithoutFields(jl_Exception);
function jl_ReflectiveOperationException__init_() {
    var var_0 = new jl_ReflectiveOperationException();
    jl_ReflectiveOperationException__init_0(var_0);
    return var_0;
}
function jl_ReflectiveOperationException__init_0($this) {
    jl_Exception__init_0($this);
}
var jlr_AnnotatedElement = $rt_classWithoutFields(0);
var jlr_AccessibleObject = $rt_classWithoutFields();
function jlr_AccessibleObject__init_() {
    var var_0 = new jlr_AccessibleObject();
    jlr_AccessibleObject__init_0(var_0);
    return var_0;
}
function jlr_AccessibleObject__init_0($this) {
    jl_Object__init_0($this);
}
function jlr_AccessibleObject_setAccessible($this, $flag) {}
var jlr_Member = $rt_classWithoutFields(0);
function jlr_Constructor() {
    var a = this; jlr_AccessibleObject.call(a);
    a.$declaringClass = null;
    a.$name2 = null;
    a.$modifiers = 0;
    a.$accessLevel = 0;
    a.$parameterTypes = null;
    a.$callable = null;
}
function jlr_Constructor__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jlr_Constructor();
    jlr_Constructor__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jlr_Constructor__init_0($this, $declaringClass, $name, $modifiers, $accessLevel, $parameterTypes, $callable) {
    jlr_AccessibleObject__init_0($this);
    $this.$declaringClass = $declaringClass;
    $this.$name2 = $name;
    $this.$modifiers = $modifiers;
    $this.$accessLevel = $accessLevel;
    $this.$parameterTypes = $parameterTypes;
    $this.$callable = $callable;
}
function jlr_Constructor_getDeclaringClass($this) {
    return $this.$declaringClass;
}
function jlr_Constructor_getModifiers($this) {
    return otcir_Flags_getModifiers($this.$modifiers, $this.$accessLevel);
}
function jlr_Constructor_getParameterTypes($this) {
    return $this.$parameterTypes.$clone();
}
function jlr_Constructor_newInstance($this, $initargs) {
    var var$2, var$3, $i, $jsArgs, $instance, var$7, var$8;
    if ($this.$modifiers & 1)
        $rt_throw(jl_InstantiationException__init_());
    if ($this.$callable === null)
        $rt_throw(jl_IllegalAccessException__init_());
    var$2 = $initargs.data;
    var$3 = var$2.length;
    if (var$3 != $this.$parameterTypes.data.length)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $i = 0;
    while (true) {
        if ($i >= var$3) {
            $jsArgs = $initargs.data;
            $instance = new ($this.$declaringClass.$platformClass);
            $this.$callable.call($instance, $jsArgs);
            return $instance;
        }
        if (!$this.$parameterTypes.data[$i].$isPrimitive() && var$2[$i] !== null) {
            var$7 = $this.$parameterTypes.data[$i];
            var$8 = var$2[$i];
            if (!var$7.$isInstance(var$8))
                $rt_throw(jl_IllegalArgumentException__init_0());
        }
        if ($this.$parameterTypes.data[$i].$isPrimitive() && var$2[$i] === null)
            break;
        $i = $i + 1 | 0;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
}
var jnc_CoderMalfunctionError = $rt_classWithoutFields(jl_Error);
function jnc_CoderMalfunctionError__init_(var_0) {
    var var_1 = new jnc_CoderMalfunctionError();
    jnc_CoderMalfunctionError__init_0(var_1, var_0);
    return var_1;
}
function jnc_CoderMalfunctionError__init_0($this, $cause) {
    jl_Error__init_4($this, $cause);
}
var cbg_Audio = $rt_classWithoutFields(0);
function cgxgbw_WebAudio() {
    jl_Object.call(this);
    this.$soundManager = null;
}
function cgxgbw_WebAudio__init_(var_0) {
    var var_1 = new cgxgbw_WebAudio();
    cgxgbw_WebAudio__init_0(var_1, var_0);
    return var_1;
}
function cgxgbw_WebAudio__init_0($this, $soundManager) {
    jl_Object__init_0($this);
    $this.$soundManager = $soundManager;
}
var jur_PosPlusGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_PosPlusGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PosPlusGroupQuantifierSet();
    jur_PosPlusGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PosPlusGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosPlusGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex, var$5;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        return (-1);
    if ($nextIndex > $stringIndex) {
        while (true) {
            var$5 = $this.$innerSet.$matches($nextIndex, $testString, $matchResult);
            if (var$5 <= $nextIndex)
                break;
            $nextIndex = var$5;
        }
        $stringIndex = $nextIndex;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function cgxgbwd_TimerWrapper() {
    var a = this; jl_Object.call(a);
    a.$timerId = null;
    a.$cancelCounter = 0;
}
function cgxgbwd_TimerWrapper__init_($this) {
    jl_Object__init_0($this);
    $this.$timerId = null;
    $this.$cancelCounter = 0;
}
function jl_AbstractStringBuilder() {
    var a = this; jl_Object.call(a);
    a.$buffer = null;
    a.$length0 = 0;
}
function jl_AbstractStringBuilder__init_0() {
    var var_0 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_1(var_0);
    return var_0;
}
function jl_AbstractStringBuilder__init_(var_0) {
    var var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_2(var_1, var_0);
    return var_1;
}
function jl_AbstractStringBuilder__init_1($this) {
    jl_AbstractStringBuilder__init_2($this, 16);
}
function jl_AbstractStringBuilder__init_2($this, $capacity) {
    jl_Object__init_0($this);
    $this.$buffer = $rt_createCharArray($capacity);
}
function jl_AbstractStringBuilder_append($this, $obj) {
    return $this.$insert($this.$length0, $obj);
}
function jl_AbstractStringBuilder_append0($this, $string) {
    return $this.$insert0($this.$length0, $string);
}
function jl_AbstractStringBuilder_insert($this, $index, $string) {
    var $i, var$4, var$5;
    if ($index >= 0 && $index <= $this.$length0) {
        if ($string === null)
            $string = $rt_s(48);
        else if ($string.$isEmpty())
            return $this;
        $this.$ensureCapacity($this.$length0 + $string.$length() | 0);
        $i = $this.$length0 - 1 | 0;
        while ($i >= $index) {
            $this.$buffer.data[$i + $string.$length() | 0] = $this.$buffer.data[$i];
            $i = $i + (-1) | 0;
        }
        $this.$length0 = $this.$length0 + $string.$length() | 0;
        $i = 0;
        while ($i < $string.$length()) {
            var$4 = $this.$buffer.data;
            var$5 = $index + 1 | 0;
            var$4[$index] = $string.$charAt($i);
            $i = $i + 1 | 0;
            $index = var$5;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_append1($this, $value) {
    return $this.$append1($value, 10);
}
function jl_AbstractStringBuilder_append2($this, $value, $radix) {
    return $this.$insert1($this.$length0, $value, $radix);
}
function jl_AbstractStringBuilder_insert0($this, $target, $value, $radix) {
    var $positive, var$5, var$6, $pos, $sz, $posLimit, var$10, var$11;
    $positive = 1;
    if ($value < 0) {
        $positive = 0;
        $value =  -$value | 0;
    }
    a: {
        if ($value < $radix) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$5 = $this.$buffer.data;
                var$6 = $target + 1 | 0;
                var$5[$target] = 45;
                $target = var$6;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit($value, $radix);
        } else {
            $pos = 1;
            $sz = 1;
            $posLimit = 2147483647 / $radix | 0;
            b: {
                while (true) {
                    var$10 = $rt_imul($pos, $radix);
                    if (var$10 > $value) {
                        var$10 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if (var$10 > $posLimit)
                        break;
                    $pos = var$10;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                var$11 = $target;
            else {
                var$5 = $this.$buffer.data;
                var$11 = $target + 1 | 0;
                var$5[$target] = 45;
            }
            while (true) {
                if (var$10 <= 0)
                    break a;
                var$5 = $this.$buffer.data;
                var$6 = var$11 + 1 | 0;
                var$5[var$11] = jl_Character_forDigit($value / var$10 | 0, $radix);
                $value = $value % var$10 | 0;
                var$10 = var$10 / $radix | 0;
                var$11 = var$6;
            }
        }
    }
    return $this;
}
function jl_AbstractStringBuilder_append3($this, $value) {
    return $this.$insert2($this.$length0, $value);
}
function jl_AbstractStringBuilder_insert1($this, $target, $value) {
    return $this.$insert3($target, $value, 10);
}
function jl_AbstractStringBuilder_insert2($this, $target, $value, $radix) {
    var $positive, var$5, var$6, var$7, $sz, $pos, $pos_0, var$11;
    $positive = 1;
    if (Long_lt($value, Long_ZERO)) {
        $positive = 0;
        $value = Long_neg($value);
    }
    a: {
        var$5 = Long_fromInt($radix);
        if (Long_lt($value, var$5)) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$6 = $this.$buffer.data;
                var$7 = $target + 1 | 0;
                var$6[$target] = 45;
                $target = var$7;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit(Long_lo($value), $radix);
        } else {
            $sz = 1;
            $pos = Long_fromInt(1);
            while (true) {
                $pos_0 = Long_mul($pos, var$5);
                if (Long_le($pos_0, $pos))
                    break;
                if (Long_gt($pos_0, $value))
                    break;
                $sz = $sz + 1 | 0;
                $pos = $pos_0;
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                var$11 = $target;
            else {
                var$6 = $this.$buffer.data;
                var$11 = $target + 1 | 0;
                var$6[$target] = 45;
            }
            while (true) {
                if (Long_le($pos, Long_ZERO))
                    break a;
                var$6 = $this.$buffer.data;
                var$7 = var$11 + 1 | 0;
                var$6[var$11] = jl_Character_forDigit(Long_lo(Long_div($value, $pos)), $radix);
                $value = Long_rem($value, $pos);
                $pos = Long_div($pos, var$5);
                var$11 = var$7;
            }
        }
    }
    return $this;
}
function jl_AbstractStringBuilder_append4($this, $value) {
    return $this.$insert4($this.$length0, $value);
}
function jl_AbstractStringBuilder_insert3($this, $target, $value) {
    var var$3, var$4, var$5, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $zeros, $pos, $i, $intDigit, var$17;
    var$3 = $rt_compare($value, 0.0);
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 48;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 46;
        $this.$buffer.data[var$5] = 48;
        return $this;
    }
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 45;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 48;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 46;
        $this.$buffer.data[var$3] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 78;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 97;
        $this.$buffer.data[var$5] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if (var$3 > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            var$3 = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 73;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 110;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 102;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 110;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 116;
        $this.$buffer.data[var$5] = 121;
        return $this;
    }
    jl_AbstractStringBuilder$Constants_$callClinit();
    $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
    otcit_FloatAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa;
    $exp = $number.$exponent;
    $negative = $number.$sign;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 9;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else {
            $mantissa = $mantissa / jl_AbstractStringBuilder$Constants_intPowersOfTen.data[ -$exp | 0] | 0;
            $digits = $digits - $exp | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    var$3 = $sz + $digits | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + var$3 | 0);
    if (!$negative)
        var$5 = $target;
    else {
        var$4 = $this.$buffer.data;
        var$5 = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = 100000000;
    $i = 0;
    while ($i < $digits) {
        if ($pos <= 0)
            $intDigit = 0;
        else {
            $intDigit = $mantissa / $pos | 0;
            $mantissa = $mantissa % $pos | 0;
        }
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            var$5 = var$3;
        else {
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 46;
        }
        $pos = $pos / 10 | 0;
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 69;
        if ($exp >= 0)
            var$5 = var$3;
        else {
            $exp =  -$exp | 0;
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 45;
        }
        if ($exp < 10)
            var$17 = var$5;
        else {
            var$4 = $this.$buffer.data;
            var$17 = var$5 + 1 | 0;
            var$4[var$5] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $this.$buffer.data[var$17] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
}
function jl_AbstractStringBuilder_trailingDecimalZeros($n) {
    var $result, $zeros, var$4, var$5;
    if (!($n % 1000000000 | 0))
        return 9;
    $result = 0;
    $zeros = 1;
    if (!($n % 100000000 | 0)) {
        $result = 8;
        $zeros = 100000000;
    }
    var$4 = $zeros * 10000 | 0;
    if ($n % var$4 | 0)
        var$4 = $zeros;
    else
        $result = $result | 4;
    var$5 = var$4 * 100 | 0;
    if ($n % var$5 | 0)
        var$5 = var$4;
    else
        $result = $result | 2;
    if (!($n % (var$5 * 10 | 0) | 0))
        $result = $result | 1;
    return $result;
}
function jl_AbstractStringBuilder_append5($this, $c) {
    return $this.$insert5($this.$length0, $c);
}
function jl_AbstractStringBuilder_insert4($this, $index, $c) {
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
    $this.$buffer.data[$index] = $c;
    return $this;
}
function jl_AbstractStringBuilder_insert5($this, $index, $obj) {
    return $this.$insert0($index, $obj === null ? $rt_s(48) : $obj.$toString());
}
function jl_AbstractStringBuilder_ensureCapacity($this, $capacity) {
    var $newLength;
    if ($this.$buffer.data.length >= $capacity)
        return;
    $newLength = $this.$buffer.data.length >= 1073741823 ? 2147483647 : jl_Math_max($capacity, jl_Math_max($this.$buffer.data.length * 2 | 0, 5));
    $this.$buffer = ju_Arrays_copyOf0($this.$buffer, $newLength);
}
function jl_AbstractStringBuilder_toString($this) {
    return jl_String__init_0($this.$buffer, 0, $this.$length0);
}
function jl_AbstractStringBuilder_length($this) {
    return $this.$length0;
}
function jl_AbstractStringBuilder_charAt($this, $index) {
    if ($index >= 0 && $index < $this.$length0)
        return $this.$buffer.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_append6($this, $chars, $offset, $len) {
    return $this.$insert6($this.$length0, $chars, $offset, $len);
}
function jl_AbstractStringBuilder_insert6($this, $index, $chars, $offset, $len) {
    var var$5, var$6, var$7, var$8, var$9;
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
    var$5 = $len + $offset | 0;
    while ($offset < var$5) {
        var$6 = $chars.data;
        var$7 = $this.$buffer.data;
        var$8 = $index + 1 | 0;
        var$9 = $offset + 1 | 0;
        var$7[$index] = var$6[$offset];
        $index = var$8;
        $offset = var$9;
    }
    return $this;
}
function jl_AbstractStringBuilder_append7($this, $chars) {
    return $this.$append3($chars, 0, $chars.data.length);
}
function jl_AbstractStringBuilder_getChars($this, $srcBegin, $srcEnd, $dst, $dstBegin) {
    var var$5, var$6, var$7, var$8;
    if ($srcBegin > $srcEnd)
        $rt_throw(jl_IndexOutOfBoundsException__init_1($rt_s(49)));
    while ($srcBegin < $srcEnd) {
        var$5 = $dst.data;
        var$6 = $dstBegin + 1 | 0;
        var$7 = $this.$buffer.data;
        var$8 = $srcBegin + 1 | 0;
        var$5[$dstBegin] = var$7[$srcBegin];
        $dstBegin = var$6;
        $srcBegin = var$8;
    }
}
function jl_AbstractStringBuilder_setLength($this, $newLength) {
    $this.$length0 = $newLength;
}
function jl_AbstractStringBuilder_deleteCharAt($this, $i) {
    var var$2, var$3, $i_0;
    if ($i >= 0 && $i < $this.$length0) {
        $this.$length0 = $this.$length0 - 1 | 0;
        while ($i < $this.$length0) {
            var$2 = $this.$buffer.data;
            var$3 = $this.$buffer.data;
            $i_0 = $i + 1 | 0;
            var$2[$i] = var$3[$i_0];
            $i = $i_0;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_delete($this, $start, $end) {
    var var$3, $sz, $i, var$6, var$7, var$8;
    var$3 = $rt_compare($start, $end);
    if (var$3 <= 0 && $start <= $this.$length0) {
        if (!var$3)
            return $this;
        $sz = $this.$length0 - $end | 0;
        $this.$length0 = $this.$length0 - ($end - $start | 0) | 0;
        $i = 0;
        while ($i < $sz) {
            var$6 = $this.$buffer.data;
            var$3 = $start + 1 | 0;
            var$7 = $this.$buffer.data;
            var$8 = $end + 1 | 0;
            var$6[$start] = var$7[$end];
            $i = $i + 1 | 0;
            $start = var$3;
            $end = var$8;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_insertSpace($this, $start, $end) {
    var $sz, $i;
    $sz = $this.$length0 - $start | 0;
    $this.$ensureCapacity(($this.$length0 + $end | 0) - $start | 0);
    $i = $sz - 1 | 0;
    while ($i >= 0) {
        $this.$buffer.data[$end + $i | 0] = $this.$buffer.data[$start + $i | 0];
        $i = $i + (-1) | 0;
    }
    $this.$length0 = $this.$length0 + ($end - $start | 0) | 0;
}
var jl_Appendable = $rt_classWithoutFields(0);
var jl_StringBuffer = $rt_classWithoutFields(jl_AbstractStringBuilder);
function jl_StringBuffer__init_() {
    var var_0 = new jl_StringBuffer();
    jl_StringBuffer__init_0(var_0);
    return var_0;
}
function jl_StringBuffer__init_0($this) {
    jl_AbstractStringBuilder__init_1($this);
}
function jl_StringBuffer_append($this, $c) {
    jl_AbstractStringBuilder_append5($this, $c);
    return $this;
}
function jl_StringBuffer_append0($this, $chars, $offset, $len) {
    jl_AbstractStringBuilder_append6($this, $chars, $offset, $len);
    return $this;
}
function jl_StringBuffer_append1($this, $chars) {
    jl_AbstractStringBuilder_append7($this, $chars);
    return $this;
}
function jl_StringBuffer_insert($this, $index, $chars, $offset, $len) {
    jl_AbstractStringBuilder_insert6($this, $index, $chars, $offset, $len);
    return $this;
}
function jl_StringBuffer_insert0($this, $index, $c) {
    jl_AbstractStringBuilder_insert4($this, $index, $c);
    return $this;
}
function jl_StringBuffer_insert1($this, var$1, var$2, var$3, var$4) {
    return $this.$insert7(var$1, var$2, var$3, var$4);
}
function jl_StringBuffer_append2($this, var$1, var$2, var$3) {
    return $this.$append6(var$1, var$2, var$3);
}
function jl_StringBuffer_charAt($this, var$1) {
    return jl_AbstractStringBuilder_charAt($this, var$1);
}
function jl_StringBuffer_length($this) {
    return jl_AbstractStringBuilder_length($this);
}
function jl_StringBuffer_toString($this) {
    return jl_AbstractStringBuilder_toString($this);
}
function jl_StringBuffer_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuffer_insert2($this, var$1, var$2) {
    return $this.$insert8(var$1, var$2);
}
var cbgu_Pool$Poolable = $rt_classWithoutFields(0);
function jn_Buffer() {
    var a = this; jl_Object.call(a);
    a.$capacity = 0;
    a.$position3 = 0;
    a.$limit = 0;
    a.$mark = 0;
}
function jn_Buffer__init_($this, $capacity) {
    jl_Object__init_0($this);
    $this.$mark = (-1);
    $this.$capacity = $capacity;
    $this.$limit = $capacity;
}
function jn_Buffer_capacity($this) {
    return $this.$capacity;
}
function jn_Buffer_position($this) {
    return $this.$position3;
}
function jn_Buffer_position0($this, $newPosition) {
    if ($newPosition >= 0 && $newPosition <= $this.$limit) {
        $this.$position3 = $newPosition;
        if ($newPosition < $this.$mark)
            $this.$mark = 0;
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_(((((((jl_StringBuilder__init_()).$append($rt_s(50))).$append0($newPosition)).$append($rt_s(51))).$append0($this.$limit)).$append($rt_s(52))).$toString()));
}
function jn_Buffer_limit($this) {
    return $this.$limit;
}
function jn_Buffer_limit0($this, $newLimit) {
    if ($newLimit >= 0 && $newLimit <= $this.$capacity) {
        if ($this.$mark > $newLimit)
            $this.$mark = (-1);
        $this.$limit = $newLimit;
        if ($this.$position3 > $this.$limit)
            $this.$position3 = $this.$limit;
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_(((((((jl_StringBuilder__init_()).$append($rt_s(53))).$append0($newLimit)).$append($rt_s(51))).$append0($this.$capacity)).$append($rt_s(52))).$toString()));
}
function jn_Buffer_clear($this) {
    $this.$position3 = 0;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_Buffer_flip($this) {
    $this.$limit = $this.$position3;
    $this.$position3 = 0;
    $this.$mark = (-1);
    return $this;
}
function jn_Buffer_remaining($this) {
    return $this.$limit - $this.$position3 | 0;
}
function jn_Buffer_hasRemaining($this) {
    return $this.$position3 >= $this.$limit ? 0 : 1;
}
var cbgg_Colors = $rt_classWithoutFields();
var cbgg_Colors_map = null;
function cbgg_Colors_$callClinit() {
    cbgg_Colors_$callClinit = $rt_eraseClinit(cbgg_Colors);
    cbgg_Colors__clinit_();
}
function cbgg_Colors_get($name) {
    cbgg_Colors_$callClinit();
    return cbgg_Colors_map.$get1($name);
}
function cbgg_Colors_reset() {
    var var$1;
    cbgg_Colors_$callClinit();
    cbgg_Colors_map.$clear();
    var$1 = cbgg_Colors_map;
    cbgg_Color_$callClinit();
    var$1.$put1($rt_s(54), cbgg_Color_CLEAR);
    cbgg_Colors_map.$put1($rt_s(55), cbgg_Color_BLACK);
    cbgg_Colors_map.$put1($rt_s(56), cbgg_Color_WHITE);
    cbgg_Colors_map.$put1($rt_s(57), cbgg_Color_LIGHT_GRAY);
    cbgg_Colors_map.$put1($rt_s(58), cbgg_Color_GRAY);
    cbgg_Colors_map.$put1($rt_s(59), cbgg_Color_DARK_GRAY);
    cbgg_Colors_map.$put1($rt_s(60), cbgg_Color_BLUE);
    cbgg_Colors_map.$put1($rt_s(61), cbgg_Color_NAVY);
    cbgg_Colors_map.$put1($rt_s(62), cbgg_Color_ROYAL);
    cbgg_Colors_map.$put1($rt_s(63), cbgg_Color_SLATE);
    cbgg_Colors_map.$put1($rt_s(64), cbgg_Color_SKY);
    cbgg_Colors_map.$put1($rt_s(65), cbgg_Color_CYAN);
    cbgg_Colors_map.$put1($rt_s(66), cbgg_Color_TEAL);
    cbgg_Colors_map.$put1($rt_s(67), cbgg_Color_GREEN);
    cbgg_Colors_map.$put1($rt_s(68), cbgg_Color_CHARTREUSE);
    cbgg_Colors_map.$put1($rt_s(69), cbgg_Color_LIME);
    cbgg_Colors_map.$put1($rt_s(70), cbgg_Color_FOREST);
    cbgg_Colors_map.$put1($rt_s(71), cbgg_Color_OLIVE);
    cbgg_Colors_map.$put1($rt_s(72), cbgg_Color_YELLOW);
    cbgg_Colors_map.$put1($rt_s(73), cbgg_Color_GOLD);
    cbgg_Colors_map.$put1($rt_s(74), cbgg_Color_GOLDENROD);
    cbgg_Colors_map.$put1($rt_s(75), cbgg_Color_ORANGE);
    cbgg_Colors_map.$put1($rt_s(76), cbgg_Color_BROWN);
    cbgg_Colors_map.$put1($rt_s(77), cbgg_Color_TAN);
    cbgg_Colors_map.$put1($rt_s(78), cbgg_Color_FIREBRICK);
    cbgg_Colors_map.$put1($rt_s(79), cbgg_Color_RED);
    cbgg_Colors_map.$put1($rt_s(80), cbgg_Color_SCARLET);
    cbgg_Colors_map.$put1($rt_s(81), cbgg_Color_CORAL);
    cbgg_Colors_map.$put1($rt_s(82), cbgg_Color_SALMON);
    cbgg_Colors_map.$put1($rt_s(83), cbgg_Color_PINK);
    cbgg_Colors_map.$put1($rt_s(84), cbgg_Color_MAGENTA);
    cbgg_Colors_map.$put1($rt_s(85), cbgg_Color_PURPLE);
    cbgg_Colors_map.$put1($rt_s(86), cbgg_Color_VIOLET);
    cbgg_Colors_map.$put1($rt_s(87), cbgg_Color_MAROON);
}
function cbgg_Colors__clinit_() {
    cbgg_Colors_map = cbgu_ObjectMap__init_();
    cbgg_Colors_reset();
}
var jur_SpecialToken = $rt_classWithoutFields();
function jur_SpecialToken__init_($this) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass() {
    var a = this; jur_SpecialToken.call(a);
    a.$alt0 = 0;
    a.$altSurrogates = 0;
    a.$lowHighSurrogates = null;
    a.$charClassWithoutSurrogates = null;
    a.$charClassWithSurrogates = null;
    a.$mayContainSupplCodepoints = 0;
}
var jur_AbstractCharClass_charClasses = null;
function jur_AbstractCharClass_$callClinit() {
    jur_AbstractCharClass_$callClinit = $rt_eraseClinit(jur_AbstractCharClass);
    jur_AbstractCharClass__clinit_();
}
function jur_AbstractCharClass__init_($this) {
    jur_AbstractCharClass_$callClinit();
    jur_SpecialToken__init_($this);
    $this.$lowHighSurrogates = ju_BitSet__init_(2048);
}
function jur_AbstractCharClass_getBits($this) {
    return null;
}
function jur_AbstractCharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_AbstractCharClass_hasLowHighSurrogates($this) {
    return !$this.$altSurrogates ? ($this.$lowHighSurrogates.$nextSetBit(0) >= 2048 ? 0 : 1) : $this.$lowHighSurrogates.$nextClearBit(0) >= 2048 ? 0 : 1;
}
function jur_AbstractCharClass_mayContainSupplCodepoints($this) {
    return $this.$mayContainSupplCodepoints;
}
function jur_AbstractCharClass_getInstance($this) {
    return $this;
}
function jur_AbstractCharClass_getSurrogates($this) {
    var $lHS;
    if ($this.$charClassWithSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithSurrogates = jur_AbstractCharClass$1__init_($this, $lHS);
        $this.$charClassWithSurrogates.$setNegative($this.$altSurrogates);
    }
    return $this.$charClassWithSurrogates;
}
function jur_AbstractCharClass_getWithoutSurrogates($this) {
    var $lHS;
    if ($this.$charClassWithoutSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithoutSurrogates = jur_AbstractCharClass$2__init_($this, $lHS, $this);
        $this.$charClassWithoutSurrogates.$setNegative($this.$isNegative());
        $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints;
    }
    return $this.$charClassWithoutSurrogates;
}
function jur_AbstractCharClass_hasUCI($this) {
    return 0;
}
function jur_AbstractCharClass_setNegative($this, $value) {
    if ($this.$alt0 ^ $value) {
        $this.$alt0 = $this.$alt0 ? 0 : 1;
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
    }
    if (!$this.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    return $this;
}
function jur_AbstractCharClass_isNegative($this) {
    return $this.$alt0;
}
function jur_AbstractCharClass_intersects($cc, $ch) {
    jur_AbstractCharClass_$callClinit();
    return $cc.$contains($ch);
}
function jur_AbstractCharClass_intersects0($cc1, $cc2) {
    jur_AbstractCharClass_$callClinit();
    if ($cc1.$getBits() !== null && $cc2.$getBits() !== null)
        return ($cc1.$getBits()).$intersects($cc2.$getBits());
    return 1;
}
function jur_AbstractCharClass_getPredefinedClass($name, $negative) {
    jur_AbstractCharClass_$callClinit();
    return (jur_AbstractCharClass$PredefinedCharacterClasses_getObject(jur_AbstractCharClass_charClasses, $name)).$getValue($negative);
}
function jur_AbstractCharClass__clinit_() {
    jur_AbstractCharClass_charClasses = jur_AbstractCharClass$PredefinedCharacterClasses__init_();
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0($this, $this$0) {
    $this.$this$0 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains($this, $ch) {
    return jl_Character_isUnicodeIdentifierPart($ch);
}
var jur_AbstractCharClass$PredefinedCharacterClasses = $rt_classWithoutFields();
var jur_AbstractCharClass$PredefinedCharacterClasses_space = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_digit = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_contents = null;
function jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit() {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit = $rt_eraseClinit(jur_AbstractCharClass$PredefinedCharacterClasses);
    jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
}
function jur_AbstractCharClass$PredefinedCharacterClasses__init_() {
    var var_0 = new jur_AbstractCharClass$PredefinedCharacterClasses();
    jur_AbstractCharClass$PredefinedCharacterClasses__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$PredefinedCharacterClasses__init_0($this) {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$PredefinedCharacterClasses_getObject($this, $name) {
    var $i, $row, var$4;
    $i = 0;
    while (true) {
        jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
        if ($i >= jur_AbstractCharClass$PredefinedCharacterClasses_contents.data.length)
            $rt_throw(ju_MissingResourceException__init_($rt_s(88), $rt_s(88), $name));
        $row = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data[$i];
        var$4 = $row.data;
        if ($name.$equals(var$4[0]))
            break;
        $i = $i + 1 | 0;
    }
    return var$4[1];
}
function jur_AbstractCharClass$PredefinedCharacterClasses__clinit_() {
    jur_AbstractCharClass$PredefinedCharacterClasses_space = jur_AbstractCharClass$LazySpace__init_();
    jur_AbstractCharClass$PredefinedCharacterClasses_digit = jur_AbstractCharClass$LazyDigit__init_();
    jur_AbstractCharClass$PredefinedCharacterClasses_contents = $rt_createArrayFromData($rt_arraycls(jl_Object), [$rt_createArrayFromData(jl_Object, [$rt_s(89), jur_AbstractCharClass$LazyLower__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(90), jur_AbstractCharClass$LazyUpper__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(91), jur_AbstractCharClass$LazyASCII__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(92), jur_AbstractCharClass$LazyAlpha__init_()]), $rt_createArrayFromData(jl_Object,
    [$rt_s(93), jur_AbstractCharClass$PredefinedCharacterClasses_digit]), $rt_createArrayFromData(jl_Object, [$rt_s(94), jur_AbstractCharClass$LazyAlnum__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(95), jur_AbstractCharClass$LazyPunct__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(96), jur_AbstractCharClass$LazyGraph__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(97), jur_AbstractCharClass$LazyPrint__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(98), jur_AbstractCharClass$LazyBlank__init_()]),
    $rt_createArrayFromData(jl_Object, [$rt_s(99), jur_AbstractCharClass$LazyCntrl__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(100), jur_AbstractCharClass$LazyXDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(101), jur_AbstractCharClass$LazyJavaLowerCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(102), jur_AbstractCharClass$LazyJavaUpperCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(103), jur_AbstractCharClass$LazyJavaWhitespace__init_()]), $rt_createArrayFromData(jl_Object,
    [$rt_s(104), jur_AbstractCharClass$LazyJavaMirrored__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(105), jur_AbstractCharClass$LazyJavaDefined__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(106), jur_AbstractCharClass$LazyJavaDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(107), jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(108), jur_AbstractCharClass$LazyJavaISOControl__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(109),
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(110), jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(111), jur_AbstractCharClass$LazyJavaLetter__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(112), jur_AbstractCharClass$LazyJavaLetterOrDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(113), jur_AbstractCharClass$LazyJavaSpaceChar__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(114),
    jur_AbstractCharClass$LazyJavaTitleCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(115), jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(116), jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(117), jur_AbstractCharClass$PredefinedCharacterClasses_space]), $rt_createArrayFromData(jl_Object, [$rt_s(118), jur_AbstractCharClass$LazyWord__init_()]), $rt_createArrayFromData(jl_Object,
    [$rt_s(119), jur_AbstractCharClass$LazyNonWord__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(120), jur_AbstractCharClass$PredefinedCharacterClasses_space]), $rt_createArrayFromData(jl_Object, [$rt_s(121), jur_AbstractCharClass$LazyNonSpace__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(122), jur_AbstractCharClass$PredefinedCharacterClasses_digit]), $rt_createArrayFromData(jl_Object, [$rt_s(123), jur_AbstractCharClass$LazyNonDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(124),
    jur_AbstractCharClass$LazyRange__init_(0, 127)]), $rt_createArrayFromData(jl_Object, [$rt_s(125), jur_AbstractCharClass$LazyRange__init_(128, 255)]), $rt_createArrayFromData(jl_Object, [$rt_s(126), jur_AbstractCharClass$LazyRange__init_(256, 383)]), $rt_createArrayFromData(jl_Object, [$rt_s(127), jur_AbstractCharClass$LazyRange__init_(384, 591)]), $rt_createArrayFromData(jl_Object, [$rt_s(128), jur_AbstractCharClass$LazyRange__init_(592, 687)]), $rt_createArrayFromData(jl_Object, [$rt_s(129), jur_AbstractCharClass$LazyRange__init_(688,
    767)]), $rt_createArrayFromData(jl_Object, [$rt_s(130), jur_AbstractCharClass$LazyRange__init_(768, 879)]), $rt_createArrayFromData(jl_Object, [$rt_s(131), jur_AbstractCharClass$LazyRange__init_(880, 1023)]), $rt_createArrayFromData(jl_Object, [$rt_s(132), jur_AbstractCharClass$LazyRange__init_(1024, 1279)]), $rt_createArrayFromData(jl_Object, [$rt_s(133), jur_AbstractCharClass$LazyRange__init_(1280, 1327)]), $rt_createArrayFromData(jl_Object, [$rt_s(134), jur_AbstractCharClass$LazyRange__init_(1328, 1423)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(135), jur_AbstractCharClass$LazyRange__init_(1424, 1535)]), $rt_createArrayFromData(jl_Object, [$rt_s(136), jur_AbstractCharClass$LazyRange__init_(1536, 1791)]), $rt_createArrayFromData(jl_Object, [$rt_s(137), jur_AbstractCharClass$LazyRange__init_(1792, 1871)]), $rt_createArrayFromData(jl_Object, [$rt_s(138), jur_AbstractCharClass$LazyRange__init_(1872, 1919)]), $rt_createArrayFromData(jl_Object, [$rt_s(139), jur_AbstractCharClass$LazyRange__init_(1920, 1983)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(140), jur_AbstractCharClass$LazyRange__init_(2304, 2431)]), $rt_createArrayFromData(jl_Object, [$rt_s(141), jur_AbstractCharClass$LazyRange__init_(2432, 2559)]), $rt_createArrayFromData(jl_Object, [$rt_s(142), jur_AbstractCharClass$LazyRange__init_(2560, 2687)]), $rt_createArrayFromData(jl_Object, [$rt_s(143), jur_AbstractCharClass$LazyRange__init_(2688, 2815)]), $rt_createArrayFromData(jl_Object, [$rt_s(144), jur_AbstractCharClass$LazyRange__init_(2816, 2943)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(145), jur_AbstractCharClass$LazyRange__init_(2944, 3071)]), $rt_createArrayFromData(jl_Object, [$rt_s(146), jur_AbstractCharClass$LazyRange__init_(3072, 3199)]), $rt_createArrayFromData(jl_Object, [$rt_s(147), jur_AbstractCharClass$LazyRange__init_(3200, 3327)]), $rt_createArrayFromData(jl_Object, [$rt_s(148), jur_AbstractCharClass$LazyRange__init_(3328, 3455)]), $rt_createArrayFromData(jl_Object, [$rt_s(149), jur_AbstractCharClass$LazyRange__init_(3456, 3583)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(150), jur_AbstractCharClass$LazyRange__init_(3584, 3711)]), $rt_createArrayFromData(jl_Object, [$rt_s(151), jur_AbstractCharClass$LazyRange__init_(3712, 3839)]), $rt_createArrayFromData(jl_Object, [$rt_s(152), jur_AbstractCharClass$LazyRange__init_(3840, 4095)]), $rt_createArrayFromData(jl_Object, [$rt_s(153), jur_AbstractCharClass$LazyRange__init_(4096, 4255)]), $rt_createArrayFromData(jl_Object, [$rt_s(154), jur_AbstractCharClass$LazyRange__init_(4256, 4351)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(155), jur_AbstractCharClass$LazyRange__init_(4352, 4607)]), $rt_createArrayFromData(jl_Object, [$rt_s(156), jur_AbstractCharClass$LazyRange__init_(4608, 4991)]), $rt_createArrayFromData(jl_Object, [$rt_s(157), jur_AbstractCharClass$LazyRange__init_(4992, 5023)]), $rt_createArrayFromData(jl_Object, [$rt_s(158), jur_AbstractCharClass$LazyRange__init_(5024, 5119)]), $rt_createArrayFromData(jl_Object, [$rt_s(159), jur_AbstractCharClass$LazyRange__init_(5120, 5759)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(160), jur_AbstractCharClass$LazyRange__init_(5760, 5791)]), $rt_createArrayFromData(jl_Object, [$rt_s(161), jur_AbstractCharClass$LazyRange__init_(5792, 5887)]), $rt_createArrayFromData(jl_Object, [$rt_s(162), jur_AbstractCharClass$LazyRange__init_(5888, 5919)]), $rt_createArrayFromData(jl_Object, [$rt_s(163), jur_AbstractCharClass$LazyRange__init_(5920, 5951)]), $rt_createArrayFromData(jl_Object, [$rt_s(164), jur_AbstractCharClass$LazyRange__init_(5952, 5983)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(165), jur_AbstractCharClass$LazyRange__init_(5984, 6015)]), $rt_createArrayFromData(jl_Object, [$rt_s(166), jur_AbstractCharClass$LazyRange__init_(6016, 6143)]), $rt_createArrayFromData(jl_Object, [$rt_s(167), jur_AbstractCharClass$LazyRange__init_(6144, 6319)]), $rt_createArrayFromData(jl_Object, [$rt_s(168), jur_AbstractCharClass$LazyRange__init_(6400, 6479)]), $rt_createArrayFromData(jl_Object, [$rt_s(169), jur_AbstractCharClass$LazyRange__init_(6480, 6527)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(170), jur_AbstractCharClass$LazyRange__init_(6528, 6623)]), $rt_createArrayFromData(jl_Object, [$rt_s(171), jur_AbstractCharClass$LazyRange__init_(6624, 6655)]), $rt_createArrayFromData(jl_Object, [$rt_s(172), jur_AbstractCharClass$LazyRange__init_(6656, 6687)]), $rt_createArrayFromData(jl_Object, [$rt_s(173), jur_AbstractCharClass$LazyRange__init_(7424, 7551)]), $rt_createArrayFromData(jl_Object, [$rt_s(174), jur_AbstractCharClass$LazyRange__init_(7552, 7615)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(175), jur_AbstractCharClass$LazyRange__init_(7616, 7679)]), $rt_createArrayFromData(jl_Object, [$rt_s(176), jur_AbstractCharClass$LazyRange__init_(7680, 7935)]), $rt_createArrayFromData(jl_Object, [$rt_s(177), jur_AbstractCharClass$LazyRange__init_(7936, 8191)]), $rt_createArrayFromData(jl_Object, [$rt_s(178), jur_AbstractCharClass$LazyRange__init_(8192, 8303)]), $rt_createArrayFromData(jl_Object, [$rt_s(179), jur_AbstractCharClass$LazyRange__init_(8304, 8351)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(180), jur_AbstractCharClass$LazyRange__init_(8352, 8399)]), $rt_createArrayFromData(jl_Object, [$rt_s(181), jur_AbstractCharClass$LazyRange__init_(8400, 8447)]), $rt_createArrayFromData(jl_Object, [$rt_s(182), jur_AbstractCharClass$LazyRange__init_(8448, 8527)]), $rt_createArrayFromData(jl_Object, [$rt_s(183), jur_AbstractCharClass$LazyRange__init_(8528, 8591)]), $rt_createArrayFromData(jl_Object, [$rt_s(184), jur_AbstractCharClass$LazyRange__init_(8592, 8703)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(185), jur_AbstractCharClass$LazyRange__init_(8704, 8959)]), $rt_createArrayFromData(jl_Object, [$rt_s(186), jur_AbstractCharClass$LazyRange__init_(8960, 9215)]), $rt_createArrayFromData(jl_Object, [$rt_s(187), jur_AbstractCharClass$LazyRange__init_(9216, 9279)]), $rt_createArrayFromData(jl_Object, [$rt_s(188), jur_AbstractCharClass$LazyRange__init_(9280, 9311)]), $rt_createArrayFromData(jl_Object, [$rt_s(189), jur_AbstractCharClass$LazyRange__init_(9312, 9471)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(190), jur_AbstractCharClass$LazyRange__init_(9472, 9599)]), $rt_createArrayFromData(jl_Object, [$rt_s(191), jur_AbstractCharClass$LazyRange__init_(9600, 9631)]), $rt_createArrayFromData(jl_Object, [$rt_s(192), jur_AbstractCharClass$LazyRange__init_(9632, 9727)]), $rt_createArrayFromData(jl_Object, [$rt_s(193), jur_AbstractCharClass$LazyRange__init_(9728, 9983)]), $rt_createArrayFromData(jl_Object, [$rt_s(194), jur_AbstractCharClass$LazyRange__init_(9984, 10175)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(195), jur_AbstractCharClass$LazyRange__init_(10176, 10223)]), $rt_createArrayFromData(jl_Object, [$rt_s(196), jur_AbstractCharClass$LazyRange__init_(10224, 10239)]), $rt_createArrayFromData(jl_Object, [$rt_s(197), jur_AbstractCharClass$LazyRange__init_(10240, 10495)]), $rt_createArrayFromData(jl_Object, [$rt_s(198), jur_AbstractCharClass$LazyRange__init_(10496, 10623)]), $rt_createArrayFromData(jl_Object, [$rt_s(199), jur_AbstractCharClass$LazyRange__init_(10624,
    10751)]), $rt_createArrayFromData(jl_Object, [$rt_s(200), jur_AbstractCharClass$LazyRange__init_(10752, 11007)]), $rt_createArrayFromData(jl_Object, [$rt_s(201), jur_AbstractCharClass$LazyRange__init_(11008, 11263)]), $rt_createArrayFromData(jl_Object, [$rt_s(202), jur_AbstractCharClass$LazyRange__init_(11264, 11359)]), $rt_createArrayFromData(jl_Object, [$rt_s(203), jur_AbstractCharClass$LazyRange__init_(11392, 11519)]), $rt_createArrayFromData(jl_Object, [$rt_s(204), jur_AbstractCharClass$LazyRange__init_(11520,
    11567)]), $rt_createArrayFromData(jl_Object, [$rt_s(205), jur_AbstractCharClass$LazyRange__init_(11568, 11647)]), $rt_createArrayFromData(jl_Object, [$rt_s(206), jur_AbstractCharClass$LazyRange__init_(11648, 11743)]), $rt_createArrayFromData(jl_Object, [$rt_s(207), jur_AbstractCharClass$LazyRange__init_(11776, 11903)]), $rt_createArrayFromData(jl_Object, [$rt_s(208), jur_AbstractCharClass$LazyRange__init_(11904, 12031)]), $rt_createArrayFromData(jl_Object, [$rt_s(209), jur_AbstractCharClass$LazyRange__init_(12032,
    12255)]), $rt_createArrayFromData(jl_Object, [$rt_s(210), jur_AbstractCharClass$LazyRange__init_(12272, 12287)]), $rt_createArrayFromData(jl_Object, [$rt_s(211), jur_AbstractCharClass$LazyRange__init_(12288, 12351)]), $rt_createArrayFromData(jl_Object, [$rt_s(212), jur_AbstractCharClass$LazyRange__init_(12352, 12447)]), $rt_createArrayFromData(jl_Object, [$rt_s(213), jur_AbstractCharClass$LazyRange__init_(12448, 12543)]), $rt_createArrayFromData(jl_Object, [$rt_s(214), jur_AbstractCharClass$LazyRange__init_(12544,
    12591)]), $rt_createArrayFromData(jl_Object, [$rt_s(215), jur_AbstractCharClass$LazyRange__init_(12592, 12687)]), $rt_createArrayFromData(jl_Object, [$rt_s(216), jur_AbstractCharClass$LazyRange__init_(12688, 12703)]), $rt_createArrayFromData(jl_Object, [$rt_s(217), jur_AbstractCharClass$LazyRange__init_(12704, 12735)]), $rt_createArrayFromData(jl_Object, [$rt_s(218), jur_AbstractCharClass$LazyRange__init_(12736, 12783)]), $rt_createArrayFromData(jl_Object, [$rt_s(219), jur_AbstractCharClass$LazyRange__init_(12784,
    12799)]), $rt_createArrayFromData(jl_Object, [$rt_s(220), jur_AbstractCharClass$LazyRange__init_(12800, 13055)]), $rt_createArrayFromData(jl_Object, [$rt_s(221), jur_AbstractCharClass$LazyRange__init_(13056, 13311)]), $rt_createArrayFromData(jl_Object, [$rt_s(222), jur_AbstractCharClass$LazyRange__init_(13312, 19893)]), $rt_createArrayFromData(jl_Object, [$rt_s(223), jur_AbstractCharClass$LazyRange__init_(19904, 19967)]), $rt_createArrayFromData(jl_Object, [$rt_s(224), jur_AbstractCharClass$LazyRange__init_(19968,
    40959)]), $rt_createArrayFromData(jl_Object, [$rt_s(225), jur_AbstractCharClass$LazyRange__init_(40960, 42127)]), $rt_createArrayFromData(jl_Object, [$rt_s(226), jur_AbstractCharClass$LazyRange__init_(42128, 42191)]), $rt_createArrayFromData(jl_Object, [$rt_s(227), jur_AbstractCharClass$LazyRange__init_(42752, 42783)]), $rt_createArrayFromData(jl_Object, [$rt_s(228), jur_AbstractCharClass$LazyRange__init_(43008, 43055)]), $rt_createArrayFromData(jl_Object, [$rt_s(229), jur_AbstractCharClass$LazyRange__init_(44032,
    55203)]), $rt_createArrayFromData(jl_Object, [$rt_s(230), jur_AbstractCharClass$LazyRange__init_(55296, 56191)]), $rt_createArrayFromData(jl_Object, [$rt_s(231), jur_AbstractCharClass$LazyRange__init_(56192, 56319)]), $rt_createArrayFromData(jl_Object, [$rt_s(232), jur_AbstractCharClass$LazyRange__init_(56320, 57343)]), $rt_createArrayFromData(jl_Object, [$rt_s(233), jur_AbstractCharClass$LazyRange__init_(57344, 63743)]), $rt_createArrayFromData(jl_Object, [$rt_s(234), jur_AbstractCharClass$LazyRange__init_(63744,
    64255)]), $rt_createArrayFromData(jl_Object, [$rt_s(235), jur_AbstractCharClass$LazyRange__init_(64256, 64335)]), $rt_createArrayFromData(jl_Object, [$rt_s(236), jur_AbstractCharClass$LazyRange__init_(64336, 65023)]), $rt_createArrayFromData(jl_Object, [$rt_s(237), jur_AbstractCharClass$LazyRange__init_(65024, 65039)]), $rt_createArrayFromData(jl_Object, [$rt_s(238), jur_AbstractCharClass$LazyRange__init_(65040, 65055)]), $rt_createArrayFromData(jl_Object, [$rt_s(239), jur_AbstractCharClass$LazyRange__init_(65056,
    65071)]), $rt_createArrayFromData(jl_Object, [$rt_s(240), jur_AbstractCharClass$LazyRange__init_(65072, 65103)]), $rt_createArrayFromData(jl_Object, [$rt_s(241), jur_AbstractCharClass$LazyRange__init_(65104, 65135)]), $rt_createArrayFromData(jl_Object, [$rt_s(242), jur_AbstractCharClass$LazyRange__init_(65136, 65279)]), $rt_createArrayFromData(jl_Object, [$rt_s(243), jur_AbstractCharClass$LazyRange__init_(65280, 65519)]), $rt_createArrayFromData(jl_Object, [$rt_s(244), jur_AbstractCharClass$LazyRange__init_(0,
    1114111)]), $rt_createArrayFromData(jl_Object, [$rt_s(245), jur_AbstractCharClass$LazySpecialsBlock__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(246), jur_AbstractCharClass$LazyCategory__init_(0, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(247), jur_AbstractCharClass$LazyCategoryScope__init_(62, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(248), jur_AbstractCharClass$LazyCategory__init_(1, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(249), jur_AbstractCharClass$LazyCategory__init_(2, 1)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(250), jur_AbstractCharClass$LazyCategory__init_(3, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(251), jur_AbstractCharClass$LazyCategory__init_(4, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(252), jur_AbstractCharClass$LazyCategory__init_(5, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(253), jur_AbstractCharClass$LazyCategoryScope__init_(448, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(254), jur_AbstractCharClass$LazyCategory__init_(6, 1)]), $rt_createArrayFromData(jl_Object,
    [$rt_s(255), jur_AbstractCharClass$LazyCategory__init_(7, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(256), jur_AbstractCharClass$LazyCategory__init_(8, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(257), jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(258), jur_AbstractCharClass$LazyCategory__init_(9, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(259), jur_AbstractCharClass$LazyCategory__init_(10, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(260),
    jur_AbstractCharClass$LazyCategory__init_(11, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(261), jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(262), jur_AbstractCharClass$LazyCategory__init_(12, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(263), jur_AbstractCharClass$LazyCategory__init_(13, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(264), jur_AbstractCharClass$LazyCategory__init_(14, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(265), jur_AbstractCharClass$LazyCategoryScope__init_0(983040,
    1, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(266), jur_AbstractCharClass$LazyCategory__init_(15, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(267), jur_AbstractCharClass$LazyCategory__init_(16, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(268), jur_AbstractCharClass$LazyCategory__init_(18, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(269), jur_AbstractCharClass$LazyCategory__init_1(19, 0, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(270), jur_AbstractCharClass$LazyCategoryScope__init_(1643118592,
    1)]), $rt_createArrayFromData(jl_Object, [$rt_s(271), jur_AbstractCharClass$LazyCategory__init_(20, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(272), jur_AbstractCharClass$LazyCategory__init_(21, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(273), jur_AbstractCharClass$LazyCategory__init_(22, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(274), jur_AbstractCharClass$LazyCategory__init_(23, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(275), jur_AbstractCharClass$LazyCategory__init_(24, 1)]), $rt_createArrayFromData(jl_Object,
    [$rt_s(276), jur_AbstractCharClass$LazyCategoryScope__init_(2113929216, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(277), jur_AbstractCharClass$LazyCategory__init_(25, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(278), jur_AbstractCharClass$LazyCategory__init_(26, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(279), jur_AbstractCharClass$LazyCategory__init_(27, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(280), jur_AbstractCharClass$LazyCategory__init_(28, 1)]), $rt_createArrayFromData(jl_Object,
    [$rt_s(281), jur_AbstractCharClass$LazyCategory__init_(29, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(282), jur_AbstractCharClass$LazyCategory__init_(30, 0)])]);
}
var jur_AbstractCharClass$LazyDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyDigit();
    jur_AbstractCharClass$LazyDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyDigit_computeValue($this) {
    return (jur_CharClass__init_()).$add0(48, 57);
}
var jur_AbstractCharClass$LazyJavaLetter = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaLetter__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetter();
    jur_AbstractCharClass$LazyJavaLetter__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetter__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLetter_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetter$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var cbgg_Pixmap$DrawType = $rt_classWithoutFields(jl_Enum);
var cbgg_Pixmap$DrawType_FILL = null;
var cbgg_Pixmap$DrawType_STROKE = null;
var cbgg_Pixmap$DrawType_$VALUES = null;
function cbgg_Pixmap$DrawType_$callClinit() {
    cbgg_Pixmap$DrawType_$callClinit = $rt_eraseClinit(cbgg_Pixmap$DrawType);
    cbgg_Pixmap$DrawType__clinit_();
}
function cbgg_Pixmap$DrawType__init_(var_0, var_1) {
    var var_2 = new cbgg_Pixmap$DrawType();
    cbgg_Pixmap$DrawType__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_Pixmap$DrawType_values() {
    cbgg_Pixmap$DrawType_$callClinit();
    return cbgg_Pixmap$DrawType_$VALUES.$clone();
}
function cbgg_Pixmap$DrawType__init_0($this, var$1, var$2) {
    cbgg_Pixmap$DrawType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_Pixmap$DrawType__clinit_() {
    cbgg_Pixmap$DrawType_FILL = cbgg_Pixmap$DrawType__init_($rt_s(283), 0);
    cbgg_Pixmap$DrawType_STROKE = cbgg_Pixmap$DrawType__init_($rt_s(284), 1);
    cbgg_Pixmap$DrawType_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$DrawType, [cbgg_Pixmap$DrawType_FILL, cbgg_Pixmap$DrawType_STROKE]);
}
function jur_DecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$readCharsForCodePoint = 0;
    a.$decomposedCharUTF16 = null;
    a.$decomposedChar = null;
    a.$decomposedCharLength = 0;
}
function jur_DecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_DecomposedCharSet();
    jur_DecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_DecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
    jur_JointSet__init_0($this);
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar = $decomposedChar;
    $this.$decomposedCharLength = $decomposedCharLength;
}
function jur_DecomposedCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_DecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $decCodePoint, $readCodePoints, $rightBound, $curChar, var$8, $decCurCodePoint, var$10, var$11, var$12, var$13, var$14, var$15;
    $decCodePoint = $rt_createIntArray(4);
    $readCodePoints = 0;
    $rightBound = $matchResult.$getRightBound();
    if ($strIndex >= $rightBound)
        return (-1);
    $curChar = $this.$codePointAt($strIndex, $testString, $rightBound);
    var$8 = $strIndex + $this.$readCharsForCodePoint | 0;
    $decCurCodePoint = jur_Lexer_getDecomposition($curChar);
    if ($decCurCodePoint === null) {
        var$10 = $decCodePoint.data;
        var$11 = 1;
        var$10[$readCodePoints] = $curChar;
    } else {
        var$11 = $decCurCodePoint.data.length;
        jl_System_arraycopy($decCurCodePoint, 0, $decCodePoint, 0, var$11);
        var$11 = $readCodePoints + var$11 | 0;
    }
    a: {
        if (var$8 < $rightBound) {
            var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
            while (var$11 < 4) {
                if (!jur_Lexer_hasDecompositionNonNullCanClass(var$12)) {
                    var$10 = $decCodePoint.data;
                    var$13 = var$11 + 1 | 0;
                    var$10[var$11] = var$12;
                } else {
                    var$10 = (jur_Lexer_getDecomposition(var$12)).data;
                    if (var$10.length != 2) {
                        var$14 = $decCodePoint.data;
                        var$13 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                    } else {
                        var$14 = $decCodePoint.data;
                        var$12 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                        var$13 = var$12 + 1 | 0;
                        var$14[var$12] = var$10[1];
                    }
                }
                var$8 = var$8 + $this.$readCharsForCodePoint | 0;
                if (var$8 >= $rightBound) {
                    var$11 = var$13;
                    break a;
                }
                var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
                var$11 = var$13;
            }
        }
    }
    if (var$11 != $this.$decomposedCharLength)
        return (-1);
    var$15 = 0;
    while (true) {
        if (var$15 >= var$11)
            return $this.$next.$matches(var$8, $testString, $matchResult);
        if ($decCodePoint.data[var$15] != $this.$decomposedChar.data[var$15])
            break;
        var$15 = var$15 + 1 | 0;
    }
    return (-1);
}
function jur_DecomposedCharSet_getDecomposedChar($this) {
    var $strBuff, $i;
    if ($this.$decomposedCharUTF16 === null) {
        $strBuff = jl_StringBuilder__init_();
        $i = 0;
        while ($i < $this.$decomposedCharLength) {
            $strBuff.$append7(jl_Character_toChars($this.$decomposedChar.data[$i]));
            $i = $i + 1 | 0;
        }
        $this.$decomposedCharUTF16 = $strBuff.$toString();
    }
    return $this.$decomposedCharUTF16;
}
function jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound) {
    var $curChar, var$5, $low, $curCodePointUTF16;
    $this.$readCharsForCodePoint = 1;
    if ($strIndex >= ($rightBound - 1 | 0))
        $curChar = $testString.$charAt($strIndex);
    else {
        var$5 = $strIndex + 1 | 0;
        $curChar = $testString.$charAt($strIndex);
        $low = $testString.$charAt(var$5);
        if (jl_Character_isSurrogatePair($curChar, $low)) {
            $curCodePointUTF16 = $rt_createCharArrayFromData([$curChar, $low]);
            $curChar = jl_Character_codePointAt($curCodePointUTF16, 0);
            $this.$readCharsForCodePoint = 2;
        }
    }
    return $curChar;
}
function jur_DecomposedCharSet_first($this, $set) {
    var var$2, var$3;
    a: {
        if ($set instanceof jur_DecomposedCharSet) {
            var$2 = $set;
            if (!(jur_DecomposedCharSet_getDecomposedChar(var$2)).$equals(jur_DecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
}
function jur_DecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
var jur_CIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet);
function jur_CIDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_CIDecomposedCharSet();
    jur_CIDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
    jur_DecomposedCharSet__init_0($this, $decomp, $decomposedCharLength);
}
var otjw_WebGLContextAttributes = $rt_classWithoutFields();
function otjw_WebGLContextAttributes_create$js_body$_13() {
    return {  };
}
var cbggg_PixmapPacker$GuillotineStrategy = $rt_classWithoutFields();
function cbggg_PixmapPacker$GuillotineStrategy__init_() {
    var var_0 = new cbggg_PixmapPacker$GuillotineStrategy();
    cbggg_PixmapPacker$GuillotineStrategy__init_0(var_0);
    return var_0;
}
function cbggg_PixmapPacker$GuillotineStrategy__init_0($this) {
    jl_Object__init_0($this);
}
function cbggg_PixmapPacker$GuillotineStrategy_pack($this, $packer, $name, $rect) {
    var $page, $padding, var$6, var$7, $node;
    if ($packer.$pages.$size1)
        $page = $packer.$pages.$peek();
    else {
        $page = cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage__init_($packer);
        $packer.$pages.$add3($page);
    }
    $padding = $packer.$padding;
    var$6 = $rect.$width;
    var$7 = $padding;
    $rect.$width = var$6 + var$7;
    $rect.$height = $rect.$height + var$7;
    $node = cbggg_PixmapPacker$GuillotineStrategy_insert($this, $page.$root, $rect);
    if ($node === null) {
        $page = cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage__init_($packer);
        $packer.$pages.$add3($page);
        $node = cbggg_PixmapPacker$GuillotineStrategy_insert($this, $page.$root, $rect);
    }
    $node.$full = 1;
    $rect.$set0($node.$rect.$x, $node.$rect.$y, $node.$rect.$width - var$7, $node.$rect.$height - var$7);
    return $page;
}
function cbggg_PixmapPacker$GuillotineStrategy_insert($this, $node, $rect) {
    var $newNode, $deltaWidth, $deltaHeight;
    if (!$node.$full && $node.$leftChild !== null && $node.$rightChild !== null) {
        $newNode = cbggg_PixmapPacker$GuillotineStrategy_insert($this, $node.$leftChild, $rect);
        if ($newNode === null)
            $newNode = cbggg_PixmapPacker$GuillotineStrategy_insert($this, $node.$rightChild, $rect);
        return $newNode;
    }
    if ($node.$full)
        return null;
    if ($node.$rect.$width === $rect.$width && $node.$rect.$height === $rect.$height)
        return $node;
    if ($node.$rect.$width >= $rect.$width && $node.$rect.$height >= $rect.$height) {
        $node.$leftChild = cbggg_PixmapPacker$GuillotineStrategy$Node__init_();
        $node.$rightChild = cbggg_PixmapPacker$GuillotineStrategy$Node__init_();
        $deltaWidth = ($node.$rect.$width | 0) - ($rect.$width | 0) | 0;
        $deltaHeight = ($node.$rect.$height | 0) - ($rect.$height | 0) | 0;
        if ($deltaWidth <= $deltaHeight) {
            $node.$leftChild.$rect.$x = $node.$rect.$x;
            $node.$leftChild.$rect.$y = $node.$rect.$y;
            $node.$leftChild.$rect.$width = $node.$rect.$width;
            $node.$leftChild.$rect.$height = $rect.$height;
            $node.$rightChild.$rect.$x = $node.$rect.$x;
            $node.$rightChild.$rect.$y = $node.$rect.$y + $rect.$height;
            $node.$rightChild.$rect.$width = $node.$rect.$width;
            $node.$rightChild.$rect.$height = $node.$rect.$height - $rect.$height;
        } else {
            $node.$leftChild.$rect.$x = $node.$rect.$x;
            $node.$leftChild.$rect.$y = $node.$rect.$y;
            $node.$leftChild.$rect.$width = $rect.$width;
            $node.$leftChild.$rect.$height = $node.$rect.$height;
            $node.$rightChild.$rect.$x = $node.$rect.$x + $rect.$width;
            $node.$rightChild.$rect.$y = $node.$rect.$y;
            $node.$rightChild.$rect.$width = $node.$rect.$width - $rect.$width;
            $node.$rightChild.$rect.$height = $node.$rect.$height;
        }
        return cbggg_PixmapPacker$GuillotineStrategy_insert($this, $node.$leftChild, $rect);
    }
    return null;
}
var cbgu_TimeUtils = $rt_classWithoutFields();
function cbgu_TimeUtils_nanoTime() {
    return Long_mul(jl_System_currentTimeMillis(), Long_fromInt(1000000));
}
var cgxgbwu_KeyCodes = $rt_classWithoutFields();
function cgxgbwu_KeyCodes_keyForCode($keyCode) {
    a: {
        switch ($keyCode) {
            case 8:
                break;
            case 9:
                return 61;
            case 10:
            case 11:
            case 12:
            case 14:
            case 15:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 28:
            case 29:
            case 30:
            case 31:
            case 41:
            case 42:
            case 43:
            case 44:
            case 47:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 93:
            case 94:
            case 95:
            case 108:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
            case 184:
            case 185:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
                break a;
            case 13:
                return 66;
            case 16:
                return 59;
            case 17:
                return 129;
            case 18:
                return 57;
            case 19:
                return 0;
            case 20:
                return 0;
            case 27:
                return 111;
            case 32:
                return 62;
            case 33:
                return 92;
            case 34:
                return 93;
            case 35:
                return 123;
            case 36:
                return 3;
            case 37:
                return 21;
            case 38:
                return 19;
            case 39:
                return 22;
            case 40:
                return 20;
            case 45:
                return 124;
            case 46:
                return 112;
            case 48:
                return 7;
            case 49:
                return 8;
            case 50:
                return 9;
            case 51:
                return 10;
            case 52:
                return 11;
            case 53:
                return 12;
            case 54:
                return 13;
            case 55:
                return 14;
            case 56:
                return 15;
            case 57:
                return 16;
            case 65:
                return 29;
            case 66:
                return 30;
            case 67:
                return 31;
            case 68:
                return 32;
            case 69:
                return 33;
            case 70:
                return 34;
            case 71:
                return 35;
            case 72:
                return 36;
            case 73:
                return 37;
            case 74:
                return 38;
            case 75:
                return 39;
            case 76:
                return 40;
            case 77:
                return 41;
            case 78:
                return 42;
            case 79:
                return 43;
            case 80:
                return 44;
            case 81:
                return 45;
            case 82:
                return 46;
            case 83:
                return 47;
            case 84:
                return 48;
            case 85:
                return 49;
            case 86:
                return 50;
            case 87:
                return 51;
            case 88:
                return 52;
            case 89:
                return 53;
            case 90:
                return 54;
            case 91:
                return 0;
            case 92:
                return 0;
            case 96:
                return 144;
            case 97:
                return 145;
            case 98:
                return 146;
            case 99:
                return 147;
            case 100:
                return 148;
            case 101:
                return 149;
            case 102:
                return 150;
            case 103:
                return 151;
            case 104:
                return 152;
            case 105:
                return 153;
            case 106:
                return 0;
            case 107:
                return 81;
            case 109:
                return 69;
            case 110:
                return 56;
            case 111:
                return 0;
            case 112:
                return 131;
            case 113:
                return 132;
            case 114:
                return 133;
            case 115:
                return 134;
            case 116:
                return 135;
            case 117:
                return 136;
            case 118:
                return 137;
            case 119:
                return 138;
            case 120:
                return 139;
            case 121:
                return 140;
            case 122:
                return 141;
            case 123:
                return 142;
            case 144:
                return 78;
            case 145:
                return 0;
            case 186:
                return 74;
            case 187:
                return 70;
            case 188:
                return 55;
            case 189:
                return 69;
            case 190:
                return 56;
            case 191:
                return 76;
            case 192:
                return 0;
            case 219:
                return 71;
            case 220:
                return 73;
            case 221:
                return 72;
            case 222:
                return 75;
            default:
                break a;
        }
        return 67;
    }
    return 0;
}
function cgxgbwu_KeyCodes_getButton($button) {
    if ($button == 1)
        return 0;
    if ($button == 2)
        return 1;
    if ($button != 4)
        return 0;
    return 2;
}
function cbgg_Pixmap() {
    var a = this; jl_Object.call(a);
    a.$width0 = 0;
    a.$height0 = 0;
    a.$format = null;
    a.$canvas0 = null;
    a.$context = null;
    a.$id0 = 0;
    a.$buffer0 = null;
    a.$r = 0;
    a.$g = 0;
    a.$b = 0;
    a.$a = 0.0;
    a.$color = null;
    a.$blending = null;
    a.$filter = null;
    a.$pixels = null;
    a.$imageElement = null;
    a.$videoElement = null;
}
var cbgg_Pixmap_pixmaps = null;
var cbgg_Pixmap_nextId = 0;
var cbgg_Pixmap_clearColor = null;
function cbgg_Pixmap_$callClinit() {
    cbgg_Pixmap_$callClinit = $rt_eraseClinit(cbgg_Pixmap);
    cbgg_Pixmap__clinit_();
}
function cbgg_Pixmap__init_0(var_0) {
    var var_1 = new cbgg_Pixmap();
    cbgg_Pixmap__init_1(var_1, var_0);
    return var_1;
}
function cbgg_Pixmap__init_(var_0, var_1, var_2) {
    var var_3 = new cbgg_Pixmap();
    cbgg_Pixmap__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Pixmap__init_1($this, $file) {
    var $webFileHandler, $path, $htmlImageElement;
    cbgg_Pixmap_$callClinit();
    jl_Object__init_0($this);
    $this.$r = 255;
    $this.$g = 255;
    $this.$b = 255;
    $this.$color = cbgg_Pixmap_make($this.$r, $this.$g, $this.$b, $this.$a);
    cbgg_Pixmap$Blending_$callClinit();
    $this.$blending = cbgg_Pixmap$Blending_SourceOver;
    cbgg_Pixmap$Filter_$callClinit();
    $this.$filter = cbgg_Pixmap$Filter_BiLinear;
    $webFileHandler = $file;
    $path = $webFileHandler.$path();
    $htmlImageElement = $webFileHandler.$preloader.$images.$get1($path);
    cbgg_Pixmap_init($this, (-1), (-1), $htmlImageElement, null);
    if ($this.$imageElement !== null)
        return;
    $rt_throw(cbgu_GdxRuntimeException__init_(((((jl_StringBuilder__init_()).$append($rt_s(285))).$append($file.$path())).$append($rt_s(286))).$toString()));
}
function cbgg_Pixmap__init_2($this, $width, $height, $format) {
    cbgg_Pixmap_$callClinit();
    jl_Object__init_0($this);
    $this.$r = 255;
    $this.$g = 255;
    $this.$b = 255;
    $this.$color = cbgg_Pixmap_make($this.$r, $this.$g, $this.$b, $this.$a);
    cbgg_Pixmap$Blending_$callClinit();
    $this.$blending = cbgg_Pixmap$Blending_SourceOver;
    cbgg_Pixmap$Filter_$callClinit();
    $this.$filter = cbgg_Pixmap$Filter_BiLinear;
    cbgg_Pixmap_init($this, $width, $height, null, null);
}
function cbgg_Pixmap_init($this, $width, $height, $imageElement, $videoElement) {
    var var$5;
    if ($videoElement !== null) {
        $this.$videoElement = $videoElement;
        $this.$width0 = $videoElement.getWidth();
        $this.$height0 = $videoElement.getHeight();
    } else if ($imageElement === null) {
        $this.$width0 = $width;
        $this.$height0 = $height;
    } else {
        $this.$imageElement = $imageElement;
        $this.$width0 = $imageElement.width;
        $this.$height0 = $imageElement.height;
    }
    cbgg_Pixmap$Format_$callClinit();
    $this.$format = cbgg_Pixmap$Format_RGBA8888;
    $this.$buffer0 = cbgu_BufferUtils_newByteBuffer(4);
    cbgg_Pixmap_$callClinit();
    var$5 = cbgg_Pixmap_nextId;
    cbgg_Pixmap_nextId = var$5 + 1 | 0;
    $this.$id0 = var$5;
    $this.$buffer0.$putInt(0, $this.$id0);
    cbgg_Pixmap_pixmaps.$put1(jl_Integer_valueOf($this.$id0), $this);
}
function cbgg_Pixmap_create($this) {
    var $window, $document, $createElement, var$4, var$5;
    $window = cgxgbw_WebApplicationConfiguration_JSHelper.$getCurrentWindow();
    $document = $window.$getDocument();
    $createElement = $document.createElement("canvas");
    $this.$canvas0 = $createElement;
    var$4 = $this.$canvas0;
    var$5 = $this.$width0;
    var$4.width = var$5;
    var$4 = $this.$canvas0;
    var$5 = $this.$height0;
    var$4.height = var$5;
    $this.$context = $this.$canvas0.getContext("2d");
    var$4 = $this.$context;
    var$5 = $rt_ustr((cbgg_Pixmap_getComposite()).$toString());
    var$4.globalCompositeOperation = var$5;
}
function cbgg_Pixmap_getContext($this) {
    cbgg_Pixmap_ensureCanvasExists($this);
    return $this.$context;
}
function cbgg_Pixmap_getComposite() {
    cbgg_Pixmap_$callClinit();
    cbgg_Composite_$callClinit();
    return cbgg_Composite_SOURCE_OVER;
}
function cbgg_Pixmap_make($r2, $g2, $b2, $a2) {
    cbgg_Pixmap_$callClinit();
    return ((((((((((jl_StringBuilder__init_()).$append($rt_s(287))).$append0($r2)).$append($rt_s(288))).$append0($g2)).$append($rt_s(288))).$append0($b2)).$append($rt_s(288))).$append2($a2)).$append($rt_s(289))).$toString();
}
function cbgg_Pixmap_setBlending($this, $blending) {
    var var$2, var$3;
    $this.$blending = $blending;
    cbgg_Pixmap_ensureCanvasExists($this);
    var$2 = $this.$context;
    var$3 = $rt_ustr((cbgg_Pixmap_getComposite()).$toString());
    var$2.globalCompositeOperation = var$3;
}
function cbgg_Pixmap_getFormat($this) {
    return $this.$format;
}
function cbgg_Pixmap_getGLInternalFormat($this) {
    return 6408;
}
function cbgg_Pixmap_getGLFormat($this) {
    return 6408;
}
function cbgg_Pixmap_getGLType($this) {
    return 5121;
}
function cbgg_Pixmap_getWidth($this) {
    return $this.$width0;
}
function cbgg_Pixmap_getHeight($this) {
    return $this.$height0;
}
function cbgg_Pixmap_getPixels($this) {
    return $this.$buffer0;
}
function cbgg_Pixmap_dispose($this) {
    cbgg_Pixmap_$callClinit();
    cbgg_Pixmap_pixmaps.$remove1(jl_Integer_valueOf($this.$id0));
}
function cbgg_Pixmap_getCanvasElement($this) {
    cbgg_Pixmap_ensureCanvasExists($this);
    return $this.$canvas0;
}
function cbgg_Pixmap_ensureCanvasExists($this) {
    var var$1, var$2;
    if ($this.$canvas0 === null) {
        cbgg_Pixmap_create($this);
        if ($this.$imageElement !== null) {
            var$1 = $this.$context;
            cbgg_Composite_$callClinit();
            var$2 = $rt_ustr(cbgg_Composite_getValue(cbgg_Composite_COPY));
            var$1.globalCompositeOperation = var$2;
            var$1 = $this.$context;
            var$2 = $this.$imageElement;
            var$1.drawImage(var$2, 0.0, 0.0);
            var$1 = $this.$context;
            var$2 = $rt_ustr(cbgg_Composite_getValue(cbgg_Pixmap_getComposite()));
            var$1.globalCompositeOperation = var$2;
        }
        if ($this.$videoElement !== null) {
            var$2 = $this.$context;
            cbgg_Composite_$callClinit();
            var$1 = $rt_ustr(cbgg_Composite_getValue(cbgg_Composite_COPY));
            var$2.globalCompositeOperation = var$1;
            var$1 = $this.$context;
            var$2 = $this.$videoElement;
            var$1.drawImage(var$2, 0.0, 0.0);
            var$1 = $this.$context;
            var$2 = $rt_ustr(cbgg_Composite_getValue(cbgg_Pixmap_getComposite()));
            var$1.globalCompositeOperation = var$2;
        }
    }
}
function cbgg_Pixmap_canUseImageElement($this) {
    return $this.$canvas0 === null && $this.$imageElement !== null ? 1 : 0;
}
function cbgg_Pixmap_getImageElement($this) {
    return $this.$imageElement;
}
function cbgg_Pixmap_canUseVideoElement($this) {
    return $this.$canvas0 === null && $this.$videoElement !== null ? 1 : 0;
}
function cbgg_Pixmap_getVideoElement($this) {
    return $this.$videoElement;
}
function cbgg_Pixmap_setColor($this, $color) {
    var var$2, var$3;
    cbgg_Pixmap_ensureCanvasExists($this);
    $this.$r = $color >>> 24 & 255;
    $this.$g = $color >>> 16 & 255;
    $this.$b = $color >>> 8 & 255;
    $this.$a = ($color & 255) / 255.0;
    $this.$color = cbgg_Pixmap_make($this.$r, $this.$g, $this.$b, $this.$a);
    var$2 = $this.$context;
    var$3 = $rt_ustr($this.$color);
    var$2.fillStyle = var$3;
    var$2 = $this.$context;
    var$3 = $rt_ustr($this.$color);
    var$2.strokeStyle = var$3;
}
function cbgg_Pixmap_setColor0($this, $r, $g, $b, $a) {
    var var$5, var$6;
    cbgg_Pixmap_ensureCanvasExists($this);
    $this.$r = $r * 255.0 | 0;
    $this.$g = $g * 255.0 | 0;
    $this.$b = $b * 255.0 | 0;
    $this.$a = $a;
    $this.$color = cbgg_Pixmap_make($this.$r, $this.$g, $this.$b, $this.$a);
    var$5 = $this.$context;
    var$6 = $rt_ustr($this.$color);
    var$5.fillStyle = var$6;
    var$5 = $this.$context;
    var$6 = $rt_ustr($this.$color);
    var$5.strokeStyle = var$6;
}
function cbgg_Pixmap_setColor1($this, $color) {
    $this.$setColor0($color.$r0, $color.$g0, $color.$b0, $color.$a0);
}
function cbgg_Pixmap_fill($this) {
    var var$1, var$2, var$3, var$4, var$5;
    cbgg_Pixmap_ensureCanvasExists($this);
    var$1 = $this.$context;
    var$2 = $this.$getWidth();
    var$3 = $this.$getHeight();
    var$1.clearRect(0.0, 0.0, var$2, var$3);
    var$4 = $this.$getWidth();
    var$5 = $this.$getHeight();
    cbgg_Pixmap$DrawType_$callClinit();
    cbgg_Pixmap_rectangle($this, 0, 0, var$4, var$5, cbgg_Pixmap$DrawType_FILL);
}
function cbgg_Pixmap_drawPixmap($this, $pixmap, $x, $y) {
    var $image;
    $image = $pixmap.$getCanvasElement();
    cbgg_Pixmap_image($this, $image, 0, 0, $image.width, $image.height, $x, $y, $image.width, $image.height);
}
function cbgg_Pixmap_drawPixmap0($this, $pixmap, $x, $y, $srcx, $srcy, $srcWidth, $srcHeight) {
    var $image;
    $image = $pixmap.$getCanvasElement();
    cbgg_Pixmap_image($this, $image, $srcx, $srcy, $srcWidth, $srcHeight, $x, $y, $srcWidth, $srcHeight);
}
function cbgg_Pixmap_drawPixmap1($this, $pixmap, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight) {
    cbgg_Pixmap_image($this, $pixmap.$getCanvasElement(), $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight);
}
function cbgg_Pixmap_getPixel($this, $x, $y) {
    var var$3, var$4, var$5, $i, $r, $g, $b, $a;
    cbgg_Pixmap_ensureCanvasExists($this);
    if ($this.$pixels === null) {
        var$3 = $this.$context;
        var$4 = $this.$width0;
        var$5 = $this.$height0;
        $this.$pixels = var$3.getImageData(0.0, 0.0, var$4, var$5).data;
    }
    $i = ($x * 4 | 0) + ($rt_imul($y, $this.$width0) * 4 | 0) | 0;
    $r = $this.$pixels[$i + 0 | 0] & 255;
    $g = $this.$pixels[$i + 1 | 0] & 255;
    $b = $this.$pixels[$i + 2 | 0] & 255;
    $a = $this.$pixels[$i + 3 | 0] & 255;
    return $r << 24 | $g << 16 | $b << 8 | $a;
}
function cbgg_Pixmap_drawPixel($this, $x, $y) {
    cbgg_Pixmap$DrawType_$callClinit();
    cbgg_Pixmap_rectangle($this, $x, $y, 1, 1, cbgg_Pixmap$DrawType_FILL);
}
function cbgg_Pixmap_drawPixel0($this, $x, $y, $color) {
    $this.$setColor1($color);
    $this.$drawPixel($x, $y);
}
function cbgg_Pixmap_rectangle($this, $x, $y, $width, $height, $drawType) {
    var var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    cbgg_Pixmap_ensureCanvasExists($this);
    var$6 = $this.$blending;
    cbgg_Pixmap$Blending_$callClinit();
    if (var$6 === cbgg_Pixmap$Blending_None) {
        var$7 = $this.$context;
        var$8 = $rt_ustr(cbgg_Pixmap_clearColor);
        var$7.fillStyle = var$8;
        var$7 = $this.$context;
        var$8 = $rt_ustr(cbgg_Pixmap_clearColor);
        var$7.strokeStyle = var$8;
        var$7 = $this.$context;
        var$8 = "destination-out";
        var$7.globalCompositeOperation = var$8;
        $this.$context.beginPath();
        var$9 = $this.$context;
        var$10 = $x;
        var$11 = $y;
        var$12 = $width;
        var$13 = $height;
        var$9.rect(var$10, var$11, var$12, var$13);
        cbgg_Pixmap_fillOrStrokePath($this, $drawType);
        $this.$context.closePath();
        var$8 = $this.$context;
        var$6 = $rt_ustr($this.$color);
        var$8.fillStyle = var$6;
        var$8 = $this.$context;
        var$6 = $rt_ustr($this.$color);
        var$8.strokeStyle = var$6;
        var$8 = $this.$context;
        cbgg_Composite_$callClinit();
        var$6 = $rt_ustr(cbgg_Composite_getValue(cbgg_Composite_SOURCE_OVER));
        var$8.globalCompositeOperation = var$6;
    }
    $this.$context.beginPath();
    var$8 = $this.$context;
    var$13 = $x;
    var$10 = $y;
    var$11 = $width;
    var$12 = $height;
    var$8.rect(var$13, var$10, var$11, var$12);
    cbgg_Pixmap_fillOrStrokePath($this, $drawType);
    $this.$context.closePath();
    $this.$pixels = null;
}
function cbgg_Pixmap_image($this, $image, $srcX, $srcY, $srcWidth, $srcHeight, $dstX, $dstY, $dstWidth, $dstHeight) {
    var var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20;
    cbgg_Pixmap_ensureCanvasExists($this);
    var$10 = $this.$blending;
    cbgg_Pixmap$Blending_$callClinit();
    if (var$10 === cbgg_Pixmap$Blending_None) {
        var$11 = $this.$context;
        var$10 = $rt_ustr(cbgg_Pixmap_clearColor);
        var$11.fillStyle = var$10;
        var$11 = $this.$context;
        var$10 = $rt_ustr(cbgg_Pixmap_clearColor);
        var$11.strokeStyle = var$10;
        var$11 = $this.$context;
        var$10 = "destination-out";
        var$11.globalCompositeOperation = var$10;
        $this.$context.beginPath();
        var$11 = $this.$context;
        var$12 = $dstX;
        var$13 = $dstY;
        var$14 = $dstWidth;
        var$15 = $dstHeight;
        var$11.rect(var$12, var$13, var$14, var$15);
        cbgg_Pixmap$DrawType_$callClinit();
        cbgg_Pixmap_fillOrStrokePath($this, cbgg_Pixmap$DrawType_FILL);
        $this.$context.closePath();
        var$11 = $this.$context;
        var$10 = $rt_ustr($this.$color);
        var$11.fillStyle = var$10;
        var$16 = $this.$context;
        var$11 = $rt_ustr($this.$color);
        var$16.strokeStyle = var$11;
        var$16 = $this.$context;
        cbgg_Composite_$callClinit();
        var$11 = $rt_ustr(cbgg_Composite_getValue(cbgg_Composite_SOURCE_OVER));
        var$16.globalCompositeOperation = var$11;
    }
    if ($srcWidth && $srcHeight && $dstWidth && $dstHeight) {
        var$11 = $this.$context;
        var$12 = $srcX;
        var$13 = $srcY;
        var$14 = $srcWidth;
        var$15 = $srcHeight;
        var$17 = $dstX;
        var$18 = $dstY;
        var$19 = $dstWidth;
        var$20 = $dstHeight;
        var$11.drawImage($image, var$12, var$13, var$14, var$15, var$17, var$18, var$19, var$20);
    }
    $this.$pixels = null;
}
function cbgg_Pixmap_fillOrStrokePath($this, $drawType) {
    a: {
        cbgg_Pixmap_ensureCanvasExists($this);
        cbgg_Pixmap$2_$callClinit();
        switch (cbgg_Pixmap$2_$SwitchMap$com$badlogic$gdx$graphics$Pixmap$DrawType.data[jl_Enum_ordinal($drawType)]) {
            case 1:
                break;
            case 2:
                $this.$context.stroke();
                break a;
            default:
                break a;
        }
        $this.$context.fill();
    }
}
function cbgg_Pixmap__clinit_() {
    cbgg_Pixmap_pixmaps = ju_HashMap__init_();
    cbgg_Pixmap_nextId = 0;
    cbgg_Pixmap_clearColor = cbgg_Pixmap_make(255, 255, 255, 1.0);
}
var jur_AheadFSet = $rt_classWithoutFields(jur_FSet);
function jur_AheadFSet__init_() {
    var var_0 = new jur_AheadFSet();
    jur_AheadFSet__init_0(var_0);
    return var_0;
}
function jur_AheadFSet__init_0($this) {
    jur_FSet__init_0($this, (-1));
}
function jur_AheadFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
var ju_Map = $rt_classWithoutFields(0);
var ju_AbstractMap = $rt_classWithoutFields();
function ju_AbstractMap__init_($this) {
    jl_Object__init_0($this);
}
var jl_Cloneable = $rt_classWithoutFields(0);
function ju_EnumMap() {
    var a = this; ju_AbstractMap.call(a);
    a.$keyType = null;
    a.$data = null;
    a.$provided = null;
    a.$size2 = 0;
}
function ju_EnumMap__init_(var_0) {
    var var_1 = new ju_EnumMap();
    ju_EnumMap__init_0(var_1, var_0);
    return var_1;
}
function ju_EnumMap__init_0($this, $keyType) {
    ju_AbstractMap__init_($this);
    ju_EnumMap_initFromKeyType($this, $keyType);
}
function ju_EnumMap_initFromKeyType($this, $keyType) {
    $this.$keyType = $keyType;
    $this.$data = $rt_createArray(jl_Object, (ju_GenericEnumSet_getConstants($keyType)).data.length);
    $this.$provided = $rt_createBooleanArray($this.$data.data.length);
}
function ju_EnumMap_get($this, $key) {
    var $index, $value;
    if (!$this.$keyType.$isInstance($key))
        return null;
    $index = jl_Enum_ordinal($key);
    $value = $this.$data.data[$index];
    return $value;
}
function ju_EnumMap_put($this, $key, $value) {
    var $index, $old;
    $index = jl_Enum_ordinal($key);
    $old = $this.$data.data[$index];
    if (!$this.$provided.data[$index]) {
        $this.$provided.data[$index] = 1;
        $this.$size2 = $this.$size2 + 1 | 0;
    }
    $this.$data.data[$index] = $value;
    return $old;
}
function cgxgetf_FreeTypePackTest$FontMap() {
    ju_EnumMap.call(this);
    this.$this$00 = null;
}
function cgxgetf_FreeTypePackTest$FontMap__init_(var_0) {
    var var_1 = new cgxgetf_FreeTypePackTest$FontMap();
    cgxgetf_FreeTypePackTest$FontMap__init_0(var_1, var_0);
    return var_1;
}
function cgxgetf_FreeTypePackTest$FontMap__init_0($this, $this$0) {
    var var$2, var$3, var$4, $style;
    $this.$this$00 = $this$0;
    ju_EnumMap__init_0($this, $rt_cls(cgxgetf_FreeTypePackTest$FontStyle));
    var$2 = (cgxgetf_FreeTypePackTest$FontStyle_values()).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $style = var$2[var$4];
        $this.$put3($style, ju_EnumMap__init_($rt_cls(cgxgetf_FreeTypePackTest$FontSize)));
        var$4 = var$4 + 1 | 0;
    }
}
var jur_NonCapJointSet = $rt_classWithoutFields(jur_JointSet);
function jur_NonCapJointSet__init_(var_0, var_1) {
    var var_2 = new jur_NonCapJointSet();
    jur_NonCapJointSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NonCapJointSet__init_0($this, $children, $fSet) {
    jur_JointSet__init_2($this, $children, $fSet);
}
function jur_NonCapJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex);
    $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
    $size = $this.$children.$size();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setConsumed($this.$groupIndex, $start);
            return (-1);
        }
        $e = $this.$children.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
}
function jur_NonCapJointSet_hasConsumed($this, $matchResult) {
    var $cons;
    $cons = $matchResult.$getConsumed($this.$groupIndex);
    return !$cons ? 0 : 1;
}
var jur_AtomicJointSet = $rt_classWithoutFields(jur_NonCapJointSet);
function jur_AtomicJointSet__init_(var_0, var_1) {
    var var_2 = new jur_AtomicJointSet();
    jur_AtomicJointSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AtomicJointSet__init_0($this, $children, $fSet) {
    jur_NonCapJointSet__init_0($this, $children, $fSet);
}
function jur_AtomicJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex);
    $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
    $size = $this.$children.$size();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next.$matches($this.$fSet.$getIndex(), $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    $matchResult.$setConsumed($this.$groupIndex, $start);
    return (-1);
}
function jur_AtomicJointSet_setNext($this, $next) {
    $this.$next = $next;
}
var jur_PositiveLookAhead = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_PositiveLookAhead__init_(var_0, var_1) {
    var var_2 = new jur_PositiveLookAhead();
    jur_PositiveLookAhead__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_PositiveLookAhead__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_PositiveLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e, $shift;
    $size = $this.$children.$size();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_PositiveLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
var ju_Comparator = $rt_classWithoutFields(0);
var jl_String$_clinit_$lambda$_84_0 = $rt_classWithoutFields();
function jl_String$_clinit_$lambda$_84_0__init_() {
    var var_0 = new jl_String$_clinit_$lambda$_84_0();
    jl_String$_clinit_$lambda$_84_0__init_0(var_0);
    return var_0;
}
function jl_String$_clinit_$lambda$_84_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
var jur_NegativeLookAhead = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_NegativeLookAhead__init_(var_0, var_1) {
    var var_2 = new jur_NegativeLookAhead();
    jur_NegativeLookAhead__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NegativeLookAhead__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_NegativeLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e;
    $size = $this.$children.$size();
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children.$get($i);
        if ($e.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_NegativeLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
var cbgg_TextureData = $rt_classWithoutFields(0);
function cbggg_FileTextureData() {
    var a = this; jl_Object.call(a);
    a.$file = null;
    a.$width1 = 0;
    a.$height1 = 0;
    a.$format0 = null;
    a.$pixmap = null;
    a.$useMipMaps = 0;
    a.$isPrepared = 0;
}
var cbggg_FileTextureData_copyToPOT = 0;
function cbggg_FileTextureData__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbggg_FileTextureData();
    cbggg_FileTextureData__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbggg_FileTextureData__init_0($this, $file, $preloadedPixmap, $format, $useMipMaps) {
    jl_Object__init_0($this);
    $this.$width1 = 0;
    $this.$height1 = 0;
    $this.$isPrepared = 0;
    $this.$file = $file;
    $this.$pixmap = $preloadedPixmap;
    $this.$format0 = $format;
    $this.$useMipMaps = $useMipMaps;
    if ($this.$pixmap !== null) {
        $this.$pixmap = cbggg_FileTextureData_ensurePot($this, $this.$pixmap);
        $this.$width1 = $this.$pixmap.$getWidth();
        $this.$height1 = $this.$pixmap.$getHeight();
        if ($format === null)
            $this.$format0 = $this.$pixmap.$getFormat();
    }
}
function cbggg_FileTextureData_isPrepared($this) {
    return $this.$isPrepared;
}
function cbggg_FileTextureData_prepare($this) {
    if ($this.$isPrepared)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(290)));
    if ($this.$pixmap === null) {
        $this.$pixmap = cbggg_FileTextureData_ensurePot($this, cbgg_Pixmap__init_0($this.$file));
        $this.$width1 = $this.$pixmap.$getWidth();
        $this.$height1 = $this.$pixmap.$getHeight();
        if ($this.$format0 === null)
            $this.$format0 = $this.$pixmap.$getFormat();
    }
    $this.$isPrepared = 1;
}
function cbggg_FileTextureData_ensurePot($this, $pixmap) {
    var $pixmapWidth, $pixmapHeight, $potWidth, $potHeight, $tmp_0;
    a: {
        if (cbg_Gdx_gl20 === null && cbggg_FileTextureData_copyToPOT) {
            $pixmapWidth = $pixmap.$getWidth();
            $pixmapHeight = $pixmap.$getHeight();
            $potWidth = cbgm_MathUtils_nextPowerOfTwo($pixmapWidth);
            $potHeight = cbgm_MathUtils_nextPowerOfTwo($pixmapHeight);
            if ($pixmapWidth != $potWidth)
                break a;
            if ($pixmapHeight != $potHeight)
                break a;
        }
        return $pixmap;
    }
    $tmp_0 = cbgg_Pixmap__init_($potWidth, $potHeight, $pixmap.$getFormat());
    $tmp_0.$drawPixmap($pixmap, 0, 0, 0, 0, $pixmapWidth, $pixmapHeight);
    $pixmap.$dispose();
    return $tmp_0;
}
function cbggg_FileTextureData_consumePixmap($this) {
    var $pixmap;
    if (!$this.$isPrepared)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(291)));
    $this.$isPrepared = 0;
    $pixmap = $this.$pixmap;
    $this.$pixmap = null;
    return $pixmap;
}
function cbggg_FileTextureData_disposePixmap($this) {
    return 1;
}
function cbggg_FileTextureData_getWidth($this) {
    return $this.$width1;
}
function cbggg_FileTextureData_getHeight($this) {
    return $this.$height1;
}
function cbggg_FileTextureData_getFormat($this) {
    return $this.$format0;
}
function cbggg_FileTextureData_useMipMaps($this) {
    return $this.$useMipMaps;
}
function cbggg_FileTextureData_isManaged($this) {
    return 1;
}
function cbggg_FileTextureData_getType($this) {
    cbgg_TextureData$TextureDataType_$callClinit();
    return cbgg_TextureData$TextureDataType_Pixmap;
}
function cbggg_FileTextureData_consumeCustomData($this, $target) {
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(292)));
}
var cgxgbw_WebJSHelper = $rt_classWithoutFields(0);
function cgxgbtd_TeaJSHelper() {
    var a = this; jl_Object.call(a);
    a.$agentInfo = null;
    a.$canvasWrapper = null;
}
function cgxgbtd_TeaJSHelper__init_(var_0, var_1) {
    var var_2 = new cgxgbtd_TeaJSHelper();
    cgxgbtd_TeaJSHelper__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtd_TeaJSHelper__init_0($this, $agentInfo, $canvasWrapper) {
    jl_Object__init_0($this);
    $this.$agentInfo = $agentInfo;
    $this.$canvasWrapper = $canvasWrapper;
}
function cgxgbtd_TeaJSHelper_getGLContext($this, $config) {
    var $attr, var$3, $canvas;
    $attr = otjw_WebGLContextAttributes_create$js_body$_13();
    var$3 = !!$config.$alpha;
    $attr.alpha = var$3;
    var$3 = !!$config.$antialiasing;
    $attr.antialias = var$3;
    var$3 = !!$config.$stencil;
    $attr.stencil = var$3;
    var$3 = !!$config.$premultipliedAlpha;
    $attr.premultipliedAlpha = var$3;
    var$3 = !!$config.$preserveDrawingBuffer;
    $attr.preserveDrawingBuffer = var$3;
    $canvas = $this.$canvasWrapper;
    var$3 = $canvas.getContext("webgl", $attr);
    return var$3;
}
function cgxgbtd_TeaJSHelper_getCanvas($this) {
    return $this.$canvasWrapper;
}
function cgxgbtd_TeaJSHelper_getCurrentWindow($this) {
    return cgxgbtdi_TeaWindow__init_();
}
function cgxgbtd_TeaJSHelper_getAgentInfo($this) {
    return $this.$agentInfo;
}
function cgxgbtd_TeaJSHelper_createImageElement($this) {
    var $document;
    $document = ($this.$getCurrentWindow()).$getDocument();
    return $document.createElement("img");
}
function cgxgbtd_TeaJSHelper_creatHttpRequest($this) {
    return new XMLHttpRequest();
}
function cgxgbtd_TeaJSHelper_createSoundManager($this) {
    return cgxgbtdi_TeaSoundManager__init_();
}
var jl_UnsupportedOperationException = $rt_classWithoutFields(jl_RuntimeException);
function jl_UnsupportedOperationException__init_() {
    var var_0 = new jl_UnsupportedOperationException();
    jl_UnsupportedOperationException__init_0(var_0);
    return var_0;
}
function jl_UnsupportedOperationException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
var jn_ReadOnlyBufferException = $rt_classWithoutFields(jl_UnsupportedOperationException);
function jn_ReadOnlyBufferException__init_() {
    var var_0 = new jn_ReadOnlyBufferException();
    jn_ReadOnlyBufferException__init_0(var_0);
    return var_0;
}
function jn_ReadOnlyBufferException__init_0($this) {
    jl_UnsupportedOperationException__init_0($this);
}
var jl_Readable = $rt_classWithoutFields(0);
var jn_CharBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_CharBuffer__init_($this, $capacity, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    $this.$position3 = $position;
    $this.$limit = $limit;
}
function jn_CharBuffer_wrap($array, $offset, $length) {
    return jn_CharBufferOverArray__init_(0, $array.data.length, $array, $offset, $offset + $length | 0, 0);
}
function jn_CharBuffer_wrap0($array) {
    return jn_CharBuffer_wrap($array, 0, $array.data.length);
}
function jn_CharBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(293))).$append0(var$6)).$append($rt_s(294))).$append0(var$5)).$toString()));
            if (jn_Buffer_remaining($this) < $length)
                $rt_throw(jn_BufferUnderflowException__init_());
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_1(((((jl_StringBuilder__init_()).$append($rt_s(295))).$append0($length)).$append($rt_s(296))).$toString()));
            $pos = $this.$position3;
            $i = 0;
            while ($i < $length) {
                var$6 = $offset + 1 | 0;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = $this.$getChar($pos);
                $i = $i + 1 | 0;
                $offset = var$6;
                $pos = var$5;
            }
            $this.$position3 = $this.$position3 + $length | 0;
            return $this;
        }
    }
    var$4 = $dst.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(297))).$append0($offset)).$append($rt_s(51))).$append0(var$4.length)).$append($rt_s(289))).$toString()));
}
function jn_CharBuffer_put($this, $src) {
    var $length, $pos, $offset, $i, var$6, var$7;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src))
        $rt_throw(jn_BufferOverflowException__init_());
    $length = jn_Buffer_remaining($src);
    $pos = $this.$position3;
    $offset = $src.$position3;
    $i = 0;
    while ($i < $length) {
        var$6 = $pos + 1 | 0;
        var$7 = $offset + 1 | 0;
        $this.$putChar($pos, $src.$getChar($offset));
        $i = $i + 1 | 0;
        $pos = var$6;
        $offset = var$7;
    }
    $this.$position3 = $this.$position3 + $length | 0;
    return $this;
}
function jn_CharBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
var jn_CharBufferImpl = $rt_classWithoutFields(jn_CharBuffer);
function jn_CharBufferImpl__init_($this, $capacity, $position, $limit) {
    jn_CharBuffer__init_($this, $capacity, $position, $limit);
}
function jn_CharBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_CharBufferOverByteBuffer() {
    var a = this; jn_CharBufferImpl.call(a);
    a.$byteByffer = null;
    a.$readOnly0 = 0;
    a.$start = 0;
}
function jn_CharBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_CharBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start = $start;
    $this.$byteByffer = $byteBuffer;
    $this.$readOnly0 = $readOnly;
}
function jn_CharBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly0;
}
var jn_CharBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_CharBufferOverByteBuffer);
function jn_CharBufferOverByteBufferLittleEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_CharBufferOverByteBufferLittleEndian();
    jn_CharBufferOverByteBufferLittleEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_CharBufferOverByteBufferLittleEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_CharBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_CharBufferOverByteBufferLittleEndian_getChar($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer.$array0.data;
    var$3 = $this.$start;
    var$4 = $index * 2 | 0;
    $value = (var$2[(var$3 + var$4 | 0) + 1 | 0] & 255) << 8 | $this.$byteByffer.$array0.data[$this.$start + var$4 | 0] & 255;
    return $value & 65535;
}
function jn_CharBufferOverByteBufferLittleEndian_putChar($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer.$array0.data;
    var$4 = $this.$start;
    var$5 = $index * 2 | 0;
    var$3[var$4 + var$5 | 0] = $value << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start + var$5 | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
}
var jlr_Array = $rt_classWithoutFields();
function jlr_Array_getLength(var$1) {
    if (var$1 === null || var$1.constructor.$meta.item === undefined) {
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    return var$1.data.length;
}
function jlr_Array_newInstance($componentType, $length) {
    if ($componentType === null)
        $rt_throw(jl_NullPointerException__init_());
    if ($componentType === $rt_cls($rt_voidcls()))
        $rt_throw(jl_IllegalArgumentException__init_0());
    if ($length < 0)
        $rt_throw(jl_NegativeArraySizeException__init_());
    return jlr_Array_newInstanceImpl($componentType.$getPlatformClass(), $length);
}
function jlr_Array_newInstanceImpl(var$1, var$2) {
    if (var$1.$meta.primitive) {
        if (var$1 == $rt_bytecls()) {
            return $rt_createByteArray(var$2);
        }
        if (var$1 == $rt_shortcls()) {
            return $rt_createShortArray(var$2);
        }
        if (var$1 == $rt_charcls()) {
            return $rt_createCharArray(var$2);
        }
        if (var$1 == $rt_intcls()) {
            return $rt_createIntArray(var$2);
        }
        if (var$1 == $rt_longcls()) {
            return $rt_createLongArray(var$2);
        }
        if (var$1 == $rt_floatcls()) {
            return $rt_createFloatArray(var$2);
        }
        if (var$1 == $rt_doublecls()) {
            return $rt_createDoubleArray(var$2);
        }
        if (var$1 == $rt_booleancls()) {
            return $rt_createBooleanArray(var$2);
        }
    } else {
        return $rt_createArray(var$1, var$2)
    }
}
var otcit_DoubleAnalyzer$Result = $rt_classWithoutFields();
function otcit_DoubleAnalyzer$Result__init_() {
    var var_0 = new otcit_DoubleAnalyzer$Result();
    otcit_DoubleAnalyzer$Result__init_0(var_0);
    return var_0;
}
function otcit_DoubleAnalyzer$Result__init_0($this) {
    jl_Object__init_0($this);
}
var jl_IncompatibleClassChangeError = $rt_classWithoutFields(jl_LinkageError);
function jl_IncompatibleClassChangeError__init_(var_0) {
    var var_1 = new jl_IncompatibleClassChangeError();
    jl_IncompatibleClassChangeError__init_0(var_1, var_0);
    return var_1;
}
function jl_IncompatibleClassChangeError__init_0($this, $message) {
    jl_LinkageError__init_0($this, $message);
}
var jl_NoSuchFieldError = $rt_classWithoutFields(jl_IncompatibleClassChangeError);
function jl_NoSuchFieldError__init_(var_0) {
    var var_1 = new jl_NoSuchFieldError();
    jl_NoSuchFieldError__init_0(var_1, var_0);
    return var_1;
}
function jl_NoSuchFieldError__init_0($this, $message) {
    jl_IncompatibleClassChangeError__init_0($this, $message);
}
var jur_AbstractCharClass$LazyJavaDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDigit();
    jur_AbstractCharClass$LazyJavaDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaDigit_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDigit$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var ju_Collection = $rt_classWithoutFields(0);
var ju_AbstractCollection = $rt_classWithoutFields();
function ju_AbstractCollection__init_($this) {
    jl_Object__init_0($this);
}
function ju_AbstractCollection_toArray($this, $a) {
    var var$2, $i, var$4, $iter;
    var$2 = $a.data;
    $i = $this.$size();
    var$4 = var$2.length;
    if (var$4 < $i)
        $a = jlr_Array_newInstance((jl_Object_getClass($a)).$getComponentType(), $i);
    else
        while ($i < var$4) {
            var$2[$i] = null;
            $i = $i + 1 | 0;
        }
    $i = 0;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        var$2 = $a.data;
        var$4 = $i + 1 | 0;
        var$2[$i] = $iter.$next0();
        $i = var$4;
    }
    return $a;
}
var ji_InputStream = $rt_classWithoutFields();
function ji_InputStream__init_($this) {
    jl_Object__init_0($this);
}
function ji_InputStream_read($this, $b) {
    return $this.$read0($b, 0, $b.data.length);
}
function ji_InputStream_read0($this, $b, $off, $len) {
    var $i, $bt, var$6, var$7;
    $i = 0;
    while ($i < $len) {
        $bt = $this.$read1();
        if ($bt < 0) {
            if (!$i)
                $i = (-1);
            return $i;
        }
        var$6 = $b.data;
        var$7 = $off + 1 | 0;
        var$6[$off] = $bt << 24 >> 24;
        $i = $i + 1 | 0;
        $off = var$7;
    }
    if ($len <= 0)
        $len = (-1);
    return $len;
}
function ji_InputStream_close($this) {}
function ji_ByteArrayInputStream() {
    var a = this; ji_InputStream.call(a);
    a.$buf0 = null;
    a.$pos = 0;
    a.$mark0 = 0;
    a.$count1 = 0;
}
function ji_ByteArrayInputStream__init_(var_0, var_1, var_2) {
    var var_3 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function ji_ByteArrayInputStream__init_1(var_0) {
    var var_1 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_2(var_1, var_0);
    return var_1;
}
function ji_ByteArrayInputStream__init_0($this, $buf, $offset, $length) {
    ji_InputStream__init_($this);
    $this.$buf0 = $buf;
    $this.$pos = $offset;
    $this.$mark0 = $offset;
    $this.$count1 = $offset + $length | 0;
}
function ji_ByteArrayInputStream__init_2($this, $buf) {
    ji_ByteArrayInputStream__init_0($this, $buf, 0, $buf.data.length);
}
function ji_ByteArrayInputStream_read($this) {
    var var$1, var$2, var$3;
    if ($this.$pos >= $this.$count1)
        var$1 = (-1);
    else {
        var$2 = $this.$buf0.data;
        var$3 = $this.$pos;
        $this.$pos = var$3 + 1 | 0;
        var$1 = var$2[var$3] & 255;
    }
    return var$1;
}
function ji_ByteArrayInputStream_read0($this, $b, $off, $len) {
    var $bytesToRead, $i, var$6, var$7, var$8, var$9;
    $bytesToRead = jl_Math_min($len, $this.$count1 - $this.$pos | 0);
    $i = 0;
    while ($i < $bytesToRead) {
        var$6 = $b.data;
        var$7 = $off + 1 | 0;
        var$8 = $this.$buf0.data;
        var$9 = $this.$pos;
        $this.$pos = var$9 + 1 | 0;
        var$6[$off] = var$8[var$9];
        $i = $i + 1 | 0;
        $off = var$7;
    }
    if ($bytesToRead <= 0)
        $bytesToRead = (-1);
    return $bytesToRead;
}
function ji_ByteArrayInputStream_close($this) {}
var otci_IntegerUtil = $rt_classWithoutFields();
function otci_IntegerUtil_toUnsignedLogRadixString($value, $radixLog2) {
    var $radix, $mask, $sz, $chars, $pos, $target, var$9, $target_0;
    if (!$value)
        return $rt_s(298);
    $radix = 1 << $radixLog2;
    $mask = $radix - 1 | 0;
    $sz = (((32 - jl_Integer_numberOfLeadingZeros($value) | 0) + $radixLog2 | 0) - 1 | 0) / $radixLog2 | 0;
    $chars = $rt_createCharArray($sz);
    $pos = $rt_imul($sz - 1 | 0, $radixLog2);
    $target = 0;
    while ($pos >= 0) {
        var$9 = $chars.data;
        $target_0 = $target + 1 | 0;
        var$9[$target] = jl_Character_forDigit($value >>> $pos & $mask, $radix);
        $pos = $pos - $radixLog2 | 0;
        $target = $target_0;
    }
    return jl_String__init_($chars);
}
var jn_IntBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_IntBuffer__init_($this, $capacity, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    $this.$position3 = $position;
    $this.$limit = $limit;
}
function jn_IntBuffer_wrap($array, $offset, $length) {
    return jn_IntBufferOverArray__init_(0, $array.data.length, $array, $offset, $offset + $length | 0, 0);
}
function jn_IntBuffer_wrap0($array) {
    return jn_IntBuffer_wrap($array, 0, $array.data.length);
}
function jn_IntBuffer_put($this, $src) {
    var $length, $pos, $offset, $i, var$6, var$7;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src))
        $rt_throw(jn_BufferOverflowException__init_());
    $length = jn_Buffer_remaining($src);
    $pos = $this.$position3;
    $offset = $src.$position3;
    $i = 0;
    while ($i < $length) {
        var$6 = $pos + 1 | 0;
        var$7 = $offset + 1 | 0;
        $this.$putElement($pos, $src.$getElement($offset));
        $i = $i + 1 | 0;
        $pos = var$6;
        $offset = var$7;
    }
    $this.$position3 = $this.$position3 + $length | 0;
    return $this;
}
function jn_IntBuffer_put0($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(299))).$append0(var$6)).$append($rt_s(294))).$append0(var$5)).$toString()));
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_1(((((jl_StringBuilder__init_()).$append($rt_s(295))).$append0($length)).$append($rt_s(296))).$toString()));
            $pos = $this.$position3;
            $i = 0;
            while ($i < $length) {
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                $this.$putElement($pos, var$4[$offset]);
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position3 = $this.$position3 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(297))).$append0($offset)).$append($rt_s(51))).$append0(var$4.length)).$append($rt_s(289))).$toString()));
}
function jn_IntBuffer_put1($this, $src) {
    return $this.$put4($src, 0, $src.data.length);
}
function jn_IntBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_IntBuffer_clear0($this) {
    return jn_IntBuffer_clear($this);
}
function jur_LeafQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$leaf = null;
}
function jur_LeafQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_LeafQuantifierSet();
    jur_LeafQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$leaf = $innerSet;
}
function jur_LeafQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $i, var$5;
    $i = 0;
    a: {
        while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
            var$5 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$5 <= 0)
                break a;
            $stringIndex = $stringIndex + var$5 | 0;
            $i = $i + 1 | 0;
        }
    }
    while (true) {
        if ($i < 0)
            return (-1);
        var$5 = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if (var$5 >= 0)
            break;
        $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
        $i = $i + (-1) | 0;
    }
    return var$5;
}
var jur_AltQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_AltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AltQuantifierSet();
    jur_AltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_AltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
    return $shift;
}
function jur_AltQuantifierSet_setNext($this, $next) {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
}
var jur_PossessiveAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet);
function jur_PossessiveAltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveAltQuantifierSet();
    jur_PossessiveAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_PossessiveAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$4 >= 1)
            $stringIndex = $stringIndex + var$4 | 0;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
var cgxgbt_TeaLauncher = $rt_classWithoutFields();
function cgxgbt_TeaLauncher_main($args) {
    var $config, $appListener, $listener;
    $config = cgxgbt_TeaApplicationConfiguration__init_($rt_s(300));
    $appListener = cgxgbt_TeaLauncher_getApplicationListener();
    if ($appListener !== null) {
        $listener = $appListener;
        cgxgbw_WebApplication__init_(new cgxgbw_WebApplication, $listener, $config);
    }
}
function cgxgbt_TeaLauncher_getApplicationListener() {
    return cgxgetf_FreeTypePackTest__init_();
}
var jl_SecurityException = $rt_classWithoutFields(jl_RuntimeException);
var otji_JS = $rt_classWithoutFields();
function otji_JS_wrap($array) {
    var var$2, var$3, $result, $i, var$6;
    if ($array === null)
        return null;
    var$2 = $array.data;
    var$3 = var$2.length;
    $result = new Array(var$3);
    $i = 0;
    while ($i < var$3) {
        var$6 = var$2[$i];
        $result[$i] = var$6;
        $i = $i + 1 | 0;
    }
    return $result;
}
function otji_JS_wrap0($array) {
    var var$2, var$3, $result, $i, var$6;
    if ($array === null)
        return null;
    var$2 = $array.data;
    var$3 = var$2.length;
    $result = new Array(var$3);
    $i = 0;
    while ($i < var$3) {
        var$6 = var$2[$i];
        $result[$i] = var$6;
        $i = $i + 1 | 0;
    }
    return $result;
}
function otji_JS_function(var$1, var$2) {
    var name = 'jso$functor$' + var$2;
    if (!var$1[name]) {
        var fn = function() {
            return var$1[var$2].apply(var$1, arguments);
        };
        var$1[name] = function() {
            return fn;
        };
    }
    return var$1[name]();
}
function otji_JS_functionAsObject(var$1, var$2) {
    if (typeof var$1 !== "function") return var$1;
    var result = {};
    result[var$2] = var$1;
    return result;
}
function cbgu_LongMap() {
    var a = this; jl_Object.call(a);
    a.$size3 = 0;
    a.$keyTable0 = null;
    a.$valueTable = null;
    a.$zeroValue = null;
    a.$hasZeroValue0 = 0;
    a.$loadFactor0 = 0.0;
    a.$threshold0 = 0;
    a.$shift0 = 0;
    a.$mask0 = 0;
    a.$values1 = null;
    a.$values2 = null;
}
function cbgu_LongMap__init_() {
    var var_0 = new cbgu_LongMap();
    cbgu_LongMap__init_0(var_0);
    return var_0;
}
function cbgu_LongMap__init_1(var_0, var_1) {
    var var_2 = new cbgu_LongMap();
    cbgu_LongMap__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_LongMap__init_0($this) {
    cbgu_LongMap__init_2($this, 51, 0.800000011920929);
}
function cbgu_LongMap__init_2($this, $initialCapacity, $loadFactor) {
    var $tableSize;
    jl_Object__init_0($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor0 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold0 = $tableSize * $loadFactor | 0;
        $this.$mask0 = $tableSize - 1 | 0;
        $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask0));
        $this.$keyTable0 = $rt_createLongArray($tableSize);
        $this.$valueTable = $rt_createArray(jl_Object, $tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(24))).$append2($loadFactor)).$toString()));
}
function cbgu_LongMap_place($this, $item) {
    return Long_lo(Long_shru(Long_mul(Long_xor($item, Long_shru($item, 32)), Long_create(2135587861, 2654435769)), $this.$shift0));
}
function cbgu_LongMap_locateKey($this, $key) {
    var $keyTable, $i, $other;
    $keyTable = $this.$keyTable0;
    $i = $this.$place0($key);
    while (true) {
        $other = $keyTable.data[$i];
        if (Long_eq($other, Long_ZERO))
            return  -($i + 1 | 0) | 0;
        if (Long_eq($other, $key))
            break;
        $i = ($i + 1 | 0) & $this.$mask0;
    }
    return $i;
}
function cbgu_LongMap_put($this, $key, $value) {
    var $oldValue, $i, var$5;
    if (Long_eq($key, Long_ZERO)) {
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = $value;
        if (!$this.$hasZeroValue0) {
            $this.$hasZeroValue0 = 1;
            $this.$size3 = $this.$size3 + 1 | 0;
        }
        return $oldValue;
    }
    $i = cbgu_LongMap_locateKey($this, $key);
    if ($i >= 0) {
        $oldValue = $this.$valueTable.data[$i];
        $this.$valueTable.data[$i] = $value;
        return $oldValue;
    }
    var$5 =  -($i + 1 | 0) | 0;
    $this.$keyTable0.data[var$5] = $key;
    $this.$valueTable.data[var$5] = $value;
    var$5 = $this.$size3 + 1 | 0;
    $this.$size3 = var$5;
    if (var$5 >= $this.$threshold0)
        cbgu_LongMap_resize($this, $this.$keyTable0.data.length << 1);
    return null;
}
function cbgu_LongMap_putResize($this, $key, $value) {
    var $keyTable, $i, var$5;
    $keyTable = $this.$keyTable0;
    $i = $this.$place0($key);
    while (true) {
        var$5 = $keyTable.data;
        if (Long_eq(var$5[$i], Long_ZERO))
            break;
        $i = ($i + 1 | 0) & $this.$mask0;
    }
    var$5[$i] = $key;
    $this.$valueTable.data[$i] = $value;
}
function cbgu_LongMap_get($this, $key) {
    var $i;
    if (Long_eq($key, Long_ZERO))
        return !$this.$hasZeroValue0 ? null : $this.$zeroValue;
    $i = cbgu_LongMap_locateKey($this, $key);
    return $i < 0 ? null : $this.$valueTable.data[$i];
}
function cbgu_LongMap_remove($this, $key) {
    var $oldValue, $i, $keyTable, $valueTable, var$6, $mask, $next, var$9, var$10, $placement;
    if (Long_eq($key, Long_ZERO)) {
        if (!$this.$hasZeroValue0)
            return null;
        $this.$hasZeroValue0 = 0;
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = null;
        $this.$size3 = $this.$size3 - 1 | 0;
        return $oldValue;
    }
    $i = cbgu_LongMap_locateKey($this, $key);
    if ($i < 0)
        return null;
    $keyTable = $this.$keyTable0;
    $valueTable = $this.$valueTable;
    var$6 = $valueTable.data;
    $oldValue = var$6[$i];
    $mask = $this.$mask0;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$9 = $keyTable.data;
        var$10 = var$9[$next];
        if (Long_eq(var$10, Long_ZERO))
            break;
        $placement = $this.$place0(var$10);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$9[$i] = var$10;
            var$6[$i] = var$6[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$9[$i] = Long_ZERO;
    var$6[$i] = null;
    $this.$size3 = $this.$size3 - 1 | 0;
    return $oldValue;
}
function cbgu_LongMap_resize($this, $newSize) {
    var $oldCapacity, $oldKeyTable, $oldValueTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable0.data.length;
        $this.$threshold0 = $newSize * $this.$loadFactor0 | 0;
        $this.$mask0 = $newSize - 1 | 0;
        $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask0));
        $oldKeyTable = $this.$keyTable0;
        $oldValueTable = $this.$valueTable;
        $this.$keyTable0 = $rt_createLongArray($newSize);
        $this.$valueTable = $rt_createArray(jl_Object, $newSize);
        if ($this.$size3 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if (Long_ne($key, Long_ZERO))
                    cbgu_LongMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbgu_LongMap_values($this) {
    if (cbgu_Collections_allocateIterators)
        return cbgu_LongMap$Values__init_($this);
    if ($this.$values1 === null) {
        $this.$values1 = cbgu_LongMap$Values__init_($this);
        $this.$values2 = cbgu_LongMap$Values__init_($this);
    }
    if ($this.$values1.$valid) {
        $this.$values2.$reset0();
        $this.$values2.$valid = 1;
        $this.$values1.$valid = 0;
        return $this.$values2;
    }
    $this.$values1.$reset0();
    $this.$values1.$valid = 1;
    $this.$values2.$valid = 0;
    return $this.$values1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$01 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0($this, $this$0) {
    $this.$this$01 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains($this, $ch) {
    return jl_Character_isUnicodeIdentifierStart($ch);
}
function jnc_Charset() {
    var a = this; jl_Object.call(a);
    a.$canonicalName = null;
    a.$aliases = null;
}
function jnc_Charset__init_($this, $canonicalName, $aliases) {
    var var$3, var$4, var$5, $alias;
    var$3 = $aliases.data;
    jl_Object__init_0($this);
    jnc_Charset_checkCanonicalName($canonicalName);
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $alias = var$3[var$5];
        jnc_Charset_checkCanonicalName($alias);
        var$5 = var$5 + 1 | 0;
    }
    $this.$canonicalName = $canonicalName;
    $this.$aliases = $aliases.$clone();
}
function jnc_Charset_checkCanonicalName($name) {
    var $i, $c;
    if ($name.$isEmpty())
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    if (!jnc_Charset_isValidCharsetStart($name.$charAt(0)))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    $i = 1;
    while ($i < $name.$length()) {
        a: {
            $c = $name.$charAt($i);
            switch ($c) {
                case 43:
                case 45:
                case 46:
                case 58:
                case 95:
                    break;
                default:
                    if (jnc_Charset_isValidCharsetStart($c))
                        break a;
                    else
                        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
            }
        }
        $i = $i + 1 | 0;
    }
}
function jnc_Charset_isValidCharsetStart($c) {
    var var$2;
    a: {
        b: {
            if (!($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122)) {
                if ($c < 65)
                    break b;
                if ($c > 90)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
}
function jnc_Charset_forName($charsetName) {
    var $charset;
    if ($charsetName === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(301)));
    jnc_Charset_checkCanonicalName($charsetName);
    $charset = (jnc_Charset$Charsets_access$000()).$get1($charsetName.$toUpperCase0());
    if ($charset !== null)
        return $charset;
    $rt_throw(jnc_UnsupportedCharsetException__init_($charsetName));
}
function jnc_Charset_name($this) {
    return $this.$canonicalName;
}
function jnc_Charset_encode($this, $cb) {
    var var$2, var$3, $e, $$je;
    a: {
        try {
            var$2 = $this.$newEncoder();
            jnc_CodingErrorAction_$callClinit();
            var$3 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetEncoder_onMalformedInput(var$2, var$3);
            var$2 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetEncoder_onUnmappableCharacter(var$3, var$2);
            var$3 = jnc_CharsetEncoder_encode0(var$3, $cb);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $rt_throw(jl_AssertionError__init_($rt_s(302), $e));
}
function jnci_UTF16Charset() {
    var a = this; jnc_Charset.call(a);
    a.$bom0 = 0;
    a.$littleEndian0 = 0;
}
function jnci_UTF16Charset__init_(var_0, var_1, var_2) {
    var var_3 = new jnci_UTF16Charset();
    jnci_UTF16Charset__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnci_UTF16Charset__init_0($this, $canonicalName, $bom, $littleEndian) {
    jnc_Charset__init_($this, $canonicalName, $rt_createArray(jl_String, 0));
    $this.$bom0 = $bom;
    $this.$littleEndian0 = $littleEndian;
}
function jnci_UTF16Charset_newEncoder($this) {
    return jnci_UTF16Encoder__init_($this, $this.$bom0, $this.$littleEndian0);
}
var otciu_UnicodeHelper = $rt_classWithoutFields();
function otciu_UnicodeHelper_decodeIntPairsDiff($text) {
    var $flow, $sz, $data, $j, $lastKey, $lastValue, $i, var$9, var$10;
    $flow = otci_CharFlow__init_($text.$toCharArray());
    $sz = otci_Base46_decodeUnsigned($flow);
    $data = $rt_createIntArray($sz * 2 | 0);
    $j = 0;
    $lastKey = 0;
    $lastValue = 0;
    $i = 0;
    while ($i < $sz) {
        var$9 = $data.data;
        $lastKey = $lastKey + otci_Base46_decode($flow) | 0;
        $lastValue = $lastValue + otci_Base46_decode($flow) | 0;
        var$10 = $j + 1 | 0;
        var$9[$j] = $lastKey;
        $j = var$10 + 1 | 0;
        var$9[var$10] = $lastValue;
        $i = $i + 1 | 0;
    }
    return $data;
}
function otciu_UnicodeHelper_decodeByte($c) {
    if ($c > 92)
        return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
    if ($c <= 34)
        return ($c - 32 | 0) << 24 >> 24;
    return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
}
function otciu_UnicodeHelper_extractRle($encoded) {
    var $ranges, $buffer, $index, $rangeIndex, $codePoint, $i, $b, $count, $pos, $j, $digit, var$13, var$14, var$15, var$16, var$17;
    $ranges = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
    $buffer = $rt_createByteArray(16384);
    $index = 0;
    $rangeIndex = 0;
    $codePoint = 0;
    $i = 0;
    while ($i < $encoded.$length()) {
        $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        if ($b == 64) {
            $i = $i + 1 | 0;
            $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
            $count = 0;
            $pos = 1;
            $j = 0;
            while ($j < 3) {
                $i = $i + 1 | 0;
                $digit = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
                $count = $count | $rt_imul($pos, $digit);
                $pos = $pos * 64 | 0;
                $j = $j + 1 | 0;
            }
        } else if ($b < 32)
            $count = 1;
        else {
            $b = ($b - 32 | 0) << 24 >> 24;
            $i = $i + 1 | 0;
            $count = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        }
        if (!$b && $count >= 128) {
            if ($index > 0) {
                var$13 = $ranges.data;
                var$14 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf($buffer, $index));
                $rangeIndex = var$14;
            }
            $codePoint = $codePoint + ($index + $count | 0) | 0;
            $index = 0;
        } else {
            var$15 = $buffer.data;
            var$14 = $index + $count | 0;
            if (var$14 < var$15.length)
                var$16 = $rangeIndex;
            else {
                var$13 = $ranges.data;
                var$16 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf($buffer, $index));
                $codePoint = $codePoint + var$14 | 0;
                $index = 0;
            }
            while (true) {
                var$14 = $count + (-1) | 0;
                if ($count <= 0)
                    break;
                var$17 = $index + 1 | 0;
                var$15[$index] = $b;
                $index = var$17;
                $count = var$14;
            }
            $rangeIndex = var$16;
        }
        $i = $i + 1 | 0;
    }
    return ju_Arrays_copyOf1($ranges, $rangeIndex);
}
var otp_PlatformRunnable = $rt_classWithoutFields(0);
function jl_Object$monitorEnterWait$lambda$_6_0() {
    var a = this; jl_Object.call(a);
    a.$_0 = null;
    a.$_1 = null;
    a.$_2 = 0;
    a.$_3 = null;
}
function jl_Object$monitorEnterWait$lambda$_6_0__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jl_Object$monitorEnterWait$lambda$_6_0();
    jl_Object$monitorEnterWait$lambda$_6_0__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jl_Object$monitorEnterWait$lambda$_6_0__init_0(var$0, var$1, var$2, var$3, var$4) {
    jl_Object__init_0(var$0);
    var$0.$_0 = var$1;
    var$0.$_1 = var$2;
    var$0.$_2 = var$3;
    var$0.$_3 = var$4;
}
function jl_Object$monitorEnterWait$lambda$_6_0_run(var$0) {
    jl_Object_lambda$monitorEnterWait$0(var$0.$_0, var$0.$_1, var$0.$_2, var$0.$_3);
}
var cgxgbw_AssetLoaderListener = $rt_classWithoutFields();
function cgxgbw_AssetLoaderListener__init_() {
    var var_0 = new cgxgbw_AssetLoaderListener();
    cgxgbw_AssetLoaderListener__init_0(var_0);
    return var_0;
}
function cgxgbw_AssetLoaderListener__init_0($this) {
    jl_Object__init_0($this);
}
function cgxgbw_AssetLoaderListener_onProgress($this, $amount) {}
function cgxgbw_AssetLoaderListener_onFailure($this, $url) {}
function cgxgbwp_Preloader$1$1() {
    cgxgbw_AssetLoaderListener.call(this);
    this.$this$1 = null;
}
function cgxgbwp_Preloader$1$1__init_(var_0) {
    var var_1 = new cgxgbwp_Preloader$1$1();
    cgxgbwp_Preloader$1$1__init_0(var_1, var_0);
    return var_1;
}
function cgxgbwp_Preloader$1$1__init_0($this, $this$1) {
    $this.$this$1 = $this$1;
    cgxgbw_AssetLoaderListener__init_0($this);
}
function cgxgbwp_Preloader$1$1_onProgress($this, $amount) {}
function cgxgbwp_Preloader$1$1_onFailure($this, $url) {}
function cgxgbwp_Preloader$1$1_onSuccess($this, $url, $result) {
    return 0;
}
var ju_Objects = $rt_classWithoutFields();
function ju_Objects_equals($a, $b) {
    if ($a === $b)
        return 1;
    return $a !== null ? $a.$equals($b) : $b !== null ? 0 : 1;
}
var jur_AbstractCharClass$LazyAlnum = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlpha);
function jur_AbstractCharClass$LazyAlnum__init_() {
    var var_0 = new jur_AbstractCharClass$LazyAlnum();
    jur_AbstractCharClass$LazyAlnum__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlnum__init_0($this) {
    jur_AbstractCharClass$LazyAlpha__init_0($this);
}
function jur_AbstractCharClass$LazyAlnum_computeValue($this) {
    return (jur_AbstractCharClass$LazyAlpha_computeValue($this)).$add0(48, 57);
}
var jur_AbstractCharClass$LazyGraph = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlnum);
function jur_AbstractCharClass$LazyGraph__init_() {
    var var_0 = new jur_AbstractCharClass$LazyGraph();
    jur_AbstractCharClass$LazyGraph__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyGraph__init_0($this) {
    jur_AbstractCharClass$LazyAlnum__init_0($this);
}
function jur_AbstractCharClass$LazyGraph_computeValue($this) {
    return (((jur_AbstractCharClass$LazyAlnum_computeValue($this)).$add0(33, 64)).$add0(91, 96)).$add0(123, 126);
}
var jur_AbstractCharClass$LazyPrint = $rt_classWithoutFields(jur_AbstractCharClass$LazyGraph);
function jur_AbstractCharClass$LazyPrint__init_() {
    var var_0 = new jur_AbstractCharClass$LazyPrint();
    jur_AbstractCharClass$LazyPrint__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPrint__init_0($this) {
    jur_AbstractCharClass$LazyGraph__init_0($this);
}
function jur_AbstractCharClass$LazyPrint_computeValue($this) {
    return (jur_AbstractCharClass$LazyGraph_computeValue($this)).$add(32);
}
var jur_AbstractCharClass$LazyJavaSpaceChar = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaSpaceChar__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaSpaceChar();
    jur_AbstractCharClass$LazyJavaSpaceChar__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaSpaceChar__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaSpaceChar$1__init_($this);
}
var jur_PositiveLookBehind = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_PositiveLookBehind__init_(var_0, var_1) {
    var var_2 = new jur_PositiveLookBehind();
    jur_PositiveLookBehind__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_PositiveLookBehind__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_PositiveLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $leftBound, $shift, $i, $e;
    $size = $this.$children.$size();
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    a: {
        $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0) {
            $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
            $i = 0;
            while (true) {
                if ($i >= $size)
                    break a;
                $e = $this.$children.$get($i);
                if ($e.$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                    $matchResult.$setConsumed($this.$groupIndex, (-1));
                    return $shift;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return (-1);
}
function jur_PositiveLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_SequenceSet() {
    var a = this; jur_LeafSet.call(a);
    a.$string0 = null;
    a.$leftToRight = null;
    a.$rightToLeft = null;
}
function jur_SequenceSet__init_(var_0) {
    var var_1 = new jur_SequenceSet();
    jur_SequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet__init_0($this, $substring) {
    var $j;
    jur_LeafSet__init_0($this);
    $this.$string0 = $substring.$toString();
    $this.$charCount = $substring.$length();
    $this.$leftToRight = jur_SequenceSet$IntHash__init_($this.$charCount);
    $this.$rightToLeft = jur_SequenceSet$IntHash__init_($this.$charCount);
    $j = 0;
    while ($j < ($this.$charCount - 1 | 0)) {
        $this.$leftToRight.$put5($this.$string0.$charAt($j), ($this.$charCount - $j | 0) - 1 | 0);
        $this.$rightToLeft.$put5($this.$string0.$charAt(($this.$charCount - $j | 0) - 1 | 0), ($this.$charCount - $j | 0) - 1 | 0);
        $j = $j + 1 | 0;
    }
}
function jur_SequenceSet_accepts($this, $strIndex, $testString) {
    return !$this.$startsWith($testString, $strIndex) ? (-1) : $this.$charCount;
}
function jur_SequenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $strLength, var$5;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex > $strLength)
            return (-1);
        var$5 = $this.$indexOf($testString, $strIndex, $strLength);
        if (var$5 < 0)
            return (-1);
        if ($this.$next.$matches(var$5 + $this.$charCount | 0, $testString, $matchResult) >= 0)
            break;
        $strIndex = var$5 + 1 | 0;
    }
    return var$5;
}
function jur_SequenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var var$5;
    while (true) {
        if ($lastIndex < $strIndex)
            return (-1);
        var$5 = $this.$lastIndexOf($testString, $strIndex, $lastIndex);
        if (var$5 < 0)
            return (-1);
        if ($this.$next.$matches(var$5 + $this.$charCount | 0, $testString, $matchResult) >= 0)
            break;
        $lastIndex = var$5 + (-1) | 0;
    }
    return var$5;
}
function jur_SequenceSet_first($this, $set) {
    var var$2, var$3, var$4, var$5, var$6;
    if ($set instanceof jur_CharSet)
        return $set.$getChar0() != $this.$string0.$charAt(0) ? 0 : 1;
    if ($set instanceof jur_RangeSet)
        return $set.$accepts(0, $this.$string0.$substring(0, 1)) <= 0 ? 0 : 1;
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        a: {
            if ($this.$string0.$length() > 1) {
                var$2 = $set;
                var$3 = var$2.$getCodePoint();
                var$4 = $this.$string0.$charAt(0);
                var$2 = $this.$string0;
                var$5 = var$2.$charAt(1);
                if (var$3 == jl_Character_toCodePoint(var$4, var$5)) {
                    var$4 = 1;
                    break a;
                }
            }
            var$4 = 0;
        }
        return var$4;
    }
    b: {
        c: {
            var$2 = $set;
            if (!var$2.$contains($this.$string0.$charAt(0))) {
                var$6 = $this.$string0;
                if (var$6.$length() <= 1)
                    break c;
                var$6 = $this.$string0;
                var$4 = jl_Character_toCodePoint(var$6.$charAt(0), $this.$string0.$charAt(1));
                if (!var$2.$contains(var$4))
                    break c;
            }
            var$4 = 1;
            break b;
        }
        var$4 = 0;
    }
    return var$4;
}
function jur_SequenceSet_indexOf($this, $str, $i, $to) {
    var $last, $ch;
    $last = $this.$string0.$charAt($this.$charCount - 1 | 0);
    while (true) {
        if ($i > ($to - $this.$charCount | 0))
            return (-1);
        $ch = $str.$charAt(($i + $this.$charCount | 0) - 1 | 0);
        if ($ch == $last && $this.$startsWith($str, $i))
            break;
        $i = $i + $this.$leftToRight.$get4($ch) | 0;
    }
    return $i;
}
function jur_SequenceSet_lastIndexOf($this, $str, $to, $i) {
    var $first, $size, $delta, $ch;
    $first = $this.$string0.$charAt(0);
    $size = $str.$length();
    $delta = ($size - $i | 0) - $this.$charCount | 0;
    if ($delta <= 0)
        $i = $i + $delta | 0;
    while (true) {
        if ($i < $to)
            return (-1);
        $ch = $str.$charAt($i);
        if ($ch == $first && $this.$startsWith($str, $i))
            break;
        $i = $i - $this.$rightToLeft.$get4($ch) | 0;
    }
    return $i;
}
function jur_SequenceSet_startsWith($this, $str, $from) {
    var $i;
    $i = 0;
    while ($i < $this.$charCount) {
        if ($str.$charAt($i + $from | 0) != $this.$string0.$charAt($i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
var cgxgbwp_AssetDownloader$AssetDownload = $rt_classWithoutFields(0);
var jnci_AsciiCharset = $rt_classWithoutFields(jnc_Charset);
function jnci_AsciiCharset__init_() {
    var var_0 = new jnci_AsciiCharset();
    jnci_AsciiCharset__init_0(var_0);
    return var_0;
}
function jnci_AsciiCharset__init_0($this) {
    jnc_Charset__init_($this, $rt_s(303), $rt_createArray(jl_String, 0));
}
function jnci_AsciiCharset_newEncoder($this) {
    return jnci_AsciiEncoder__init_($this);
}
var jn_LongBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_LongBuffer__init_($this, $capacity, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    $this.$position3 = $position;
    $this.$limit = $limit;
}
function jn_LongBuffer_put($this, $src) {
    var $length, $pos, $offset, $i, var$6, var$7;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src))
        $rt_throw(jn_BufferOverflowException__init_());
    $length = jn_Buffer_remaining($src);
    $pos = $this.$position3;
    $offset = $src.$position3;
    $i = 0;
    while ($i < $length) {
        var$6 = $pos + 1 | 0;
        var$7 = $offset + 1 | 0;
        $this.$putElement0($pos, $src.$getElement0($offset));
        $i = $i + 1 | 0;
        $pos = var$6;
        $offset = var$7;
    }
    $this.$position3 = $this.$position3 + $length | 0;
    return $this;
}
var jn_LongBufferImpl = $rt_classWithoutFields(jn_LongBuffer);
function jn_LongBufferImpl__init_($this, $capacity, $position, $limit) {
    jn_LongBuffer__init_($this, $capacity, $position, $limit);
}
function jn_LongBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function cbggg_PixmapPacker$GuillotineStrategy$Node() {
    var a = this; jl_Object.call(a);
    a.$leftChild = null;
    a.$rightChild = null;
    a.$rect = null;
    a.$full = 0;
}
function cbggg_PixmapPacker$GuillotineStrategy$Node__init_() {
    var var_0 = new cbggg_PixmapPacker$GuillotineStrategy$Node();
    cbggg_PixmapPacker$GuillotineStrategy$Node__init_0(var_0);
    return var_0;
}
function cbggg_PixmapPacker$GuillotineStrategy$Node__init_0($this) {
    jl_Object__init_0($this);
    $this.$rect = cbgm_Rectangle__init_();
}
var jl_ArrayStoreException = $rt_classWithoutFields(jl_RuntimeException);
function jl_ArrayStoreException__init_() {
    var var_0 = new jl_ArrayStoreException();
    jl_ArrayStoreException__init_0(var_0);
    return var_0;
}
function jl_ArrayStoreException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
var cbgur_ReflectionException = $rt_classWithoutFields(jl_Exception);
function cbgur_ReflectionException__init_(var_0, var_1) {
    var var_2 = new cbgur_ReflectionException();
    cbgur_ReflectionException__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgur_ReflectionException__init_0($this, $message, $cause) {
    jl_Exception__init_2($this, $message, $cause);
}
var jur_AltGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_AltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AltGroupQuantifierSet();
    jur_AltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_AltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_AltGroupQuantifierSet_setNext($this, $next) {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
}
function cgxgbwp_Preloader$Asset() {
    var a = this; jl_Object.call(a);
    a.$succeed = 0;
    a.$loaded = Long_ZERO;
    a.$url = null;
    a.$type0 = null;
    a.$size4 = Long_ZERO;
    a.$mimeType = null;
}
function cgxgbwp_Preloader$Asset__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgxgbwp_Preloader$Asset();
    cgxgbwp_Preloader$Asset__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgxgbwp_Preloader$Asset__init_0($this, $url, $type, $size, $mimeType) {
    jl_Object__init_0($this);
    $this.$url = $url;
    $this.$type0 = $type;
    $this.$size4 = $size;
    $this.$mimeType = $mimeType;
}
var jur_MatchResult = $rt_classWithoutFields(0);
function jur_MatchResultImpl() {
    var a = this; jl_Object.call(a);
    a.$groupBounds = null;
    a.$consumers = null;
    a.$compQuantCounters = null;
    a.$string1 = null;
    a.$groupCount = 0;
    a.$valid0 = 0;
    a.$leftBound = 0;
    a.$rightBound = 0;
    a.$startIndex = 0;
    a.$transparentBounds = 0;
    a.$anchoringBounds = 0;
    a.$hitEnd = 0;
    a.$requireEnd = 0;
    a.$previousMatch = 0;
    a.$mode = 0;
}
function jur_MatchResultImpl__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jur_MatchResultImpl();
    jur_MatchResultImpl__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jur_MatchResultImpl__init_0($this, $string, $leftBound, $rightBound, $groupCount, $compQuantCount, $consumersCount) {
    var var$7;
    jl_Object__init_0($this);
    $this.$previousMatch = (-1);
    var$7 = $groupCount + 1 | 0;
    $this.$groupCount = var$7;
    $this.$groupBounds = $rt_createIntArray(var$7 * 2 | 0);
    $this.$consumers = $rt_createIntArray($consumersCount);
    ju_Arrays_fill($this.$consumers, (-1));
    if ($compQuantCount > 0)
        $this.$compQuantCounters = $rt_createIntArray($compQuantCount);
    ju_Arrays_fill($this.$groupBounds, (-1));
    $this.$reset1($string, $leftBound, $rightBound);
}
function jur_MatchResultImpl_setConsumed($this, $counter, $value) {
    $this.$consumers.data[$counter] = $value;
}
function jur_MatchResultImpl_getConsumed($this, $counter) {
    return $this.$consumers.data[$counter];
}
function jur_MatchResultImpl_end($this) {
    return $this.$end(0);
}
function jur_MatchResultImpl_end0($this, $group) {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
}
function jur_MatchResultImpl_setStart($this, $group, $offset) {
    $this.$groupBounds.data[$group * 2 | 0] = $offset;
}
function jur_MatchResultImpl_setEnd($this, $group, $offset) {
    $this.$groupBounds.data[($group * 2 | 0) + 1 | 0] = $offset;
}
function jur_MatchResultImpl_getStart($this, $group) {
    return $this.$groupBounds.data[$group * 2 | 0];
}
function jur_MatchResultImpl_getEnd($this, $group) {
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
}
function jur_MatchResultImpl_getGroupNoCheck($this, $group) {
    var $st, $end;
    $st = $this.$getStart($group);
    $end = $this.$getEnd($group);
    if (($end | $st | ($end - $st | 0)) >= 0 && $end <= $this.$string1.$length())
        return ($this.$string1.$subSequence($st, $end)).$toString();
    return null;
}
function jur_MatchResultImpl_start($this) {
    return $this.$start0(0);
}
function jur_MatchResultImpl_start0($this, $group) {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[$group * 2 | 0];
}
function jur_MatchResultImpl_finalizeMatch($this) {
    if ($this.$groupBounds.data[0] == (-1)) {
        $this.$groupBounds.data[0] = $this.$startIndex;
        $this.$groupBounds.data[1] = $this.$startIndex;
    }
    $this.$previousMatch = $this.$end0();
}
function jur_MatchResultImpl_getEnterCounter($this, $setCounter) {
    return $this.$compQuantCounters.data[$setCounter];
}
function jur_MatchResultImpl_setEnterCounter($this, $setCounter, $value) {
    $this.$compQuantCounters.data[$setCounter] = $value;
}
function jur_MatchResultImpl_checkGroup($this, $group) {
    if (!$this.$valid0)
        $rt_throw(jl_IllegalStateException__init_0());
    if ($group >= 0 && $group < $this.$groupCount)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_1(jl_String_valueOf($group)));
}
function jur_MatchResultImpl_setValid($this) {
    $this.$valid0 = 1;
}
function jur_MatchResultImpl_isValid($this) {
    return $this.$valid0;
}
function jur_MatchResultImpl_reset($this, $newSequence, $leftBound, $rightBound) {
    $this.$valid0 = 0;
    $this.$mode = 2;
    ju_Arrays_fill($this.$groupBounds, (-1));
    ju_Arrays_fill($this.$consumers, (-1));
    if ($newSequence !== null)
        $this.$string1 = $newSequence;
    if ($leftBound >= 0)
        jur_MatchResultImpl_setBounds($this, $leftBound, $rightBound);
    $this.$startIndex = $this.$leftBound;
}
function jur_MatchResultImpl_reset0($this) {
    $this.$reset1(null, (-1), (-1));
}
function jur_MatchResultImpl_setBounds($this, $leftBound, $rightBound) {
    $this.$leftBound = $leftBound;
    $this.$rightBound = $rightBound;
}
function jur_MatchResultImpl_setStartIndex($this, $startIndex) {
    $this.$startIndex = $startIndex;
    if ($this.$previousMatch >= 0)
        $startIndex = $this.$previousMatch;
    $this.$previousMatch = $startIndex;
}
function jur_MatchResultImpl_getLeftBound($this) {
    return $this.$leftBound;
}
function jur_MatchResultImpl_getRightBound($this) {
    return $this.$rightBound;
}
function jur_MatchResultImpl_setMode($this, $mode) {
    $this.$mode = $mode;
}
function jur_MatchResultImpl_mode($this) {
    return $this.$mode;
}
function jur_MatchResultImpl_hasAnchoringBounds($this) {
    return $this.$anchoringBounds;
}
function jur_MatchResultImpl_hasTransparentBounds($this) {
    return $this.$transparentBounds;
}
function jur_MatchResultImpl_getPreviousMatchEnd($this) {
    return $this.$previousMatch;
}
function cbggg_PixmapPacker$SkylineStrategy$SkylinePage() {
    cbggg_PixmapPacker$Page.call(this);
    this.$rows = null;
}
function cbggg_PixmapPacker$SkylineStrategy$SkylinePage__init_(var_0) {
    var var_1 = new cbggg_PixmapPacker$SkylineStrategy$SkylinePage();
    cbggg_PixmapPacker$SkylineStrategy$SkylinePage__init_0(var_1, var_0);
    return var_1;
}
function cbggg_PixmapPacker$SkylineStrategy$SkylinePage__init_0($this, $packer) {
    cbggg_PixmapPacker$Page__init_0($this, $packer);
    $this.$rows = cbgu_Array__init_();
}
function jur_UCIRangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars = null;
    a.$alt1 = 0;
}
function jur_UCIRangeSet__init_(var_0) {
    var var_1 = new jur_UCIRangeSet();
    jur_UCIRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCIRangeSet__init_0($this, $cc) {
    jur_LeafSet__init_0($this);
    $this.$chars = $cc.$getInstance();
    $this.$alt1 = $cc.$alt0;
}
function jur_UCIRangeSet_accepts($this, $strIndex, $testString) {
    var var$3, var$4;
    var$3 = $this.$chars;
    var$4 = jl_Character_toUpperCase($testString.$charAt($strIndex));
    return !var$3.$contains(jl_Character_toLowerCase(var$4)) ? (-1) : 1;
}
function cbggg_BitmapFont$Glyph() {
    var a = this; jl_Object.call(a);
    a.$id1 = 0;
    a.$srcX = 0;
    a.$srcY = 0;
    a.$width2 = 0;
    a.$height2 = 0;
    a.$u = 0.0;
    a.$v = 0.0;
    a.$u2 = 0.0;
    a.$v2 = 0.0;
    a.$xoffset = 0;
    a.$yoffset = 0;
    a.$xadvance = 0;
    a.$kerning = null;
    a.$fixedWidth = 0;
    a.$page = 0;
}
function cbggg_BitmapFont$Glyph__init_() {
    var var_0 = new cbggg_BitmapFont$Glyph();
    cbggg_BitmapFont$Glyph__init_0(var_0);
    return var_0;
}
function cbggg_BitmapFont$Glyph__init_0($this) {
    jl_Object__init_0($this);
    $this.$page = 0;
}
function cbggg_BitmapFont$Glyph_getKerning($this, $ch) {
    var $page;
    if ($this.$kerning !== null) {
        $page = $this.$kerning.data[$ch >>> 9];
        if ($page !== null)
            return $page.data[$ch & 511];
    }
    return 0;
}
function cbggg_BitmapFont$Glyph_setKerning($this, $ch, $value) {
    var var$3, var$4, $page;
    if ($this.$kerning === null)
        $this.$kerning = $rt_createArray($rt_arraycls($rt_bytecls()), 128);
    var$3 = $this.$kerning.data;
    var$4 = $ch >>> 9;
    $page = var$3[var$4];
    if ($page === null) {
        var$3 = $this.$kerning.data;
        $page = $rt_createByteArray(512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $value << 24 >> 24;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$02 = null;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0($this, $this$0) {
    $this.$this$02 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains($this, $ch) {
    return jl_Character_isJavaIdentifierPart($ch);
}
var cbgu_GdxRuntimeException = $rt_classWithoutFields(jl_RuntimeException);
function cbgu_GdxRuntimeException__init_0(var_0, var_1) {
    var var_2 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_1(var_2, var_0, var_1);
    return var_2;
}
function cbgu_GdxRuntimeException__init_(var_0) {
    var var_1 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_2(var_1, var_0);
    return var_1;
}
function cbgu_GdxRuntimeException__init_3(var_0) {
    var var_1 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_4(var_1, var_0);
    return var_1;
}
function cbgu_GdxRuntimeException__init_1($this, $message, $cause) {
    jl_RuntimeException__init_3($this, $message, $cause);
}
function cbgu_GdxRuntimeException__init_2($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function cbgu_GdxRuntimeException__init_4($this, $cause) {
    jl_RuntimeException__init_6($this, $cause);
}
function cbgg_GLTexture() {
    var a = this; jl_Object.call(a);
    a.$glTarget = 0;
    a.$glHandle = 0;
    a.$minFilter = null;
    a.$magFilter = null;
    a.$uWrap = null;
    a.$vWrap = null;
    a.$anisotropicFilterLevel = 0.0;
}
var cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
function cbgg_GLTexture_$callClinit() {
    cbgg_GLTexture_$callClinit = $rt_eraseClinit(cbgg_GLTexture);
    cbgg_GLTexture__clinit_();
}
function cbgg_GLTexture__init_($this, $glTarget, $glHandle) {
    cbgg_GLTexture_$callClinit();
    jl_Object__init_0($this);
    cbgg_Texture$TextureFilter_$callClinit();
    $this.$minFilter = cbgg_Texture$TextureFilter_Nearest;
    $this.$magFilter = cbgg_Texture$TextureFilter_Nearest;
    cbgg_Texture$TextureWrap_$callClinit();
    $this.$uWrap = cbgg_Texture$TextureWrap_ClampToEdge;
    $this.$vWrap = cbgg_Texture$TextureWrap_ClampToEdge;
    $this.$anisotropicFilterLevel = 1.0;
    $this.$glTarget = $glTarget;
    $this.$glHandle = $glHandle;
}
function cbgg_GLTexture_bind($this) {
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, $this.$glHandle);
}
function cbgg_GLTexture_unsafeSetWrap($this, $u, $v, $force) {
    if ($u !== null && !(!$force && $this.$uWrap === $u)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10242, cbgg_Texture$TextureWrap_getGLEnum($u));
        $this.$uWrap = $u;
    }
    if ($v !== null && !(!$force && $this.$vWrap === $v)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10243, cbgg_Texture$TextureWrap_getGLEnum($v));
        $this.$vWrap = $v;
    }
}
function cbgg_GLTexture_unsafeSetFilter($this, $minFilter, $magFilter, $force) {
    if ($minFilter !== null && !(!$force && $this.$minFilter === $minFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, cbgg_Texture$TextureFilter_getGLEnum($minFilter));
        $this.$minFilter = $minFilter;
    }
    if ($magFilter !== null && !(!$force && $this.$magFilter === $magFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, cbgg_Texture$TextureFilter_getGLEnum($magFilter));
        $this.$magFilter = $magFilter;
    }
}
function cbgg_GLTexture_setFilter($this, $minFilter, $magFilter) {
    $this.$minFilter = $minFilter;
    $this.$magFilter = $magFilter;
    $this.$bind();
    cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, cbgg_Texture$TextureFilter_getGLEnum($minFilter));
    cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, cbgg_Texture$TextureFilter_getGLEnum($magFilter));
}
function cbgg_GLTexture_unsafeSetAnisotropicFilter($this, $level, $force) {
    var $max, var$4;
    $max = cbgg_GLTexture_getMaxAnisotropicFilterLevel();
    if ($max === 1.0)
        return 1.0;
    var$4 = jl_Math_min0($level, $max);
    if (!$force && cbgm_MathUtils_isEqual(var$4, $this.$anisotropicFilterLevel, 0.10000000149011612))
        return $this.$anisotropicFilterLevel;
    cbg_Gdx_gl20.$glTexParameterf(3553, 34046, var$4);
    $this.$anisotropicFilterLevel = var$4;
    return var$4;
}
function cbgg_GLTexture_getMaxAnisotropicFilterLevel() {
    var $buffer, var$2;
    cbgg_GLTexture_$callClinit();
    if (cbgg_GLTexture_maxAnisotropicFilterLevel > 0.0)
        return cbgg_GLTexture_maxAnisotropicFilterLevel;
    if (!cbg_Gdx_graphics.$supportsExtension($rt_s(304))) {
        cbgg_GLTexture_maxAnisotropicFilterLevel = 1.0;
        return 1.0;
    }
    $buffer = cbgu_BufferUtils_newFloatBuffer(16);
    $buffer.$position2(0);
    $buffer.$limit0(jn_Buffer_capacity($buffer));
    cbg_Gdx_gl20.$glGetFloatv(34047, $buffer);
    var$2 = $buffer.$get5(0);
    cbgg_GLTexture_maxAnisotropicFilterLevel = var$2;
    return var$2;
}
function cbgg_GLTexture_uploadImageData($target, $data) {
    cbgg_GLTexture_$callClinit();
    cbgg_GLTexture_uploadImageData0($target, $data, 0);
}
function cbgg_GLTexture_uploadImageData0($target, $data, $miplevel) {
    var $type, $pixmap, $disposePixmap, $tmp_0, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    cbgg_GLTexture_$callClinit();
    if ($data === null)
        return;
    if (!$data.$isPrepared0())
        $data.$prepare();
    $type = $data.$getType();
    cbgg_TextureData$TextureDataType_$callClinit();
    if ($type === cbgg_TextureData$TextureDataType_Custom) {
        $data.$consumeCustomData($target);
        return;
    }
    $pixmap = $data.$consumePixmap();
    $disposePixmap = $data.$disposePixmap();
    if ($data.$getFormat() === $pixmap.$getFormat())
        $tmp_0 = $pixmap;
    else {
        $tmp_0 = cbgg_Pixmap__init_($pixmap.$getWidth(), $pixmap.$getHeight(), $data.$getFormat());
        cbgg_Pixmap$Blending_$callClinit();
        $tmp_0.$setBlending(cbgg_Pixmap$Blending_None);
        $tmp_0.$drawPixmap($pixmap, 0, 0, 0, 0, $pixmap.$getWidth(), $pixmap.$getHeight());
        if ($data.$disposePixmap())
            $pixmap.$dispose();
        $disposePixmap = 1;
    }
    cbg_Gdx_gl.$glPixelStorei(3317, 1);
    if ($data.$useMipMaps0())
        cbggg_MipMapGenerator_generateMipMap($target, $tmp_0, $tmp_0.$getWidth(), $tmp_0.$getHeight());
    else {
        var$8 = cbg_Gdx_gl;
        var$9 = $tmp_0.$getGLInternalFormat();
        var$10 = $tmp_0.$getWidth();
        var$11 = $tmp_0.$getHeight();
        var$12 = $tmp_0.$getGLFormat();
        var$13 = $tmp_0.$getGLType();
        var$14 = $tmp_0.$getPixels();
        var$8.$glTexImage2D($target, $miplevel, var$9, var$10, var$11, 0, var$12, var$13, var$14);
    }
    if ($disposePixmap)
        $tmp_0.$dispose();
}
function cbgg_GLTexture__clinit_() {
    cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
}
function cbgg_Texture() {
    cbgg_GLTexture.call(this);
    this.$data0 = null;
}
var cbgg_Texture_managedTextures = null;
function cbgg_Texture_$callClinit() {
    cbgg_Texture_$callClinit = $rt_eraseClinit(cbgg_Texture);
    cbgg_Texture__clinit_();
}
function cbgg_Texture__init_(var_0, var_1) {
    var var_2 = new cbgg_Texture();
    cbgg_Texture__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_Texture__init_1(var_0, var_1, var_2) {
    var var_3 = new cbgg_Texture();
    cbgg_Texture__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Texture__init_3(var_0) {
    var var_1 = new cbgg_Texture();
    cbgg_Texture__init_4(var_1, var_0);
    return var_1;
}
function cbgg_Texture__init_5(var_0, var_1, var_2) {
    var var_3 = new cbgg_Texture();
    cbgg_Texture__init_6(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Texture__init_0($this, $file, $useMipMaps) {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_2($this, $file, null, $useMipMaps);
}
function cbgg_Texture__init_2($this, $file, $format, $useMipMaps) {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_4($this, cbgg_TextureData$Factory_loadFromFile($file, $format, $useMipMaps));
}
function cbgg_Texture__init_4($this, $data) {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_6($this, 3553, cbg_Gdx_gl.$glGenTexture(), $data);
}
function cbgg_Texture__init_6($this, $glTarget, $glHandle, $data) {
    cbgg_Texture_$callClinit();
    cbgg_GLTexture__init_($this, $glTarget, $glHandle);
    $this.$load($data);
    if ($data.$isManaged())
        cbgg_Texture_addManagedTexture(cbg_Gdx_app, $this);
}
function cbgg_Texture_load($this, $data) {
    if ($this.$data0 !== null && $data.$isManaged() != $this.$data0.$isManaged())
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(305)));
    $this.$data0 = $data;
    if (!$data.$isPrepared0())
        $data.$prepare();
    $this.$bind();
    cbgg_GLTexture_uploadImageData(3553, $data);
    $this.$unsafeSetFilter($this.$minFilter, $this.$magFilter, 1);
    $this.$unsafeSetWrap($this.$uWrap, $this.$vWrap, 1);
    $this.$unsafeSetAnisotropicFilter($this.$anisotropicFilterLevel, 1);
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, 0);
}
function cbgg_Texture_getWidth($this) {
    return $this.$data0.$getWidth();
}
function cbgg_Texture_getHeight($this) {
    return $this.$data0.$getHeight();
}
function cbgg_Texture_getTextureData($this) {
    return $this.$data0;
}
function cbgg_Texture_addManagedTexture($app, $texture) {
    var $managedTextureArray;
    cbgg_Texture_$callClinit();
    $managedTextureArray = cbgg_Texture_managedTextures.$get1($app);
    if ($managedTextureArray === null)
        $managedTextureArray = cbgu_Array__init_();
    $managedTextureArray.$add3($texture);
    cbgg_Texture_managedTextures.$put1($app, $managedTextureArray);
}
function cbgg_Texture__clinit_() {
    cbgg_Texture_managedTextures = ju_HashMap__init_();
}
var otp_Platform = $rt_classWithoutFields();
function otp_Platform_clone(var$1) {
    var copy = new var$1.constructor();
    for (var field in var$1) {
        if (!var$1.hasOwnProperty(field)) {
            continue;
        }
        copy[field] = var$1[field];
    }
    return copy;
}
function otp_Platform_isInstance($obj, $cls) {
    return $obj !== null && !(typeof $obj.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable($obj.constructor, $cls) ? 1 : 0;
}
function otp_Platform_isAssignable($from, $to) {
    var $supertypes, $i;
    if ($from === $to)
        return 1;
    $supertypes = $from.$meta.supertypes;
    $i = 0;
    while ($i < $supertypes.length) {
        if (otp_Platform_isAssignable($supertypes[$i], $to))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function otp_Platform_getEnumConstants(var$1) {
    var c = '$$enumConstants$$';
    cbg_Application$ApplicationType[c] = cbg_Application$ApplicationType_values;
    cbgg_TextureData$TextureDataType[c] = cbgg_TextureData$TextureDataType_values;
    cgxgbw_WebApplication$AppState[c] = cgxgbw_WebApplication$AppState_values;
    cbgg_Pixmap$DrawType[c] = cbgg_Pixmap$DrawType_values;
    cbgg_Composite[c] = cbgg_Composite_values;
    cgxgbwp_AssetType[c] = cgxgbwp_AssetType_values;
    cbg_Files$FileType[c] = cbg_Files$FileType_values;
    cbgg_Texture$TextureWrap[c] = cbgg_Texture$TextureWrap_values;
    cbgg_Texture$TextureFilter[c] = cbgg_Texture$TextureFilter_values;
    cbgg_Mesh$VertexDataType[c] = cbgg_Mesh$VertexDataType_values;
    cbgg_Pixmap$Blending[c] = cbgg_Pixmap$Blending_values;
    cbgg_Pixmap$Filter[c] = cbgg_Pixmap$Filter_values;
    cbgg_Pixmap$Format[c] = cbgg_Pixmap$Format_values;
    cgxgetf_FreeTypePackTest$FontStyle[c] = cgxgetf_FreeTypePackTest$FontStyle_values;
    cgxgetf_FreeTypePackTest$FontSize[c] = cgxgetf_FreeTypePackTest$FontSize_values;
    cbgggf_FreeTypeFontGenerator$Hinting[c] = cbgggf_FreeTypeFontGenerator$Hinting_values;
    otp_Platform_getEnumConstants = function(cls) {
        if (!cls.hasOwnProperty(c)) {
            return null;
        }
        if (typeof cls[c] === "function") {
            cls[c] = cls[c]();
        }
        return cls[c];
    };
    return otp_Platform_getEnumConstants(var$1);
}
function otp_Platform_launchThread($runnable) {
    $runnable.$run();
}
function otp_Platform_postpone($runnable) {
    otp_Platform_schedule($runnable, 0);
}
function otp_Platform_schedule(var$1, var$2) {
    return setTimeout(function() {
        otp_Platform_launchThread(var$1);
    }, var$2);
}
function otp_Platform_createQueue() {
    return otp_Platform_createQueueJs$js_body$_30();
}
function otp_Platform_stringFromCharCode($charCode) {
    return otj_JSObject_cast$static(String.fromCharCode($charCode));
}
function otp_Platform_isPrimitive($cls) {
    return $cls.$meta.primitive ? 1 : 0;
}
function otp_Platform_getArrayItem($cls) {
    return $cls.$meta.item;
}
function otp_Platform_getName($cls) {
    return $rt_str($cls.$meta.name);
}
function otp_Platform_createQueueJs$js_body$_30() {
    return [];
}
function jnc_CodingErrorAction() {
    jl_Object.call(this);
    this.$name3 = null;
}
var jnc_CodingErrorAction_IGNORE = null;
var jnc_CodingErrorAction_REPLACE = null;
var jnc_CodingErrorAction_REPORT = null;
function jnc_CodingErrorAction_$callClinit() {
    jnc_CodingErrorAction_$callClinit = $rt_eraseClinit(jnc_CodingErrorAction);
    jnc_CodingErrorAction__clinit_();
}
function jnc_CodingErrorAction__init_(var_0) {
    var var_1 = new jnc_CodingErrorAction();
    jnc_CodingErrorAction__init_0(var_1, var_0);
    return var_1;
}
function jnc_CodingErrorAction__init_0($this, $name) {
    jnc_CodingErrorAction_$callClinit();
    jl_Object__init_0($this);
    $this.$name3 = $name;
}
function jnc_CodingErrorAction__clinit_() {
    jnc_CodingErrorAction_IGNORE = jnc_CodingErrorAction__init_($rt_s(306));
    jnc_CodingErrorAction_REPLACE = jnc_CodingErrorAction__init_($rt_s(307));
    jnc_CodingErrorAction_REPORT = jnc_CodingErrorAction__init_($rt_s(308));
}
function jl_Boolean() {
    jl_Object.call(this);
    this.$value0 = 0;
}
var jl_Boolean_TRUE = null;
var jl_Boolean_FALSE = null;
var jl_Boolean_TYPE = null;
function jl_Boolean_$callClinit() {
    jl_Boolean_$callClinit = $rt_eraseClinit(jl_Boolean);
    jl_Boolean__clinit_();
}
function jl_Boolean__init_(var_0) {
    var var_1 = new jl_Boolean();
    jl_Boolean__init_0(var_1, var_0);
    return var_1;
}
function jl_Boolean__init_0($this, $value) {
    jl_Boolean_$callClinit();
    jl_Object__init_0($this);
    $this.$value0 = $value;
}
function jl_Boolean_booleanValue($this) {
    return $this.$value0;
}
function jl_Boolean__clinit_() {
    jl_Boolean_TRUE = jl_Boolean__init_(1);
    jl_Boolean_FALSE = jl_Boolean__init_(0);
    jl_Boolean_TYPE = $rt_cls($rt_booleancls());
}
var jl_IllegalArgumentException = $rt_classWithoutFields(jl_RuntimeException);
function jl_IllegalArgumentException__init_0() {
    var var_0 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_1(var_0);
    return var_0;
}
function jl_IllegalArgumentException__init_(var_0) {
    var var_1 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_2(var_1, var_0);
    return var_1;
}
function jl_IllegalArgumentException__init_1($this) {
    jl_RuntimeException__init_1($this);
}
function jl_IllegalArgumentException__init_2($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function jnc_IllegalCharsetNameException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName = null;
}
function jnc_IllegalCharsetNameException__init_(var_0) {
    var var_1 = new jnc_IllegalCharsetNameException();
    jnc_IllegalCharsetNameException__init_0(var_1, var_0);
    return var_1;
}
function jnc_IllegalCharsetNameException__init_0($this, $charsetName) {
    jl_IllegalArgumentException__init_1($this);
    $this.$charsetName = $charsetName;
}
var ju_NoSuchElementException = $rt_classWithoutFields(jl_RuntimeException);
function ju_NoSuchElementException__init_() {
    var var_0 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_0(var_0);
    return var_0;
}
function ju_NoSuchElementException__init_1(var_0) {
    var var_1 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_2(var_1, var_0);
    return var_1;
}
function ju_NoSuchElementException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function ju_NoSuchElementException__init_2($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function ji_FilterOutputStream() {
    ji_OutputStream.call(this);
    this.$out0 = null;
}
function ji_FilterOutputStream__init_(var_0) {
    var var_1 = new ji_FilterOutputStream();
    ji_FilterOutputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_FilterOutputStream__init_0($this, $out) {
    ji_OutputStream__init_($this);
    $this.$out0 = $out;
}
function ji_PrintStream() {
    var a = this; ji_FilterOutputStream.call(a);
    a.$autoFlush = 0;
    a.$errorState = 0;
    a.$sb = null;
    a.$buffer1 = null;
    a.$charset0 = null;
}
function ji_PrintStream__init_(var_0, var_1) {
    var var_2 = new ji_PrintStream();
    ji_PrintStream__init_0(var_2, var_0, var_1);
    return var_2;
}
function ji_PrintStream__init_0($this, $out, $autoFlush) {
    ji_FilterOutputStream__init_0($this, $out);
    $this.$sb = jl_StringBuilder__init_();
    $this.$buffer1 = $rt_createCharArray(32);
    $this.$autoFlush = $autoFlush;
    jnci_UTF8Charset_$callClinit();
    $this.$charset0 = jnci_UTF8Charset_INSTANCE;
}
function ji_PrintStream_write($this, $b, $off, $len) {
    var $$je;
    if (!ji_PrintStream_check($this))
        return;
    a: {
        try {
            $this.$out0.$write0($b, $off, $len);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
            } else {
                throw $$e;
            }
        }
        $this.$errorState = 1;
    }
}
function ji_PrintStream_check($this) {
    if ($this.$out0 === null)
        $this.$errorState = 1;
    return $this.$errorState ? 0 : 1;
}
function ji_PrintStream_print($this, $s, $begin, $end) {
    var var$4, $src, $destBytes, $dest, var$8, var$9, $encoder, $overflow;
    var$4 = $s.data;
    $src = jn_CharBuffer_wrap($s, $begin, $end - $begin | 0);
    $destBytes = $rt_createByteArray(jl_Math_max(16, jl_Math_min(var$4.length, 1024)));
    $dest = jn_ByteBuffer_wrap($destBytes);
    var$8 = $this.$charset0.$newEncoder();
    jnc_CodingErrorAction_$callClinit();
    var$9 = jnc_CodingErrorAction_REPLACE;
    var$8 = jnc_CharsetEncoder_onMalformedInput(var$8, var$9);
    var$9 = jnc_CodingErrorAction_REPLACE;
    $encoder = jnc_CharsetEncoder_onUnmappableCharacter(var$8, var$9);
    while (true) {
        $overflow = (jnc_CharsetEncoder_encode($encoder, $src, $dest, 1)).$isOverflow();
        $this.$write0($destBytes, 0, jn_Buffer_position($dest));
        jn_ByteBuffer_clear($dest);
        if (!$overflow)
            break;
    }
    while (true) {
        $overflow = (jnc_CharsetEncoder_flush($encoder, $dest)).$isOverflow();
        $this.$write0($destBytes, 0, jn_Buffer_position($dest));
        jn_ByteBuffer_clear($dest);
        if (!$overflow)
            break;
    }
}
function ji_PrintStream_print0($this, $c) {
    $this.$buffer1.data[0] = $c;
    ji_PrintStream_print($this, $this.$buffer1, 0, 1);
}
function ji_PrintStream_print1($this, $s) {
    $this.$sb.$append($s);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println($this, $s) {
    ($this.$sb.$append($s)).$append8(10);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println0($this, $s) {
    ($this.$sb.$append9($s)).$append8(10);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println1($this) {
    $this.$print1(10);
}
function ji_PrintStream_printSB($this) {
    var $buffer;
    $buffer = $this.$sb.$length() <= $this.$buffer1.data.length ? $this.$buffer1 : $rt_createCharArray($this.$sb.$length());
    $this.$sb.$getChars(0, $this.$sb.$length(), $buffer, 0);
    ji_PrintStream_print($this, $buffer, 0, $this.$sb.$length());
    $this.$sb.$setLength(0);
}
var jur_NegativeLookBehind = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_NegativeLookBehind__init_(var_0, var_1) {
    var var_2 = new jur_NegativeLookBehind();
    jur_NegativeLookBehind__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NegativeLookBehind__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_NegativeLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e, $shift;
    $size = $this.$children.$size();
    $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children.$get($i);
        $shift = $e.$findBack(0, $stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_NegativeLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
var jn_IntBufferImpl = $rt_classWithoutFields(jn_IntBuffer);
function jn_IntBufferImpl__init_($this, $capacity, $position, $limit) {
    jn_IntBuffer__init_($this, $capacity, $position, $limit);
}
function jn_IntBufferImpl_get($this) {
    var var$1;
    if ($this.$position3 >= $this.$limit)
        $rt_throw(jn_BufferUnderflowException__init_());
    var$1 = $this.$position3;
    $this.$position3 = var$1 + 1 | 0;
    return $this.$getElement(var$1);
}
function jn_IntBufferImpl_put($this, $b) {
    var var$2;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($this.$position3 >= $this.$limit)
        $rt_throw(jn_BufferOverflowException__init_());
    var$2 = $this.$position3;
    $this.$position3 = var$2 + 1 | 0;
    $this.$putElement(var$2, $b);
    return $this;
}
function jn_IntBufferImpl_get0($this, $index) {
    if ($index >= 0 && $index < $this.$limit)
        return $this.$getElement($index);
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(309))).$append0($index)).$append($rt_s(51))).$append0($this.$limit)).$append($rt_s(289))).$toString()));
}
function jn_IntBufferImpl_put0($this, $index, $b) {
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($index >= 0 && $index < $this.$limit) {
        $this.$putElement($index, $b);
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(309))).$append0($index)).$append($rt_s(51))).$append0($this.$limit)).$append($rt_s(289))).$toString()));
}
function jn_IntBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_IntBufferOverByteBuffer() {
    var a = this; jn_IntBufferImpl.call(a);
    a.$byteByffer0 = null;
    a.$readOnly1 = 0;
    a.$start1 = 0;
}
function jn_IntBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_IntBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start1 = $start;
    $this.$byteByffer0 = $byteBuffer;
    $this.$readOnly1 = $readOnly;
}
function jn_IntBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly1;
}
var jn_IntBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_IntBufferOverByteBuffer);
function jn_IntBufferOverByteBufferLittleEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_IntBufferOverByteBufferLittleEndian();
    jn_IntBufferOverByteBufferLittleEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_IntBufferOverByteBufferLittleEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_IntBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_IntBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2, var$3, var$4;
    var$2 = $this.$byteByffer0.$array0.data;
    var$3 = $this.$start1;
    var$4 = $index * 4 | 0;
    return var$2[var$3 + var$4 | 0] & 255 | ($this.$byteByffer0.$array0.data[($this.$start1 + var$4 | 0) + 1 | 0] & 255) << 8 | ($this.$byteByffer0.$array0.data[($this.$start1 + var$4 | 0) + 2 | 0] & 255) << 16 | ($this.$byteByffer0.$array0.data[($this.$start1 + var$4 | 0) + 3 | 0] & 255) << 24;
}
function jn_IntBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer0.$array0.data;
    var$4 = $this.$start1;
    var$5 = $index * 4 | 0;
    var$3[var$4 + var$5 | 0] = $value << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start1 + var$5 | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start1 + var$5 | 0) + 2 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start1 + var$5 | 0) + 3 | 0] = $value >> 24 << 24 >> 24;
}
var jur_BackReferenceSet = $rt_classWithoutFields(jur_CIBackReferenceSet);
function jur_BackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_BackReferenceSet();
    jur_BackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_BackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter);
}
function jur_BackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $shift;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $shift = !($testString.$toString()).$startsWith0($group, $stringIndex) ? (-1) : $group.$length();
        if ($shift < 0)
            return (-1);
        $matchResult.$setConsumed($this.$consCounter, $shift);
        return $this.$next.$matches($stringIndex + $shift | 0, $testString, $matchResult);
    }
    return (-1);
}
function jur_BackReferenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $group, $strLength, $testStr, var$7;
    $group = $this.$getString($matchResult);
    $strLength = $matchResult.$getLeftBound();
    if ($group !== null && ($strIndex + $group.$length() | 0) <= $strLength) {
        $testStr = $testString.$toString();
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            var$7 = $testStr.$indexOf0($group, $strIndex);
            if (var$7 < 0)
                return (-1);
            if ($this.$next.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = var$7 + 1 | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_BackReferenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $group, $testStr, var$7;
    $group = $this.$getString($matchResult);
    if ($group === null)
        return (-1);
    $testStr = $testString.$toString();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf0($group, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$next.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_BackReferenceSet_first($this, $set) {
    return 1;
}
function jur_DotQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$lt = null;
}
function jur_DotQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_DotQuantifierSet();
    jur_DotQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_DotQuantifierSet__init_0($this, $innerSet, $next, $type, $lt) {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$lt = $lt;
}
function jur_DotQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startSearch;
    $strLength = $matchResult.$getRightBound();
    $startSearch = jur_DotQuantifierSet_findLineTerminator($this, $stringIndex, $strLength, $testString);
    if ($startSearch >= 0)
        $strLength = $startSearch;
    if ($strLength > $stringIndex)
        return $this.$next.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_DotQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $res, $nextSearch, var$7, $leftBound;
    $strLength = $matchResult.$getRightBound();
    $res = $this.$next.$find($stringIndex, $testString, $matchResult);
    if ($res < 0)
        return (-1);
    $nextSearch = jur_DotQuantifierSet_findLineTerminator($this, $res, $strLength, $testString);
    if ($nextSearch >= 0)
        $strLength = $nextSearch;
    var$7 = $this.$next.$findBack($res, $strLength, $testString, $matchResult);
    var$7 = jl_Math_max($res, var$7);
    $leftBound = var$7 > 0 ? jur_DotQuantifierSet_findBackLineTerminator($this, $stringIndex, var$7 - 1 | 0, $testString) : var$7 ? (-1) : 0;
    if ($leftBound >= $stringIndex)
        $stringIndex = $leftBound >= var$7 ? $leftBound : $leftBound + 1 | 0;
    return $stringIndex;
}
function jur_DotQuantifierSet_findLineTerminator($this, $i, $to, $testString) {
    while (true) {
        if ($i >= $to)
            return (-1);
        if ($this.$lt.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function jur_DotQuantifierSet_findBackLineTerminator($this, $from, $i, $testString) {
    while (true) {
        if ($i < $from)
            return (-1);
        if ($this.$lt.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + (-1) | 0;
    }
    return $i;
}
var jn_DoubleBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_DoubleBuffer__init_($this, $capacity, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    $this.$position3 = $position;
    $this.$limit = $limit;
}
function jn_DoubleBuffer_put($this, $src) {
    var $length, $pos, $offset, $i, var$6, var$7;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src))
        $rt_throw(jn_BufferOverflowException__init_());
    $length = jn_Buffer_remaining($src);
    $pos = $this.$position3;
    $offset = $src.$position3;
    $i = 0;
    while ($i < $length) {
        var$6 = $pos + 1 | 0;
        var$7 = $offset + 1 | 0;
        $this.$putElement1($pos, $src.$getElement1($offset));
        $i = $i + 1 | 0;
        $pos = var$6;
        $offset = var$7;
    }
    $this.$position3 = $this.$position3 + $length | 0;
    return $this;
}
var jur_AbstractCharClass$LazyJavaJavaIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var otcit_FloatAnalyzer = $rt_classWithoutFields();
var otcit_FloatAnalyzer_mantissa10Table = null;
var otcit_FloatAnalyzer_exp10Table = null;
function otcit_FloatAnalyzer_$callClinit() {
    otcit_FloatAnalyzer_$callClinit = $rt_eraseClinit(otcit_FloatAnalyzer);
    otcit_FloatAnalyzer__clinit_();
}
function otcit_FloatAnalyzer_analyze($d, $result) {
    var $bits, $mantissa, $exponent, $errorShift, var$7, $decExponent, $binExponentCorrection, $mantissaShift, var$11, $decMantissa, var$13, $error, $upError, $downError, $lowerPos, $upperPos;
    otcit_FloatAnalyzer_$callClinit();
    $bits = $rt_floatToIntBits($d);
    $result.$sign = !($bits & (-2147483648)) ? 0 : 1;
    $mantissa = $bits & 8388607;
    $exponent = $bits >> 23 & 255;
    if (!$mantissa && !$exponent) {
        $result.$mantissa = 0;
        $result.$exponent = 0;
        return;
    }
    $errorShift = 0;
    if ($exponent)
        var$7 = $mantissa | 8388608;
    else {
        var$7 = $mantissa << 1;
        while (Long_eq(Long_and(Long_fromInt(var$7), Long_fromInt(8388608)), Long_ZERO)) {
            var$7 = var$7 << 1;
            $exponent = $exponent + (-1) | 0;
            $errorShift = $errorShift + 1 | 0;
        }
    }
    $decExponent = ju_Arrays_binarySearch(otcit_FloatAnalyzer_exp10Table, $exponent);
    if ($decExponent < 0)
        $decExponent = ( -$decExponent | 0) - 2 | 0;
    $binExponentCorrection = $exponent - otcit_FloatAnalyzer_exp10Table.data[$decExponent] | 0;
    $mantissaShift = 9 + $binExponentCorrection | 0;
    var$11 = Long_fromInt(var$7);
    $decMantissa = Long_lo(Long_shru(Long_mul(var$11, Long_fromInt(otcit_FloatAnalyzer_mantissa10Table.data[$decExponent])), 32 - $mantissaShift | 0));
    if ($decMantissa >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        var$13 = $exponent - otcit_FloatAnalyzer_exp10Table.data[$decExponent] | 0;
        $mantissaShift = 9 + var$13 | 0;
        $decMantissa = Long_lo(Long_shru(Long_mul(var$11, Long_fromInt(otcit_FloatAnalyzer_mantissa10Table.data[$decExponent])), 32 - $mantissaShift | 0));
    }
    var$13 = (31 - $mantissaShift | 0) - $errorShift | 0;
    $error = var$13 >= 0 ? otcit_FloatAnalyzer_mantissa10Table.data[$decExponent] >>> var$13 : otcit_FloatAnalyzer_mantissa10Table.data[$decExponent] << ( -var$13 | 0);
    $upError = ($error + 1 | 0) >> 1;
    $downError = $error >> 1;
    if (var$7 == 4194304)
        $downError = $downError >> 2;
    $lowerPos = otcit_FloatAnalyzer_findLowerDistanceToZero($decMantissa, $downError);
    $upperPos = otcit_FloatAnalyzer_findUpperDistanceToZero($decMantissa, $upError);
    var$7 = $rt_compare($lowerPos, $upperPos);
    var$7 = var$7 > 0 ? $rt_imul($decMantissa / $lowerPos | 0, $lowerPos) : var$7 < 0 ? $rt_imul($decMantissa / $upperPos | 0, $upperPos) + $upperPos | 0 : $rt_imul(($decMantissa + ($upperPos / 2 | 0) | 0) / $upperPos | 0, $upperPos);
    if (var$7 >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        var$7 = var$7 / 10 | 0;
    } else if (var$7 < 100000000) {
        $decExponent = $decExponent + (-1) | 0;
        var$7 = var$7 * 10 | 0;
    }
    $result.$mantissa = var$7;
    $result.$exponent = $decExponent - 50 | 0;
}
function otcit_FloatAnalyzer_findLowerDistanceToZero($mantissa, $error) {
    var $pos, $mantissaRight;
    otcit_FloatAnalyzer_$callClinit();
    $pos = 10;
    while ($pos <= $error) {
        $pos = $pos * 10 | 0;
    }
    $mantissaRight = $mantissa % $pos | 0;
    if ($mantissaRight >= ($error / 2 | 0))
        $pos = $pos / 10 | 0;
    return $pos;
}
function otcit_FloatAnalyzer_findUpperDistanceToZero($mantissa, $error) {
    var $pos, $mantissaRight;
    otcit_FloatAnalyzer_$callClinit();
    $pos = 10;
    while ($pos <= $error) {
        $pos = $pos * 10 | 0;
    }
    $mantissaRight = $mantissa % $pos | 0;
    if (($pos - $mantissaRight | 0) > ($error / 2 | 0))
        $pos = $pos / 10 | 0;
    return $pos;
}
function otcit_FloatAnalyzer__clinit_() {
    var $decMantissaOne, $exponent, $i, var$4, var$5, var$6, $remainder, $maxMantissa, $shift, var$10, $shiftedOffPart;
    otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArray(100);
    otcit_FloatAnalyzer_exp10Table = $rt_createIntArray(100);
    $decMantissaOne = 2000000000;
    $exponent = 127;
    $i = 0;
    var$4 = $decMantissaOne;
    while ($i < 50) {
        var$5 = otcit_FloatAnalyzer_mantissa10Table.data;
        var$6 = $i + 50 | 0;
        var$5[var$6] = $rt_udiv(var$4, 20);
        otcit_FloatAnalyzer_exp10Table.data[var$6] = $exponent;
        var$6 = $rt_udiv(var$4, 10);
        $remainder = $rt_umod(var$6, 10);
        while (var$6 <= $decMantissaOne && !(var$6 & (-2147483648))) {
            var$6 = var$6 << 1;
            $exponent = $exponent + 1 | 0;
            $remainder = $remainder << 1;
        }
        var$4 = var$6 + ($remainder / 10 | 0) | 0;
        $i = $i + 1 | 0;
    }
    $maxMantissa = 214748364;
    var$4 = 127;
    $i = 0;
    while ($i < 50) {
        $shift = 0;
        var$10 = $decMantissaOne;
        while (var$10 > $maxMantissa) {
            var$10 = var$10 >> 1;
            $shift = $shift + 1 | 0;
            var$4 = var$4 + (-1) | 0;
        }
        var$10 = var$10 * 10 | 0;
        if ($shift <= 0)
            $decMantissaOne = var$10;
        else {
            $shiftedOffPart = Long_fromInt($decMantissaOne & ((1 << $shift) - 1 | 0));
            $decMantissaOne = Long_lo(Long_add(Long_fromInt(var$10), Long_shr(Long_mul($shiftedOffPart, Long_fromInt(10)), $shift)));
        }
        var$5 = otcit_FloatAnalyzer_mantissa10Table.data;
        var$10 = (50 - $i | 0) - 1 | 0;
        var$5[var$10] = $rt_udiv($decMantissaOne, 20);
        otcit_FloatAnalyzer_exp10Table.data[var$10] = var$4;
        $i = $i + 1 | 0;
    }
}
function cbgg_Composite() {
    jl_Enum.call(this);
    this.$value1 = null;
}
var cbgg_Composite_COPY = null;
var cbgg_Composite_DESTINATION_ATOP = null;
var cbgg_Composite_DESTINATION_IN = null;
var cbgg_Composite_DESTINATION_OUT = null;
var cbgg_Composite_DESTINATION_OVER = null;
var cbgg_Composite_LIGHTER = null;
var cbgg_Composite_SOURCE_ATOP = null;
var cbgg_Composite_SOURCE_IN = null;
var cbgg_Composite_SOURCE_OUT = null;
var cbgg_Composite_SOURCE_OVER = null;
var cbgg_Composite_XOR = null;
var cbgg_Composite_$VALUES = null;
function cbgg_Composite_$callClinit() {
    cbgg_Composite_$callClinit = $rt_eraseClinit(cbgg_Composite);
    cbgg_Composite__clinit_();
}
function cbgg_Composite__init_(var_0, var_1, var_2) {
    var var_3 = new cbgg_Composite();
    cbgg_Composite__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Composite_values() {
    cbgg_Composite_$callClinit();
    return cbgg_Composite_$VALUES.$clone();
}
function cbgg_Composite__init_0($this, var$1, var$2, $value) {
    cbgg_Composite_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$value1 = $value;
}
function cbgg_Composite_getValue($this) {
    return $this.$value1;
}
function cbgg_Composite__clinit_() {
    cbgg_Composite_COPY = cbgg_Composite__init_($rt_s(310), 0, $rt_s(311));
    cbgg_Composite_DESTINATION_ATOP = cbgg_Composite__init_($rt_s(312), 1, $rt_s(313));
    cbgg_Composite_DESTINATION_IN = cbgg_Composite__init_($rt_s(314), 2, $rt_s(315));
    cbgg_Composite_DESTINATION_OUT = cbgg_Composite__init_($rt_s(316), 3, $rt_s(317));
    cbgg_Composite_DESTINATION_OVER = cbgg_Composite__init_($rt_s(318), 4, $rt_s(319));
    cbgg_Composite_LIGHTER = cbgg_Composite__init_($rt_s(320), 5, $rt_s(321));
    cbgg_Composite_SOURCE_ATOP = cbgg_Composite__init_($rt_s(322), 6, $rt_s(323));
    cbgg_Composite_SOURCE_IN = cbgg_Composite__init_($rt_s(324), 7, $rt_s(325));
    cbgg_Composite_SOURCE_OUT = cbgg_Composite__init_($rt_s(326), 8, $rt_s(327));
    cbgg_Composite_SOURCE_OVER = cbgg_Composite__init_($rt_s(328), 9, $rt_s(329));
    cbgg_Composite_XOR = cbgg_Composite__init_($rt_s(330), 10, $rt_s(331));
    cbgg_Composite_$VALUES = $rt_createArrayFromData(cbgg_Composite, [cbgg_Composite_COPY, cbgg_Composite_DESTINATION_ATOP, cbgg_Composite_DESTINATION_IN, cbgg_Composite_DESTINATION_OUT, cbgg_Composite_DESTINATION_OVER, cbgg_Composite_LIGHTER, cbgg_Composite_SOURCE_ATOP, cbgg_Composite_SOURCE_IN, cbgg_Composite_SOURCE_OUT, cbgg_Composite_SOURCE_OVER, cbgg_Composite_XOR]);
}
function cgxgbwp_AssetType() {
    jl_Enum.call(this);
    this.$code = null;
}
var cgxgbwp_AssetType_Image = null;
var cgxgbwp_AssetType_Audio = null;
var cgxgbwp_AssetType_Text = null;
var cgxgbwp_AssetType_Binary = null;
var cgxgbwp_AssetType_Directory = null;
var cgxgbwp_AssetType_$VALUES = null;
function cgxgbwp_AssetType_$callClinit() {
    cgxgbwp_AssetType_$callClinit = $rt_eraseClinit(cgxgbwp_AssetType);
    cgxgbwp_AssetType__clinit_();
}
function cgxgbwp_AssetType__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgbwp_AssetType();
    cgxgbwp_AssetType__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgbwp_AssetType_values() {
    cgxgbwp_AssetType_$callClinit();
    return cgxgbwp_AssetType_$VALUES.$clone();
}
function cgxgbwp_AssetType__init_0($this, var$1, var$2, $code) {
    cgxgbwp_AssetType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$code = $code;
}
function cgxgbwp_AssetType__clinit_() {
    cgxgbwp_AssetType_Image = cgxgbwp_AssetType__init_($rt_s(332), 0, $rt_s(333));
    cgxgbwp_AssetType_Audio = cgxgbwp_AssetType__init_($rt_s(334), 1, $rt_s(335));
    cgxgbwp_AssetType_Text = cgxgbwp_AssetType__init_($rt_s(336), 2, $rt_s(337));
    cgxgbwp_AssetType_Binary = cgxgbwp_AssetType__init_($rt_s(338), 3, $rt_s(339));
    cgxgbwp_AssetType_Directory = cgxgbwp_AssetType__init_($rt_s(340), 4, $rt_s(122));
    cgxgbwp_AssetType_$VALUES = $rt_createArrayFromData(cgxgbwp_AssetType, [cgxgbwp_AssetType_Image, cgxgbwp_AssetType_Audio, cgxgbwp_AssetType_Text, cgxgbwp_AssetType_Binary, cgxgbwp_AssetType_Directory]);
}
function cbgg_Color() {
    var a = this; jl_Object.call(a);
    a.$r0 = 0.0;
    a.$g0 = 0.0;
    a.$b0 = 0.0;
    a.$a0 = 0.0;
}
var cbgg_Color_WHITE = null;
var cbgg_Color_LIGHT_GRAY = null;
var cbgg_Color_GRAY = null;
var cbgg_Color_DARK_GRAY = null;
var cbgg_Color_BLACK = null;
var cbgg_Color_WHITE_FLOAT_BITS = 0.0;
var cbgg_Color_CLEAR = null;
var cbgg_Color_BLUE = null;
var cbgg_Color_NAVY = null;
var cbgg_Color_ROYAL = null;
var cbgg_Color_SLATE = null;
var cbgg_Color_SKY = null;
var cbgg_Color_CYAN = null;
var cbgg_Color_TEAL = null;
var cbgg_Color_GREEN = null;
var cbgg_Color_CHARTREUSE = null;
var cbgg_Color_LIME = null;
var cbgg_Color_FOREST = null;
var cbgg_Color_OLIVE = null;
var cbgg_Color_YELLOW = null;
var cbgg_Color_GOLD = null;
var cbgg_Color_GOLDENROD = null;
var cbgg_Color_ORANGE = null;
var cbgg_Color_BROWN = null;
var cbgg_Color_TAN = null;
var cbgg_Color_FIREBRICK = null;
var cbgg_Color_RED = null;
var cbgg_Color_SCARLET = null;
var cbgg_Color_CORAL = null;
var cbgg_Color_SALMON = null;
var cbgg_Color_PINK = null;
var cbgg_Color_MAGENTA = null;
var cbgg_Color_PURPLE = null;
var cbgg_Color_VIOLET = null;
var cbgg_Color_MAROON = null;
function cbgg_Color_$callClinit() {
    cbgg_Color_$callClinit = $rt_eraseClinit(cbgg_Color);
    cbgg_Color__clinit_();
}
function cbgg_Color__init_() {
    var var_0 = new cbgg_Color();
    cbgg_Color__init_0(var_0);
    return var_0;
}
function cbgg_Color__init_1(var_0) {
    var var_1 = new cbgg_Color();
    cbgg_Color__init_2(var_1, var_0);
    return var_1;
}
function cbgg_Color__init_3(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgg_Color();
    cbgg_Color__init_4(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgg_Color__init_5(var_0) {
    var var_1 = new cbgg_Color();
    cbgg_Color__init_6(var_1, var_0);
    return var_1;
}
function cbgg_Color__init_0($this) {
    cbgg_Color_$callClinit();
    jl_Object__init_0($this);
}
function cbgg_Color__init_2($this, $rgba8888) {
    cbgg_Color_$callClinit();
    jl_Object__init_0($this);
    cbgg_Color_rgba8888ToColor($this, $rgba8888);
}
function cbgg_Color__init_4($this, $r, $g, $b, $a) {
    cbgg_Color_$callClinit();
    jl_Object__init_0($this);
    $this.$r0 = $r;
    $this.$g0 = $g;
    $this.$b0 = $b;
    $this.$a0 = $a;
    $this.$clamp();
}
function cbgg_Color__init_6($this, $color) {
    cbgg_Color_$callClinit();
    jl_Object__init_0($this);
    $this.$set1($color);
}
function cbgg_Color_set($this, $color) {
    $this.$r0 = $color.$r0;
    $this.$g0 = $color.$g0;
    $this.$b0 = $color.$b0;
    $this.$a0 = $color.$a0;
    return $this;
}
function cbgg_Color_mul($this, $color) {
    $this.$r0 = $this.$r0 * $color.$r0;
    $this.$g0 = $this.$g0 * $color.$g0;
    $this.$b0 = $this.$b0 * $color.$b0;
    $this.$a0 = $this.$a0 * $color.$a0;
    return $this.$clamp();
}
function cbgg_Color_mul0($this, $value) {
    $this.$r0 = $this.$r0 * $value;
    $this.$g0 = $this.$g0 * $value;
    $this.$b0 = $this.$b0 * $value;
    $this.$a0 = $this.$a0 * $value;
    return $this.$clamp();
}
function cbgg_Color_add($this, $color) {
    $this.$r0 = $this.$r0 + $color.$r0;
    $this.$g0 = $this.$g0 + $color.$g0;
    $this.$b0 = $this.$b0 + $color.$b0;
    $this.$a0 = $this.$a0 + $color.$a0;
    return $this.$clamp();
}
function cbgg_Color_sub($this, $color) {
    $this.$r0 = $this.$r0 - $color.$r0;
    $this.$g0 = $this.$g0 - $color.$g0;
    $this.$b0 = $this.$b0 - $color.$b0;
    $this.$a0 = $this.$a0 - $color.$a0;
    return $this.$clamp();
}
function cbgg_Color_clamp($this) {
    if ($this.$r0 < 0.0)
        $this.$r0 = 0.0;
    else if ($this.$r0 > 1.0)
        $this.$r0 = 1.0;
    if ($this.$g0 < 0.0)
        $this.$g0 = 0.0;
    else if ($this.$g0 > 1.0)
        $this.$g0 = 1.0;
    if ($this.$b0 < 0.0)
        $this.$b0 = 0.0;
    else if ($this.$b0 > 1.0)
        $this.$b0 = 1.0;
    if ($this.$a0 < 0.0)
        $this.$a0 = 0.0;
    else if ($this.$a0 > 1.0)
        $this.$a0 = 1.0;
    return $this;
}
function cbgg_Color_set0($this, $r, $g, $b, $a) {
    $this.$r0 = $r;
    $this.$g0 = $g;
    $this.$b0 = $b;
    $this.$a0 = $a;
    return $this.$clamp();
}
function cbgg_Color_set1($this, $rgba) {
    cbgg_Color_rgba8888ToColor($this, $rgba);
    return $this;
}
function cbgg_Color_add0($this, $r, $g, $b, $a) {
    $this.$r0 = $this.$r0 + $r;
    $this.$g0 = $this.$g0 + $g;
    $this.$b0 = $this.$b0 + $b;
    $this.$a0 = $this.$a0 + $a;
    return $this.$clamp();
}
function cbgg_Color_sub0($this, $r, $g, $b, $a) {
    $this.$r0 = $this.$r0 - $r;
    $this.$g0 = $this.$g0 - $g;
    $this.$b0 = $this.$b0 - $b;
    $this.$a0 = $this.$a0 - $a;
    return $this.$clamp();
}
function cbgg_Color_mul1($this, $r, $g, $b, $a) {
    $this.$r0 = $this.$r0 * $r;
    $this.$g0 = $this.$g0 * $g;
    $this.$b0 = $this.$b0 * $b;
    $this.$a0 = $this.$a0 * $a;
    return $this.$clamp();
}
function cbgg_Color_lerp($this, $target, $t) {
    $this.$r0 = $this.$r0 + $t * ($target.$r0 - $this.$r0);
    $this.$g0 = $this.$g0 + $t * ($target.$g0 - $this.$g0);
    $this.$b0 = $this.$b0 + $t * ($target.$b0 - $this.$b0);
    $this.$a0 = $this.$a0 + $t * ($target.$a0 - $this.$a0);
    return $this.$clamp();
}
function cbgg_Color_lerp0($this, $r, $g, $b, $a, $t) {
    $this.$r0 = $this.$r0 + $t * ($r - $this.$r0);
    $this.$g0 = $this.$g0 + $t * ($g - $this.$g0);
    $this.$b0 = $this.$b0 + $t * ($b - $this.$b0);
    $this.$a0 = $this.$a0 + $t * ($a - $this.$a0);
    return $this.$clamp();
}
function cbgg_Color_premultiplyAlpha($this) {
    $this.$r0 = $this.$r0 * $this.$a0;
    $this.$g0 = $this.$g0 * $this.$a0;
    $this.$b0 = $this.$b0 * $this.$a0;
    return $this;
}
function cbgg_Color_equals($this, $o) {
    var $color;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $color = $o;
        return $this.$toIntBits() != $color.$toIntBits() ? 0 : 1;
    }
    return 0;
}
function cbgg_Color_hashCode($this) {
    var $result, var$2;
    $result = $this.$r0 === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$r0);
    var$2 = (31 * $result | 0) + ($this.$g0 === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$g0)) | 0;
    var$2 = (31 * var$2 | 0) + ($this.$b0 === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$b0)) | 0;
    var$2 = (31 * var$2 | 0) + ($this.$a0 === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$a0)) | 0;
    return var$2;
}
function cbgg_Color_toFloatBits($this) {
    var $color;
    $color = (255.0 * $this.$a0 | 0) << 24 | (255.0 * $this.$b0 | 0) << 16 | (255.0 * $this.$g0 | 0) << 8 | 255.0 * $this.$r0 | 0;
    return cbgu_NumberUtils_intToFloatColor($color);
}
function cbgg_Color_toIntBits($this) {
    return (255.0 * $this.$a0 | 0) << 24 | (255.0 * $this.$b0 | 0) << 16 | (255.0 * $this.$g0 | 0) << 8 | 255.0 * $this.$r0 | 0;
}
function cbgg_Color_toString($this) {
    var var$1, $value;
    var$1 = (255.0 * $this.$r0 | 0) << 24 | (255.0 * $this.$g0 | 0) << 16 | (255.0 * $this.$b0 | 0) << 8 | 255.0 * $this.$a0 | 0;
    $value = jl_Integer_toHexString(var$1);
    while ($value.$length() < 8) {
        $value = (((jl_StringBuilder__init_()).$append($rt_s(298))).$append($value)).$toString();
    }
    return $value;
}
function cbgg_Color_valueOf($hex) {
    cbgg_Color_$callClinit();
    return cbgg_Color_valueOf0($hex, cbgg_Color__init_());
}
function cbgg_Color_valueOf0($hex, $color) {
    cbgg_Color_$callClinit();
    if ($hex.$charAt(0) == 35)
        $hex = $hex.$substring0(1);
    $color.$r0 = jl_Integer_parseInt($hex.$substring(0, 2), 16) / 255.0;
    $color.$g0 = jl_Integer_parseInt($hex.$substring(2, 4), 16) / 255.0;
    $color.$b0 = jl_Integer_parseInt($hex.$substring(4, 6), 16) / 255.0;
    $color.$a0 = $hex.$length() != 8 ? 1.0 : jl_Integer_parseInt($hex.$substring(6, 8), 16) / 255.0;
    return $color;
}
function cbgg_Color_toFloatBits0($r, $g, $b, $a) {
    var $color, $floatColor;
    cbgg_Color_$callClinit();
    $color = $a << 24 | $b << 16 | $g << 8 | $r;
    $floatColor = cbgu_NumberUtils_intToFloatColor($color);
    return $floatColor;
}
function cbgg_Color_toFloatBits1($r, $g, $b, $a) {
    var $color;
    cbgg_Color_$callClinit();
    $color = (255.0 * $a | 0) << 24 | (255.0 * $b | 0) << 16 | (255.0 * $g | 0) << 8 | 255.0 * $r | 0;
    return cbgu_NumberUtils_intToFloatColor($color);
}
function cbgg_Color_toIntBits0($r, $g, $b, $a) {
    cbgg_Color_$callClinit();
    return $a << 24 | $b << 16 | $g << 8 | $r;
}
function cbgg_Color_alpha($alpha) {
    cbgg_Color_$callClinit();
    return $alpha * 255.0 | 0;
}
function cbgg_Color_luminanceAlpha($luminance, $alpha) {
    cbgg_Color_$callClinit();
    return ($luminance * 255.0 | 0) << 8 | $alpha * 255.0 | 0;
}
function cbgg_Color_rgb565($r, $g, $b) {
    cbgg_Color_$callClinit();
    return ($r * 31.0 | 0) << 11 | ($g * 63.0 | 0) << 5 | $b * 31.0 | 0;
}
function cbgg_Color_rgba4444($r, $g, $b, $a) {
    cbgg_Color_$callClinit();
    return ($r * 15.0 | 0) << 12 | ($g * 15.0 | 0) << 8 | ($b * 15.0 | 0) << 4 | $a * 15.0 | 0;
}
function cbgg_Color_rgb888($r, $g, $b) {
    cbgg_Color_$callClinit();
    return ($r * 255.0 | 0) << 16 | ($g * 255.0 | 0) << 8 | $b * 255.0 | 0;
}
function cbgg_Color_rgba8888($r, $g, $b, $a) {
    cbgg_Color_$callClinit();
    return ($r * 255.0 | 0) << 24 | ($g * 255.0 | 0) << 16 | ($b * 255.0 | 0) << 8 | $a * 255.0 | 0;
}
function cbgg_Color_argb8888($a, $r, $g, $b) {
    cbgg_Color_$callClinit();
    return ($a * 255.0 | 0) << 24 | ($r * 255.0 | 0) << 16 | ($g * 255.0 | 0) << 8 | $b * 255.0 | 0;
}
function cbgg_Color_rgb5650($color) {
    cbgg_Color_$callClinit();
    return ($color.$r0 * 31.0 | 0) << 11 | ($color.$g0 * 63.0 | 0) << 5 | $color.$b0 * 31.0 | 0;
}
function cbgg_Color_rgba44440($color) {
    cbgg_Color_$callClinit();
    return ($color.$r0 * 15.0 | 0) << 12 | ($color.$g0 * 15.0 | 0) << 8 | ($color.$b0 * 15.0 | 0) << 4 | $color.$a0 * 15.0 | 0;
}
function cbgg_Color_rgb8880($color) {
    cbgg_Color_$callClinit();
    return ($color.$r0 * 255.0 | 0) << 16 | ($color.$g0 * 255.0 | 0) << 8 | $color.$b0 * 255.0 | 0;
}
function cbgg_Color_rgba88880($color) {
    cbgg_Color_$callClinit();
    return ($color.$r0 * 255.0 | 0) << 24 | ($color.$g0 * 255.0 | 0) << 16 | ($color.$b0 * 255.0 | 0) << 8 | $color.$a0 * 255.0 | 0;
}
function cbgg_Color_argb88880($color) {
    cbgg_Color_$callClinit();
    return ($color.$a0 * 255.0 | 0) << 24 | ($color.$r0 * 255.0 | 0) << 16 | ($color.$g0 * 255.0 | 0) << 8 | $color.$b0 * 255.0 | 0;
}
function cbgg_Color_rgb565ToColor($color, $value) {
    cbgg_Color_$callClinit();
    $color.$r0 = (($value & 63488) >>> 11) / 31.0;
    $color.$g0 = (($value & 2016) >>> 5) / 63.0;
    $color.$b0 = (($value & 31) >>> 0) / 31.0;
}
function cbgg_Color_rgba4444ToColor($color, $value) {
    cbgg_Color_$callClinit();
    $color.$r0 = (($value & 61440) >>> 12) / 15.0;
    $color.$g0 = (($value & 3840) >>> 8) / 15.0;
    $color.$b0 = (($value & 240) >>> 4) / 15.0;
    $color.$a0 = ($value & 15) / 15.0;
}
function cbgg_Color_rgb888ToColor($color, $value) {
    cbgg_Color_$callClinit();
    $color.$r0 = (($value & 16711680) >>> 16) / 255.0;
    $color.$g0 = (($value & 65280) >>> 8) / 255.0;
    $color.$b0 = ($value & 255) / 255.0;
}
function cbgg_Color_rgba8888ToColor($color, $value) {
    cbgg_Color_$callClinit();
    $color.$r0 = (($value & (-16777216)) >>> 24) / 255.0;
    $color.$g0 = (($value & 16711680) >>> 16) / 255.0;
    $color.$b0 = (($value & 65280) >>> 8) / 255.0;
    $color.$a0 = ($value & 255) / 255.0;
}
function cbgg_Color_argb8888ToColor($color, $value) {
    cbgg_Color_$callClinit();
    $color.$a0 = (($value & (-16777216)) >>> 24) / 255.0;
    $color.$r0 = (($value & 16711680) >>> 16) / 255.0;
    $color.$g0 = (($value & 65280) >>> 8) / 255.0;
    $color.$b0 = ($value & 255) / 255.0;
}
function cbgg_Color_abgr8888ToColor($color, $value) {
    var $c;
    cbgg_Color_$callClinit();
    $c = cbgu_NumberUtils_floatToIntColor($value);
    $color.$a0 = (($c & (-16777216)) >>> 24) / 255.0;
    $color.$b0 = (($c & 16711680) >>> 16) / 255.0;
    $color.$g0 = (($c & 65280) >>> 8) / 255.0;
    $color.$r0 = ($c & 255) / 255.0;
}
function cbgg_Color_fromHsv($this, $h, $s, $v) {
    var $x, $i, $f, $p, $q, $t;
    a: {
        $x = ($h / 60.0 + 6.0) % 6.0;
        $i = $x | 0;
        $f = $x - $i;
        $p = $v * (1.0 - $s);
        $q = $v * (1.0 - $s * $f);
        $t = $v * (1.0 - $s * (1.0 - $f));
        switch ($i) {
            case 0:
                break;
            case 1:
                $this.$r0 = $q;
                $this.$g0 = $v;
                $this.$b0 = $p;
                break a;
            case 2:
                $this.$r0 = $p;
                $this.$g0 = $v;
                $this.$b0 = $t;
                break a;
            case 3:
                $this.$r0 = $p;
                $this.$g0 = $q;
                $this.$b0 = $v;
                break a;
            case 4:
                $this.$r0 = $t;
                $this.$g0 = $p;
                $this.$b0 = $v;
                break a;
            default:
                $this.$r0 = $v;
                $this.$g0 = $p;
                $this.$b0 = $q;
                break a;
        }
        $this.$r0 = $v;
        $this.$g0 = $t;
        $this.$b0 = $p;
    }
    return $this.$clamp();
}
function cbgg_Color_fromHsv0($this, $hsv) {
    var var$2;
    var$2 = $hsv.data;
    return $this.$fromHsv(var$2[0], var$2[1], var$2[2]);
}
function cbgg_Color_toHsv($this, $hsv) {
    var $max, $min, $range;
    $max = jl_Math_max0(jl_Math_max0($this.$r0, $this.$g0), $this.$b0);
    $min = jl_Math_min0(jl_Math_min0($this.$r0, $this.$g0), $this.$b0);
    $range = $max - $min;
    if ($range === 0.0)
        $hsv.data[0] = 0.0;
    else if ($max === $this.$r0)
        $hsv.data[0] = (60.0 * ($this.$g0 - $this.$b0) / $range + 360.0) % 360.0;
    else if ($max !== $this.$g0)
        $hsv.data[0] = 60.0 * ($this.$r0 - $this.$g0) / $range + 240.0;
    else
        $hsv.data[0] = 60.0 * ($this.$b0 - $this.$r0) / $range + 120.0;
    if ($max <= 0.0)
        $hsv.data[1] = 0.0;
    else
        $hsv.data[1] = 1.0 - $min / $max;
    $hsv.data[2] = $max;
    return $hsv;
}
function cbgg_Color_cpy($this) {
    return cbgg_Color__init_5($this);
}
function cbgg_Color__clinit_() {
    cbgg_Color_WHITE = cbgg_Color__init_3(1.0, 1.0, 1.0, 1.0);
    cbgg_Color_LIGHT_GRAY = cbgg_Color__init_1((-1077952513));
    cbgg_Color_GRAY = cbgg_Color__init_1(2139062271);
    cbgg_Color_DARK_GRAY = cbgg_Color__init_1(1061109759);
    cbgg_Color_BLACK = cbgg_Color__init_3(0.0, 0.0, 0.0, 1.0);
    cbgg_Color_WHITE_FLOAT_BITS = cbgg_Color_WHITE.$toFloatBits();
    cbgg_Color_CLEAR = cbgg_Color__init_3(0.0, 0.0, 0.0, 0.0);
    cbgg_Color_BLUE = cbgg_Color__init_3(0.0, 0.0, 1.0, 1.0);
    cbgg_Color_NAVY = cbgg_Color__init_3(0.0, 0.0, 0.5, 1.0);
    cbgg_Color_ROYAL = cbgg_Color__init_1(1097458175);
    cbgg_Color_SLATE = cbgg_Color__init_1(1887473919);
    cbgg_Color_SKY = cbgg_Color__init_1((-2016482305));
    cbgg_Color_CYAN = cbgg_Color__init_3(0.0, 1.0, 1.0, 1.0);
    cbgg_Color_TEAL = cbgg_Color__init_3(0.0, 0.5, 0.5, 1.0);
    cbgg_Color_GREEN = cbgg_Color__init_1(16711935);
    cbgg_Color_CHARTREUSE = cbgg_Color__init_1(2147418367);
    cbgg_Color_LIME = cbgg_Color__init_1(852308735);
    cbgg_Color_FOREST = cbgg_Color__init_1(579543807);
    cbgg_Color_OLIVE = cbgg_Color__init_1(1804477439);
    cbgg_Color_YELLOW = cbgg_Color__init_1((-65281));
    cbgg_Color_GOLD = cbgg_Color__init_1((-2686721));
    cbgg_Color_GOLDENROD = cbgg_Color__init_1((-626712321));
    cbgg_Color_ORANGE = cbgg_Color__init_1((-5963521));
    cbgg_Color_BROWN = cbgg_Color__init_1((-1958407169));
    cbgg_Color_TAN = cbgg_Color__init_1((-759919361));
    cbgg_Color_FIREBRICK = cbgg_Color__init_1((-1306385665));
    cbgg_Color_RED = cbgg_Color__init_1((-16776961));
    cbgg_Color_SCARLET = cbgg_Color__init_1((-13361921));
    cbgg_Color_CORAL = cbgg_Color__init_1((-8433409));
    cbgg_Color_SALMON = cbgg_Color__init_1((-92245249));
    cbgg_Color_PINK = cbgg_Color__init_1((-9849601));
    cbgg_Color_MAGENTA = cbgg_Color__init_3(1.0, 0.0, 1.0, 1.0);
    cbgg_Color_PURPLE = cbgg_Color__init_1((-1608453889));
    cbgg_Color_VIOLET = cbgg_Color__init_1((-293409025));
    cbgg_Color_MAROON = cbgg_Color__init_1((-1339006721));
}
function cbgg_VertexAttribute() {
    var a = this; jl_Object.call(a);
    a.$usage = 0;
    a.$numComponents = 0;
    a.$normalized = 0;
    a.$type1 = 0;
    a.$offset = 0;
    a.$alias = null;
    a.$unit = 0;
    a.$usageIndex = 0;
}
function cbgg_VertexAttribute__init_(var_0, var_1, var_2) {
    var var_3 = new cbgg_VertexAttribute();
    cbgg_VertexAttribute__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_VertexAttribute__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgg_VertexAttribute();
    cbgg_VertexAttribute__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgg_VertexAttribute__init_3(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new cbgg_VertexAttribute();
    cbgg_VertexAttribute__init_4(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function cbgg_VertexAttribute__init_0($this, $usage, $numComponents, $alias) {
    cbgg_VertexAttribute__init_2($this, $usage, $numComponents, $alias, 0);
}
function cbgg_VertexAttribute__init_2($this, $usage, $numComponents, $alias, $unit) {
    var var$5;
    var$5 = $rt_compare($usage, 4);
    cbgg_VertexAttribute__init_4($this, $usage, $numComponents, var$5 ? 5126 : 5121, var$5 ? 0 : 1, $alias, $unit);
}
function cbgg_VertexAttribute__init_4($this, $usage, $numComponents, $type, $normalized, $alias, $unit) {
    jl_Object__init_0($this);
    $this.$usage = $usage;
    $this.$numComponents = $numComponents;
    $this.$type1 = $type;
    $this.$normalized = $normalized;
    $this.$alias = $alias;
    $this.$unit = $unit;
    $this.$usageIndex = jl_Integer_numberOfTrailingZeros($usage);
}
function cbgg_VertexAttribute_getSizeInBytes($this) {
    a: {
        switch ($this.$type1) {
            case 5120:
            case 5121:
                break;
            case 5122:
            case 5123:
                return 2 * $this.$numComponents | 0;
            case 5124:
            case 5125:
            case 5127:
            case 5128:
            case 5129:
            case 5130:
            case 5131:
                break a;
            case 5126:
            case 5132:
                return 4 * $this.$numComponents | 0;
            default:
                break a;
        }
        return $this.$numComponents;
    }
    return 0;
}
var jur_UnifiedQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_UnifiedQuantifierSet__init_(var_0) {
    var var_1 = new jur_UnifiedQuantifierSet();
    jur_UnifiedQuantifierSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UnifiedQuantifierSet__init_0($this, $quant) {
    jur_LeafQuantifierSet__init_0($this, $quant.$getInnerSet(), $quant.$getNext(), $quant.$getType0());
    $this.$innerSet.$setNext($this);
}
function jur_UnifiedQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf;
        if (var$4.$accepts($stringIndex, $testString) <= 0)
            break;
        $stringIndex = $stringIndex + $this.$leaf.$charCount0() | 0;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_UnifiedQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $startSearch, $newSearch, $newSearch_0;
    $startSearch = $this.$next.$find($stringIndex, $testString, $matchResult);
    if ($startSearch < 0)
        return (-1);
    $newSearch = $startSearch - $this.$leaf.$charCount0() | 0;
    while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
        $newSearch_0 = $newSearch - $this.$leaf.$charCount0() | 0;
        $startSearch = $newSearch;
        $newSearch = $newSearch_0;
    }
    return $startSearch;
}
function cbggg_ShaderProgram() {
    var a = this; jl_Object.call(a);
    a.$log = null;
    a.$isCompiled = 0;
    a.$uniforms = null;
    a.$uniformTypes = null;
    a.$uniformSizes = null;
    a.$uniformNames = null;
    a.$attributes = null;
    a.$attributeTypes = null;
    a.$attributeSizes = null;
    a.$attributeNames = null;
    a.$program = 0;
    a.$vertexShaderHandle = 0;
    a.$fragmentShaderHandle = 0;
    a.$matrix = null;
    a.$vertexShaderSource = null;
    a.$fragmentShaderSource = null;
    a.$invalidated = 0;
    a.$refCount = 0;
    a.$params = null;
    a.$type2 = null;
}
var cbggg_ShaderProgram_pedantic = 0;
var cbggg_ShaderProgram_prependVertexCode = null;
var cbggg_ShaderProgram_prependFragmentCode = null;
var cbggg_ShaderProgram_shaders = null;
var cbggg_ShaderProgram_intbuf = null;
function cbggg_ShaderProgram_$callClinit() {
    cbggg_ShaderProgram_$callClinit = $rt_eraseClinit(cbggg_ShaderProgram);
    cbggg_ShaderProgram__clinit_();
}
function cbggg_ShaderProgram__init_(var_0, var_1) {
    var var_2 = new cbggg_ShaderProgram();
    cbggg_ShaderProgram__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_ShaderProgram__init_0($this, $vertexShader, $fragmentShader) {
    cbggg_ShaderProgram_$callClinit();
    jl_Object__init_0($this);
    $this.$log = $rt_s(88);
    $this.$uniforms = cbgu_ObjectIntMap__init_();
    $this.$uniformTypes = cbgu_ObjectIntMap__init_();
    $this.$uniformSizes = cbgu_ObjectIntMap__init_();
    $this.$attributes = cbgu_ObjectIntMap__init_();
    $this.$attributeTypes = cbgu_ObjectIntMap__init_();
    $this.$attributeSizes = cbgu_ObjectIntMap__init_();
    $this.$refCount = 0;
    $this.$params = cbgu_BufferUtils_newIntBuffer(1);
    $this.$type2 = cbgu_BufferUtils_newIntBuffer(1);
    if ($vertexShader === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(341)));
    if ($fragmentShader === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(342)));
    if (cbggg_ShaderProgram_prependVertexCode !== null && cbggg_ShaderProgram_prependVertexCode.$length() > 0)
        $vertexShader = (((jl_StringBuilder__init_()).$append(cbggg_ShaderProgram_prependVertexCode)).$append($vertexShader)).$toString();
    if (cbggg_ShaderProgram_prependFragmentCode !== null && cbggg_ShaderProgram_prependFragmentCode.$length() > 0)
        $fragmentShader = (((jl_StringBuilder__init_()).$append(cbggg_ShaderProgram_prependFragmentCode)).$append($fragmentShader)).$toString();
    $this.$vertexShaderSource = $vertexShader;
    $this.$fragmentShaderSource = $fragmentShader;
    $this.$matrix = cbgu_BufferUtils_newFloatBuffer(16);
    cbggg_ShaderProgram_compileShaders($this, $vertexShader, $fragmentShader);
    if ($this.$isCompiled0()) {
        cbggg_ShaderProgram_fetchAttributes($this);
        cbggg_ShaderProgram_fetchUniforms($this);
        cbggg_ShaderProgram_addManagedShader($this, cbg_Gdx_app, $this);
    }
}
function cbggg_ShaderProgram_compileShaders($this, $vertexShader, $fragmentShader) {
    $this.$vertexShaderHandle = cbggg_ShaderProgram_loadShader($this, 35633, $vertexShader);
    $this.$fragmentShaderHandle = cbggg_ShaderProgram_loadShader($this, 35632, $fragmentShader);
    if ($this.$vertexShaderHandle != (-1) && $this.$fragmentShaderHandle != (-1)) {
        $this.$program = cbggg_ShaderProgram_linkProgram($this, $this.$createProgram());
        if ($this.$program != (-1)) {
            $this.$isCompiled = 1;
            return;
        }
        $this.$isCompiled = 0;
        return;
    }
    $this.$isCompiled = 0;
}
function cbggg_ShaderProgram_loadShader($this, $type, $source) {
    var $gl, $intbuf, $shader, $compiled, $infoLog;
    $gl = cbg_Gdx_gl20;
    $intbuf = cbgu_BufferUtils_newIntBuffer(1);
    $shader = $gl.$glCreateShader($type);
    if (!$shader)
        return (-1);
    $gl.$glShaderSource($shader, $source);
    $gl.$glCompileShader($shader);
    $gl.$glGetShaderiv($shader, 35713, $intbuf);
    $compiled = $intbuf.$get4(0);
    if ($compiled)
        return $shader;
    $infoLog = $gl.$glGetShaderInfoLog($shader);
    $this.$log = (((jl_StringBuilder__init_()).$append($this.$log)).$append($type != 35633 ? $rt_s(343) : $rt_s(344))).$toString();
    $this.$log = (((jl_StringBuilder__init_()).$append($this.$log)).$append($infoLog)).$toString();
    return (-1);
}
function cbggg_ShaderProgram_createProgram($this) {
    var $gl, $program;
    $gl = cbg_Gdx_gl20;
    $program = $gl.$glCreateProgram();
    if (!$program)
        $program = (-1);
    return $program;
}
function cbggg_ShaderProgram_linkProgram($this, $program) {
    var $gl, $tmp_0, $intbuf, $linked;
    $gl = cbg_Gdx_gl20;
    if ($program == (-1))
        return (-1);
    $gl.$glAttachShader($program, $this.$vertexShaderHandle);
    $gl.$glAttachShader($program, $this.$fragmentShaderHandle);
    $gl.$glLinkProgram($program);
    $tmp_0 = jn_ByteBuffer_allocateDirect(4);
    jn_ByteBuffer_order($tmp_0, jn_ByteOrder_nativeOrder());
    $intbuf = $tmp_0.$asIntBuffer();
    $gl.$glGetProgramiv($program, 35714, $intbuf);
    $linked = $intbuf.$get4(0);
    if ($linked)
        return $program;
    $this.$log = cbg_Gdx_gl20.$glGetProgramInfoLog($program);
    return (-1);
}
function cbggg_ShaderProgram_getLog($this) {
    if (!$this.$isCompiled)
        return $this.$log;
    $this.$log = cbg_Gdx_gl20.$glGetProgramInfoLog($this.$program);
    return $this.$log;
}
function cbggg_ShaderProgram_isCompiled($this) {
    return $this.$isCompiled;
}
function cbggg_ShaderProgram_fetchAttributeLocation($this, $name) {
    var $gl, var$3;
    $gl = cbg_Gdx_gl20;
    var$3 = $this.$attributes.$get6($name, (-2));
    if (var$3 == (-2)) {
        var$3 = $gl.$glGetAttribLocation($this.$program, $name);
        $this.$attributes.$put6($name, var$3);
    }
    return var$3;
}
function cbggg_ShaderProgram_fetchUniformLocation($this, $name) {
    cbggg_ShaderProgram_$callClinit();
    return $this.$fetchUniformLocation($name, cbggg_ShaderProgram_pedantic);
}
function cbggg_ShaderProgram_fetchUniformLocation0($this, $name, $pedantic) {
    var var$3;
    var$3 = $this.$uniforms.$get6($name, (-2));
    if (var$3 == (-2)) {
        var$3 = cbg_Gdx_gl20.$glGetUniformLocation($this.$program, $name);
        if (var$3 == (-1) && $pedantic) {
            if (!$this.$isCompiled)
                $rt_throw(jl_IllegalStateException__init_((((jl_StringBuilder__init_()).$append($rt_s(345))).$append($this.$getLog())).$toString()));
            $rt_throw(jl_IllegalArgumentException__init_(((((jl_StringBuilder__init_()).$append($rt_s(346))).$append($name)).$append($rt_s(347))).$toString()));
        }
        $this.$uniforms.$put6($name, var$3);
    }
    return var$3;
}
function cbggg_ShaderProgram_setUniformi($this, $name, $value) {
    var $gl, $location;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $location = cbggg_ShaderProgram_fetchUniformLocation($this, $name);
    $gl.$glUniform1i($location, $value);
}
function cbggg_ShaderProgram_setUniformMatrix($this, $name, $matrix) {
    $this.$setUniformMatrix($name, $matrix, 0);
}
function cbggg_ShaderProgram_setUniformMatrix0($this, $name, $matrix, $transpose) {
    $this.$setUniformMatrix0(cbggg_ShaderProgram_fetchUniformLocation($this, $name), $matrix, $transpose);
}
function cbggg_ShaderProgram_setUniformMatrix1($this, $location, $matrix, $transpose) {
    var $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniformMatrix4fv($location, 1, $transpose, $matrix.$val, 0);
}
function cbggg_ShaderProgram_setVertexAttribute($this, $location, $size, $type, $normalize, $stride, $offset) {
    var $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glVertexAttribPointer($location, $size, $type, $normalize, $stride, $offset);
}
function cbggg_ShaderProgram_bind($this) {
    var $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUseProgram($this.$program);
}
function cbggg_ShaderProgram_disableVertexAttribute($this, $name) {
    var $gl, $location;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $location = cbggg_ShaderProgram_fetchAttributeLocation($this, $name);
    if ($location == (-1))
        return;
    $gl.$glDisableVertexAttribArray($location);
}
function cbggg_ShaderProgram_disableVertexAttribute0($this, $location) {
    var $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glDisableVertexAttribArray($location);
}
function cbggg_ShaderProgram_enableVertexAttribute($this, $location) {
    var $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glEnableVertexAttribArray($location);
}
function cbggg_ShaderProgram_checkManaged($this) {
    if ($this.$invalidated) {
        cbggg_ShaderProgram_compileShaders($this, $this.$vertexShaderSource, $this.$fragmentShaderSource);
        $this.$invalidated = 0;
    }
}
function cbggg_ShaderProgram_addManagedShader($this, $app, $shaderProgram) {
    var $managedResources;
    cbggg_ShaderProgram_$callClinit();
    $managedResources = cbggg_ShaderProgram_shaders.$get1($app);
    if ($managedResources === null)
        $managedResources = cbgu_Array__init_();
    $managedResources.$add3($shaderProgram);
    cbggg_ShaderProgram_shaders.$put1($app, $managedResources);
}
function cbggg_ShaderProgram_fetchUniforms($this) {
    var $numUniforms, $i, $name, $location;
    $this.$params.$clear0();
    cbg_Gdx_gl20.$glGetProgramiv($this.$program, 35718, $this.$params);
    $numUniforms = $this.$params.$get4(0);
    $this.$uniformNames = $rt_createArray(jl_String, $numUniforms);
    $i = 0;
    while ($i < $numUniforms) {
        $this.$params.$clear0();
        $this.$params.$put7(0, 1);
        $this.$type2.$clear0();
        $name = cbg_Gdx_gl20.$glGetActiveUniform($this.$program, $i, $this.$params, $this.$type2);
        $location = cbg_Gdx_gl20.$glGetUniformLocation($this.$program, $name);
        $this.$uniforms.$put6($name, $location);
        $this.$uniformTypes.$put6($name, $this.$type2.$get4(0));
        $this.$uniformSizes.$put6($name, $this.$params.$get4(0));
        $this.$uniformNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
}
function cbggg_ShaderProgram_fetchAttributes($this) {
    var $numAttributes, $i, $name, $location;
    $this.$params.$clear0();
    cbg_Gdx_gl20.$glGetProgramiv($this.$program, 35721, $this.$params);
    $numAttributes = $this.$params.$get4(0);
    $this.$attributeNames = $rt_createArray(jl_String, $numAttributes);
    $i = 0;
    while ($i < $numAttributes) {
        $this.$params.$clear0();
        $this.$params.$put7(0, 1);
        $this.$type2.$clear0();
        $name = cbg_Gdx_gl20.$glGetActiveAttrib($this.$program, $i, $this.$params, $this.$type2);
        $location = cbg_Gdx_gl20.$glGetAttribLocation($this.$program, $name);
        $this.$attributes.$put6($name, $location);
        $this.$attributeTypes.$put6($name, $this.$type2.$get4(0));
        $this.$attributeSizes.$put6($name, $this.$params.$get4(0));
        $this.$attributeNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
}
function cbggg_ShaderProgram_getAttributeLocation($this, $name) {
    return $this.$attributes.$get6($name, (-1));
}
function cbggg_ShaderProgram__clinit_() {
    cbggg_ShaderProgram_pedantic = 1;
    cbggg_ShaderProgram_prependVertexCode = $rt_s(88);
    cbggg_ShaderProgram_prependFragmentCode = $rt_s(88);
    cbggg_ShaderProgram_shaders = cbgu_ObjectMap__init_();
    cbggg_ShaderProgram_intbuf = cbgu_BufferUtils_newIntBuffer(1);
}
var cbg_Files$FileType = $rt_classWithoutFields(jl_Enum);
var cbg_Files$FileType_Classpath = null;
var cbg_Files$FileType_Internal = null;
var cbg_Files$FileType_External = null;
var cbg_Files$FileType_Absolute = null;
var cbg_Files$FileType_Local = null;
var cbg_Files$FileType_$VALUES = null;
function cbg_Files$FileType_$callClinit() {
    cbg_Files$FileType_$callClinit = $rt_eraseClinit(cbg_Files$FileType);
    cbg_Files$FileType__clinit_();
}
function cbg_Files$FileType__init_(var_0, var_1) {
    var var_2 = new cbg_Files$FileType();
    cbg_Files$FileType__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbg_Files$FileType_values() {
    cbg_Files$FileType_$callClinit();
    return cbg_Files$FileType_$VALUES.$clone();
}
function cbg_Files$FileType__init_0($this, var$1, var$2) {
    cbg_Files$FileType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbg_Files$FileType__clinit_() {
    cbg_Files$FileType_Classpath = cbg_Files$FileType__init_($rt_s(348), 0);
    cbg_Files$FileType_Internal = cbg_Files$FileType__init_($rt_s(349), 1);
    cbg_Files$FileType_External = cbg_Files$FileType__init_($rt_s(350), 2);
    cbg_Files$FileType_Absolute = cbg_Files$FileType__init_($rt_s(351), 3);
    cbg_Files$FileType_Local = cbg_Files$FileType__init_($rt_s(352), 4);
    cbg_Files$FileType_$VALUES = $rt_createArrayFromData(cbg_Files$FileType, [cbg_Files$FileType_Classpath, cbg_Files$FileType_Internal, cbg_Files$FileType_External, cbg_Files$FileType_Absolute, cbg_Files$FileType_Local]);
}
var jn_DoubleBufferImpl = $rt_classWithoutFields(jn_DoubleBuffer);
function jn_DoubleBufferImpl__init_($this, $capacity, $position, $limit) {
    jn_DoubleBuffer__init_($this, $capacity, $position, $limit);
}
function jn_DoubleBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
var jlr_Type = $rt_classWithoutFields(0);
function jl_Class() {
    var a = this; jl_Object.call(a);
    a.$name4 = null;
    a.$platformClass = null;
    a.$declaredConstructors = null;
}
var jl_Class_reflectionInitialized = 0;
function jl_Class__init_(var_0) {
    var var_1 = new jl_Class();
    jl_Class__init_0(var_1, var_0);
    return var_1;
}
function jl_Class__init_0($this, $platformClass) {
    var var$2;
    jl_Object__init_0($this);
    $this.$platformClass = $platformClass;
    var$2 = $this;
    $platformClass.classObject = var$2;
}
function jl_Class_getClass($cls) {
    var $result;
    if ($cls === null)
        return null;
    $result = $cls.classObject;
    if ($result === null)
        $result = jl_Class__init_($cls);
    return $result;
}
function jl_Class_getPlatformClass($this) {
    return $this.$platformClass;
}
function jl_Class_isInstance($this, $obj) {
    return otp_Platform_isInstance($obj, $this.$platformClass);
}
function jl_Class_getName($this) {
    if ($this.$name4 === null)
        $this.$name4 = otp_Platform_getName($this.$platformClass);
    return $this.$name4;
}
function jl_Class_isPrimitive($this) {
    return otp_Platform_isPrimitive($this.$platformClass);
}
function jl_Class_isArray($this) {
    return otp_Platform_getArrayItem($this.$platformClass) === null ? 0 : 1;
}
function jl_Class_getComponentType($this) {
    return jl_Class_getClass(otp_Platform_getArrayItem($this.$platformClass));
}
function jl_Class_initReflection() {
    if (!jl_Class_reflectionInitialized) {
        jl_Class_reflectionInitialized = 1;
        jl_Class_createMetadata();
    }
}
function jl_Class_createMetadata() {
    cbggg_GlyphLayout.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_(obj );
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_0(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_1(obj , args[0], args[1], args[2], jl_Float_floatValue(args[3]), jl_Integer_intValue(args[4]), jl_Boolean_booleanValue(args[5]));
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls(), $rt_intcls(), cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls(), jl_String],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_2(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]), args[4], jl_Float_floatValue(args[5]), jl_Integer_intValue(args[6]), jl_Boolean_booleanValue(args[7]), args[8]);
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText0(obj , args[0], args[1], args[2], jl_Float_floatValue(args[3]), jl_Integer_intValue(args[4]), jl_Boolean_booleanValue(args[5]));
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls(), $rt_intcls(), cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls(), jl_String],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText1(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]), args[4], jl_Float_floatValue(args[5]), jl_Integer_intValue(args[6]), jl_Boolean_booleanValue(args[7]), args[8]);
                return null;
            }
        }, {
            name : "truncate",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_floatcls(), jl_String, $rt_intcls(), cbgu_Pool],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_truncate(obj , args[0], args[1], jl_Float_floatValue(args[2]), args[3], jl_Integer_intValue(args[4]), args[5]);
                return null;
            }
        }, {
            name : "wrap",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_intcls(), $rt_intcls()],
            returnType : cbggg_GlyphLayout$GlyphRun,
            callable : function(obj, args) {
                return cbggg_GlyphLayout_wrap(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]));
            }
        }, {
            name : "adjustLastGlyph",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_adjustLastGlyph(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "parseColorMarkup",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_CharSequence, $rt_intcls(), $rt_intcls(), cbgu_Pool],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                return cbggg_GlyphLayout_parseColorMarkup(obj , args[0], jl_Integer_intValue(args[1]), jl_Integer_intValue(args[2]), args[3]);
            }
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_reset(obj );
                return null;
            }
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : function(obj, args) {
                return cbggg_GlyphLayout_toString(obj );
            }
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_$callClinit();
                cbggg_GlyphLayout__clinit_();
                return null;
            }
        }];
    cbggg_GlyphLayout$GlyphRun.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun__init_(obj );
                return null;
            }
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun_reset(obj );
                return null;
            }
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : function(obj, args) {
                return cbggg_GlyphLayout$GlyphRun_toString(obj );
            }
        }];
    cbgg_Color.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgg_Color__init_0(obj );
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgg_Color__init_2(obj , jl_Integer_intValue(args[0]));
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgg_Color__init_4(obj , jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]), jl_Float_floatValue(args[3]));
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbgg_Color],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgg_Color__init_6(obj , args[0]);
                return null;
            }
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbgg_Color],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_set(obj , args[0]);
            }
        }, {
            name : "mul",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbgg_Color],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_mul(obj , args[0]);
            }
        }, {
            name : "mul",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_mul0(obj , jl_Float_floatValue(args[0]));
            }
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbgg_Color],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_add(obj , args[0]);
            }
        }, {
            name : "sub",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbgg_Color],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_sub(obj , args[0]);
            }
        }, {
            name : "clamp",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_clamp(obj );
            }
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_set0(obj , jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]), jl_Float_floatValue(args[3]));
            }
        }, {
            name : "set",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_set1(obj , jl_Integer_intValue(args[0]));
            }
        }, {
            name : "add",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_add0(obj , jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]), jl_Float_floatValue(args[3]));
            }
        }, {
            name : "sub",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_sub0(obj , jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]), jl_Float_floatValue(args[3]));
            }
        }, {
            name : "mul",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_mul1(obj , jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]), jl_Float_floatValue(args[3]));
            }
        }, {
            name : "lerp",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbgg_Color, $rt_floatcls()],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_lerp(obj , args[0], jl_Float_floatValue(args[1]));
            }
        }, {
            name : "lerp",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_lerp0(obj , jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]), jl_Float_floatValue(args[3]), jl_Float_floatValue(args[4]));
            }
        }, {
            name : "premultiplyAlpha",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_premultiplyAlpha(obj );
            }
        }, {
            name : "equals",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [jl_Object],
            returnType : $rt_booleancls(),
            callable : function(obj, args) {
                return cbgg_Color_equals(obj , args[0]);
            }
        }, {
            name : "hashCode",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                return cbgg_Color_hashCode(obj );
            }
        }, {
            name : "toFloatBits",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : function(obj, args) {
                return cbgg_Color_toFloatBits(obj );
            }
        }, {
            name : "toIntBits",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                return cbgg_Color_toIntBits(obj );
            }
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : function(obj, args) {
                return cbgg_Color_toString(obj );
            }
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [jl_String],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_valueOf(args[0]);
            }
        }, {
            name : "valueOf",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [jl_String, cbgg_Color],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_valueOf0(args[0], args[1]);
            }
        }, {
            name : "toFloatBits",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls(), $rt_intcls(), $rt_intcls()],
            returnType : $rt_floatcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_toFloatBits0(jl_Integer_intValue(args[0]), jl_Integer_intValue(args[1]), jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]));
            }
        }, {
            name : "toFloatBits",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_floatcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_toFloatBits1(jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]), jl_Float_floatValue(args[3]));
            }
        }, {
            name : "toIntBits",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls(), $rt_intcls(), $rt_intcls()],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_toIntBits0(jl_Integer_intValue(args[0]), jl_Integer_intValue(args[1]), jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]));
            }
        }, {
            name : "alpha",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_alpha(jl_Float_floatValue(args[0]));
            }
        }, {
            name : "luminanceAlpha",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_luminanceAlpha(jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]));
            }
        }, {
            name : "rgb565",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_rgb565(jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]));
            }
        }, {
            name : "rgba4444",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_rgba4444(jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]), jl_Float_floatValue(args[3]));
            }
        }, {
            name : "rgb888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_rgb888(jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]));
            }
        }, {
            name : "rgba8888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_rgba8888(jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]), jl_Float_floatValue(args[3]));
            }
        }, {
            name : "argb8888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_argb8888(jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]), jl_Float_floatValue(args[3]));
            }
        }, {
            name : "rgb565",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [cbgg_Color],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_rgb5650(args[0]);
            }
        }, {
            name : "rgba4444",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [cbgg_Color],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_rgba44440(args[0]);
            }
        }, {
            name : "rgb888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [cbgg_Color],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_rgb8880(args[0]);
            }
        }, {
            name : "rgba8888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [cbgg_Color],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_rgba88880(args[0]);
            }
        }, {
            name : "argb8888",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [cbgg_Color],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                return cbgg_Color_argb88880(args[0]);
            }
        }, {
            name : "rgb565ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [cbgg_Color, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                cbgg_Color_rgb565ToColor(args[0], jl_Integer_intValue(args[1]));
                return null;
            }
        }, {
            name : "rgba4444ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [cbgg_Color, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                cbgg_Color_rgba4444ToColor(args[0], jl_Integer_intValue(args[1]));
                return null;
            }
        }, {
            name : "rgb888ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [cbgg_Color, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                cbgg_Color_rgb888ToColor(args[0], jl_Integer_intValue(args[1]));
                return null;
            }
        }, {
            name : "rgba8888ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [cbgg_Color, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                cbgg_Color_rgba8888ToColor(args[0], jl_Integer_intValue(args[1]));
                return null;
            }
        }, {
            name : "argb8888ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [cbgg_Color, $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                cbgg_Color_argb8888ToColor(args[0], jl_Integer_intValue(args[1]));
                return null;
            }
        }, {
            name : "abgr8888ToColor",
            modifiers : 512,
            accessLevel : 3,
            parameterTypes : [cbgg_Color, $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                cbgg_Color_abgr8888ToColor(args[0], jl_Float_floatValue(args[1]));
                return null;
            }
        }, {
            name : "fromHsv",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_fromHsv(obj , jl_Float_floatValue(args[0]), jl_Float_floatValue(args[1]), jl_Float_floatValue(args[2]));
            }
        }, {
            name : "fromHsv",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_floatcls())],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_fromHsv0(obj , args[0]);
            }
        }, {
            name : "toHsv",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_arraycls($rt_floatcls())],
            returnType : $rt_arraycls($rt_floatcls()),
            callable : function(obj, args) {
                return cbgg_Color_toHsv(obj , args[0]);
            }
        }, {
            name : "cpy",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : cbgg_Color,
            callable : function(obj, args) {
                return cbgg_Color_cpy(obj );
            }
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgg_Color_$callClinit();
                cbgg_Color__clinit_();
                return null;
            }
        }];
}
function jl_Class_getDeclaredConstructors($this) {
    var var$1, $jsMethods, $count, $i, var$5, $jsParameterTypes, $parameterTypes, $j, var$9, var$10, var$11, var$12;
    if (!$this.$isPrimitive() && !$this.$isArray()) {
        if ($this.$declaredConstructors === null) {
            jl_Class_initReflection();
            var$1 = ($this.$getPlatformClass()).$meta;
            $jsMethods = var$1.methods;
            $this.$declaredConstructors = $rt_createArray(jlr_Constructor, $jsMethods.length);
            $count = 0;
            $i = 0;
            while ($i < $jsMethods.length) {
                var$5 = $jsMethods[$i];
                if ($rt_str(var$5.name).$equals($rt_s(353))) {
                    $jsParameterTypes = var$5.parameterTypes;
                    $parameterTypes = $rt_createArray(jl_Class, $jsParameterTypes.length);
                    $j = 0;
                    while (true) {
                        var$9 = $parameterTypes.data;
                        if ($j >= var$9.length)
                            break;
                        var$9[$j] = jl_Class_getClass($jsParameterTypes[$j]);
                        $j = $j + 1 | 0;
                    }
                    var$9 = $this.$declaredConstructors.data;
                    var$10 = $count + 1 | 0;
                    var$11 = new jlr_Constructor;
                    var$1 = $rt_str(var$5.name);
                    var$12 = var$5.modifiers;
                    jlr_Constructor__init_0(var$11, $this, var$1, var$12, var$5.accessLevel, $parameterTypes, otji_JS_functionAsObject(var$5.callable, "call"));
                    var$9[$count] = var$11;
                    $count = var$10;
                }
                $i = $i + 1 | 0;
            }
            $this.$declaredConstructors = ju_Arrays_copyOf1($this.$declaredConstructors, $count);
        }
        return $this.$declaredConstructors.$clone();
    }
    return $rt_createArray(jlr_Constructor, 0);
}
function jl_Class_getConstructors($this) {
    var $declaredConstructors, var$2, var$3, $constructors, $sz, var$6, $constructor, var$8, var$9;
    $declaredConstructors = $this.$getDeclaredConstructors();
    var$2 = $declaredConstructors.data;
    var$3 = var$2.length;
    $constructors = $rt_createArray(jlr_Constructor, var$3);
    $sz = 0;
    var$6 = 0;
    while (var$6 < var$3) {
        $constructor = var$2[var$6];
        if (jlr_Modifier_isPublic($constructor.$getModifiers0())) {
            var$8 = $constructors.data;
            var$9 = $sz + 1 | 0;
            var$8[$sz] = $constructor;
            $sz = var$9;
        }
        var$6 = var$6 + 1 | 0;
    }
    if ($sz < $constructors.data.length)
        $constructors = ju_Arrays_copyOf1($constructors, $sz);
    return $constructors;
}
function jl_Class_getDeclaredConstructor($this, $parameterTypes) {
    var var$2, var$3, var$4, $constructor;
    var$2 = ($this.$getDeclaredConstructors()).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3)
            $rt_throw(jl_NoSuchMethodException__init_());
        $constructor = var$2[var$4];
        if (ju_Arrays_equals($constructor.$getParameterTypes(), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
}
function jl_Class_getConstructor($this, $parameterTypes) {
    var var$2, var$3, var$4, $constructor;
    var$2 = ($this.$getDeclaredConstructors()).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3)
            $rt_throw(jl_NoSuchMethodException__init_());
        $constructor = var$2[var$4];
        if (jlr_Modifier_isPublic($constructor.$getModifiers0()) && ju_Arrays_equals($constructor.$getParameterTypes(), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
}
var otjt_ArrayBufferView = $rt_classWithoutFields();
var otjt_Int16Array = $rt_classWithoutFields(otjt_ArrayBufferView);
function ju_BitSet() {
    var a = this; jl_Object.call(a);
    a.$data1 = null;
    a.$length1 = 0;
}
function ju_BitSet__init_0() {
    var var_0 = new ju_BitSet();
    ju_BitSet__init_1(var_0);
    return var_0;
}
function ju_BitSet__init_(var_0) {
    var var_1 = new ju_BitSet();
    ju_BitSet__init_2(var_1, var_0);
    return var_1;
}
function ju_BitSet__init_1($this) {
    jl_Object__init_0($this);
    $this.$data1 = $rt_createIntArray(0);
}
function ju_BitSet__init_2($this, $nbits) {
    jl_Object__init_0($this);
    $this.$data1 = $rt_createIntArray((($nbits + 32 | 0) - 1 | 0) / 32 | 0);
}
function ju_BitSet_set($this, $bitIndex) {
    var $index, var$3;
    $index = $bitIndex / 32 | 0;
    if ($bitIndex >= $this.$length1) {
        ju_BitSet_ensureCapacity($this, $index + 1 | 0);
        $this.$length1 = $bitIndex + 1 | 0;
    }
    var$3 = $this.$data1.data;
    var$3[$index] = var$3[$index] | 1 << ($bitIndex % 32 | 0);
}
function ju_BitSet_set0($this, $fromIndex, $toIndex) {
    var $fromDataIndex, $toDataIndex, var$5, $i;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = $toIndex / 32 | 0;
    if ($toIndex > $this.$length1) {
        ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
        $this.$length1 = $toIndex;
    }
    if ($fromDataIndex == $toDataIndex) {
        var$5 = $this.$data1.data;
        var$5[$fromDataIndex] = var$5[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex) & ju_BitSet_trailingOneBits($this, $toIndex);
    } else {
        var$5 = $this.$data1.data;
        var$5[$fromDataIndex] = var$5[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            $this.$data1.data[$i] = (-1);
            $i = $i + 1 | 0;
        }
        if ($toIndex & 31) {
            var$5 = $this.$data1.data;
            var$5[$toDataIndex] = var$5[$toDataIndex] | ju_BitSet_trailingOneBits($this, $toIndex);
        }
    }
}
function ju_BitSet_trailingZeroBits($this, $num) {
    var var$2;
    var$2 = $num % 32 | 0;
    return (-1) << var$2;
}
function ju_BitSet_trailingOneBits($this, $num) {
    var var$2;
    var$2 = $num % 32 | 0;
    return !var$2 ? 0 : (-1) >>> (32 - var$2 | 0);
}
function ju_BitSet_clear($this, $bitIndex) {
    var $index, var$3;
    $index = $bitIndex / 32 | 0;
    if ($index < $this.$data1.data.length) {
        var$3 = $this.$data1.data;
        var$3[$index] = var$3[$index] & jl_Integer_rotateLeft((-2), $bitIndex % 32 | 0);
        if ($bitIndex == ($this.$length1 - 1 | 0))
            ju_BitSet_recalculateLength($this);
    }
}
function ju_BitSet_clear0($this, $fromIndex, $toIndex) {
    var var$3, $fromDataIndex, $toDataIndex, var$6, $i;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if ($fromIndex >= $this.$length1)
        return;
    var$3 = jl_Math_min($this.$length1, $toIndex);
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = var$3 / 32 | 0;
    if ($fromDataIndex == $toDataIndex) {
        var$6 = $this.$data1.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] & (ju_BitSet_trailingOneBits($this, $fromIndex) | ju_BitSet_trailingZeroBits($this, var$3));
    } else {
        var$6 = $this.$data1.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] & ju_BitSet_trailingOneBits($this, $fromIndex);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            $this.$data1.data[$i] = 0;
            $i = $i + 1 | 0;
        }
        if (var$3 & 31) {
            var$6 = $this.$data1.data;
            var$6[$toDataIndex] = var$6[$toDataIndex] & ju_BitSet_trailingZeroBits($this, var$3);
        }
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_get($this, $bitIndex) {
    var $index;
    $index = $bitIndex / 32 | 0;
    return $index < $this.$data1.data.length && $this.$data1.data[$index] & 1 << ($bitIndex % 32 | 0) ? 1 : 0;
}
function ju_BitSet_nextSetBit($this, $fromIndex) {
    var $index, $val, var$4, $top, $i;
    if ($fromIndex >= $this.$length1)
        return (-1);
    $index = $fromIndex / 32 | 0;
    $val = $this.$data1.data[$index];
    var$4 = $val >>> ($fromIndex % 32 | 0);
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length1 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data1.data[$i])
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data1.data[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function ju_BitSet_nextClearBit($this, $fromIndex) {
    var $index, $val, var$4, $top, $i;
    if ($fromIndex >= $this.$length1)
        return $fromIndex;
    $index = $fromIndex / 32 | 0;
    $val = $this.$data1.data[$index] ^ (-1);
    var$4 = $val >>> ($fromIndex % 32 | 0);
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length1 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data1.data[$i] != (-1))
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data1.data[$i] ^ (-1)) | 0;
        $i = $i + 1 | 0;
    }
    return $this.$length1;
}
function ju_BitSet_ensureCapacity($this, $capacity) {
    var $newArrayLength;
    if ($this.$data1.data.length >= $capacity)
        return;
    $newArrayLength = jl_Math_max(($capacity * 3 | 0) / 2 | 0, ($this.$data1.data.length * 2 | 0) + 1 | 0);
    $this.$data1 = ju_Arrays_copyOf2($this.$data1, $newArrayLength);
}
function ju_BitSet_recalculateLength($this) {
    var $top, $i, $sz;
    $top = ($this.$length1 + 31 | 0) / 32 | 0;
    $this.$length1 = $top * 32 | 0;
    $i = $top - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $sz = jl_Integer_numberOfLeadingZeros($this.$data1.data[$i]);
            if ($sz < 32)
                break;
            $i = $i + (-1) | 0;
            $this.$length1 = $this.$length1 - 32 | 0;
        }
        $this.$length1 = $this.$length1 - $sz | 0;
    }
}
function ju_BitSet_intersects($this, $set) {
    var $sz, $i;
    $sz = jl_Math_min($this.$data1.data.length, $set.$data1.data.length);
    $i = 0;
    while ($i < $sz) {
        if ($this.$data1.data[$i] & $set.$data1.data[$i])
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function ju_BitSet_and($this, $set) {
    var $i, $i_0, var$4;
    $i = jl_Math_min($this.$data1.data.length, $set.$data1.data.length);
    $i_0 = 0;
    while ($i_0 < $i) {
        var$4 = $this.$data1.data;
        var$4[$i_0] = var$4[$i_0] & $set.$data1.data[$i_0];
        $i_0 = $i_0 + 1 | 0;
    }
    while ($i < $this.$data1.data.length) {
        $this.$data1.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $this.$length1 = jl_Math_min($this.$length1, $set.$length1);
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_andNot($this, $set) {
    var $sz, $i, var$4;
    $sz = jl_Math_min($this.$data1.data.length, $set.$data1.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data1.data;
        var$4[$i] = var$4[$i] & ($set.$data1.data[$i] ^ (-1));
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_or($this, $set) {
    var $sz, $i, var$4;
    $this.$length1 = jl_Math_max($this.$length1, $set.$length1);
    ju_BitSet_ensureCapacity($this, ($this.$length1 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data1.data.length, $set.$data1.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data1.data;
        var$4[$i] = var$4[$i] | $set.$data1.data[$i];
        $i = $i + 1 | 0;
    }
}
function ju_BitSet_xor($this, $set) {
    var $sz, $i, var$4;
    $this.$length1 = jl_Math_max($this.$length1, $set.$length1);
    ju_BitSet_ensureCapacity($this, ($this.$length1 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data1.data.length, $set.$data1.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data1.data;
        var$4[$i] = var$4[$i] ^ $set.$data1.data[$i];
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_isEmpty($this) {
    return $this.$length1 ? 0 : 1;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$03 = null;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0($this, $this$0) {
    $this.$this$03 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains($this, $ch) {
    return jl_Character_isJavaIdentifierStart($ch);
}
function cbgg_Camera() {
    var a = this; jl_Object.call(a);
    a.$position4 = null;
    a.$direction = null;
    a.$up = null;
    a.$projection = null;
    a.$view = null;
    a.$combined = null;
    a.$invProjectionView = null;
    a.$near = 0.0;
    a.$far = 0.0;
    a.$viewportWidth = 0.0;
    a.$viewportHeight = 0.0;
    a.$frustum = null;
    a.$tmpVec = null;
    a.$ray = null;
}
function cbgg_Camera__init_($this) {
    jl_Object__init_0($this);
    $this.$position4 = cbgm_Vector3__init_();
    $this.$direction = cbgm_Vector3__init_0(0.0, 0.0, (-1.0));
    $this.$up = cbgm_Vector3__init_0(0.0, 1.0, 0.0);
    $this.$projection = cbgm_Matrix4__init_();
    $this.$view = cbgm_Matrix4__init_();
    $this.$combined = cbgm_Matrix4__init_();
    $this.$invProjectionView = cbgm_Matrix4__init_();
    $this.$near = 1.0;
    $this.$far = 100.0;
    $this.$viewportWidth = 0.0;
    $this.$viewportHeight = 0.0;
    $this.$frustum = cbgm_Frustum__init_();
    $this.$tmpVec = cbgm_Vector3__init_();
    $this.$ray = cbgmc_Ray__init_(cbgm_Vector3__init_(), cbgm_Vector3__init_());
}
function cbgg_OrthographicCamera() {
    var a = this; cbgg_Camera.call(a);
    a.$zoom = 0.0;
    a.$tmp = null;
}
function cbgg_OrthographicCamera__init_() {
    var var_0 = new cbgg_OrthographicCamera();
    cbgg_OrthographicCamera__init_0(var_0);
    return var_0;
}
function cbgg_OrthographicCamera__init_0($this) {
    cbgg_Camera__init_($this);
    $this.$zoom = 1.0;
    $this.$tmp = cbgm_Vector3__init_();
    $this.$near = 0.0;
}
function cbgg_OrthographicCamera_update($this) {
    $this.$update(1);
}
function cbgg_OrthographicCamera_update0($this, $updateFrustum) {
    $this.$projection.$setToOrtho($this.$zoom *  -$this.$viewportWidth / 2.0, $this.$zoom * $this.$viewportWidth / 2.0, $this.$zoom *  -($this.$viewportHeight / 2.0), $this.$zoom * $this.$viewportHeight / 2.0, $this.$near, $this.$far);
    $this.$view.$setToLookAt($this.$position4, ($this.$tmp.$set2($this.$position4)).$add4($this.$direction), $this.$up);
    $this.$combined.$set3($this.$projection);
    cbgm_Matrix4_mul($this.$combined.$val, $this.$view.$val);
    if ($updateFrustum) {
        $this.$invProjectionView.$set3($this.$combined);
        cbgm_Matrix4_inv($this.$invProjectionView.$val);
        $this.$frustum.$update0($this.$invProjectionView);
    }
}
function cbgg_OrthographicCamera_setToOrtho($this, $yDown, $viewportWidth, $viewportHeight) {
    if (!$yDown) {
        $this.$up.$set4(0.0, 1.0, 0.0);
        $this.$direction.$set4(0.0, 0.0, (-1.0));
    } else {
        $this.$up.$set4(0.0, (-1.0), 0.0);
        $this.$direction.$set4(0.0, 0.0, 1.0);
    }
    $this.$position4.$set4($this.$zoom * $viewportWidth / 2.0, $this.$zoom * $viewportHeight / 2.0, 0.0);
    $this.$viewportWidth = $viewportWidth;
    $this.$viewportHeight = $viewportHeight;
    $this.$update1();
}
var cbggg_IndexData = $rt_classWithoutFields(0);
function cbggg_IndexBufferObject() {
    var a = this; jl_Object.call(a);
    a.$buffer2 = null;
    a.$bufferHandle = 0;
    a.$isDirect = 0;
    a.$isDirty = 0;
    a.$isBound = 0;
    a.$usage0 = 0;
}
function cbggg_IndexBufferObject__init_(var_0, var_1) {
    var var_2 = new cbggg_IndexBufferObject();
    cbggg_IndexBufferObject__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_IndexBufferObject__init_1(var_0) {
    var var_1 = new cbggg_IndexBufferObject();
    cbggg_IndexBufferObject__init_2(var_1, var_0);
    return var_1;
}
function cbggg_IndexBufferObject__init_0($this, $isStatic, $maxIndices) {
    jl_Object__init_0($this);
    $this.$isDirty = 1;
    $this.$isBound = 0;
    $this.$isDirect = 1;
    $this.$buffer2 = cbgu_BufferUtils_newShortBuffer($maxIndices);
    $this.$buffer2.$flip0();
    $this.$bufferHandle = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage0 = !$isStatic ? 35048 : 35044;
}
function cbggg_IndexBufferObject__init_2($this, $maxIndices) {
    jl_Object__init_0($this);
    $this.$isDirty = 1;
    $this.$isBound = 0;
    $this.$isDirect = 1;
    $this.$buffer2 = cbgu_BufferUtils_newShortBuffer($maxIndices);
    $this.$buffer2.$flip0();
    $this.$bufferHandle = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage0 = 35044;
}
function cbggg_IndexBufferObject_getNumIndices($this) {
    return jn_Buffer_limit($this.$buffer2);
}
function cbggg_IndexBufferObject_getNumMaxIndices($this) {
    return jn_Buffer_capacity($this.$buffer2);
}
function cbggg_IndexBufferObject_setIndices($this, $indices, $offset, $count) {
    $this.$isDirty = 1;
    $this.$buffer2.$clear0();
    $this.$buffer2.$put8($indices, $offset, $count);
    $this.$buffer2.$flip0();
    if ($this.$isBound) {
        cbg_Gdx_gl20.$glBufferData(34963, jn_Buffer_limit($this.$buffer2), $this.$buffer2, $this.$usage0);
        $this.$isDirty = 0;
    }
}
function cbggg_IndexBufferObject_getBuffer($this) {
    $this.$isDirty = 1;
    return $this.$buffer2;
}
function cbggg_IndexBufferObject_bind($this) {
    if (!$this.$bufferHandle)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(354)));
    cbg_Gdx_gl20.$glBindBuffer(34963, $this.$bufferHandle);
    if ($this.$isDirty) {
        cbg_Gdx_gl20.$glBufferData(34963, jn_Buffer_limit($this.$buffer2), $this.$buffer2, $this.$usage0);
        $this.$isDirty = 0;
    }
    $this.$isBound = 1;
}
function cbggg_IndexBufferObject_unbind($this) {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound = 0;
}
var cbggg_IndexArray = $rt_classWithoutFields(cbggg_IndexBufferObject);
function cbggg_IndexArray__init_(var_0) {
    var var_1 = new cbggg_IndexArray();
    cbggg_IndexArray__init_0(var_1, var_0);
    return var_1;
}
function cbggg_IndexArray__init_0($this, $maxIndices) {
    cbggg_IndexBufferObject__init_2($this, $maxIndices);
}
var cgxgbw_WebTool = $rt_classWithoutFields();
function cgxgbw_WebTool_isProdMode() {
    return 1;
}
var cbgggf_FreeType$Bitmap = $rt_classWithoutFields(cbgggf_FreeType$Pointer);
function cbgggf_FreeType$Bitmap__init_(var_0) {
    var var_1 = new cbgggf_FreeType$Bitmap();
    cbgggf_FreeType$Bitmap__init_0(var_1, var_0);
    return var_1;
}
function cbgggf_FreeType$Bitmap__init_0($this, $address) {
    cbgggf_FreeType$Pointer__init_0($this, $address);
}
function cbgggf_FreeType$Bitmap_getRows($this) {
    return Module._c_Bitmap_getRows($this.$address);
}
function cbgggf_FreeType$Bitmap_getWidth($this) {
    return Module._c_Bitmap_getWidth($this.$address);
}
function cbgggf_FreeType$Bitmap_getPitch($this) {
    return Module._c_Bitmap_getPitch($this.$address);
}
function cbgggf_FreeType$Bitmap_getBuffer($this) {
    var $offset, $length, $int8ArrayWrapper, $buf;
    if (!$this.$getRows())
        return cbgu_BufferUtils_newByteBuffer(1);
    $offset = Module._c_Bitmap_getBufferAddress($this.$address);
    $length = Module._c_Bitmap_getBufferSize($this.$address);
    $int8ArrayWrapper = cbgggf_FreeType$Bitmap_getBuffer$js_body$_10($this.$address, $offset, $length);
    $buf = cbgg_FreeTypeUtil_newDirectReadWriteByteBuffer($int8ArrayWrapper, $length, 0);
    return $buf;
}
function cbgggf_FreeType$Bitmap_getPixmap($this, $format, $color, $gamma) {
    var $width, $rows, $src, $pixelMode, $rowBytes, $pixmap, $changedPixels, $rgba, $srcRow, $dstRow, $dst, $y, $i, $x, $b, $ii, $n, $rgb, $a, $alpha, var$24;
    a: {
        $width = $this.$getWidth();
        $rows = $this.$getRows();
        $src = $this.$getBuffer();
        $pixelMode = $this.$getPixelMode();
        $rowBytes = jl_Math_abs0($this.$getPitch());
        cbgg_Color_$callClinit();
        if ($color === cbgg_Color_WHITE) {
            cbgggf_FreeType_$callClinit();
            if ($pixelMode == cbgggf_FreeType_FT_PIXEL_MODE_GRAY && $rowBytes == $width && $gamma === 1.0) {
                $pixmap = new cbgg_FreeTypePixmap;
                cbgg_Pixmap$Format_$callClinit();
                cbgg_FreeTypePixmap__init_($pixmap, $width, $rows, cbgg_Pixmap$Format_Alpha);
                $changedPixels = $pixmap.$getRealPixels();
                cbgu_BufferUtils_copy0($src, $changedPixels, jn_Buffer_capacity($changedPixels));
                break a;
            }
        }
        $pixmap = new cbgg_FreeTypePixmap;
        cbgg_Pixmap$Format_$callClinit();
        cbgg_FreeTypePixmap__init_($pixmap, $width, $rows, cbgg_Pixmap$Format_RGBA8888);
        $rgba = cbgg_Color_rgba88880($color);
        $srcRow = $rt_createByteArray($rowBytes);
        $dstRow = $rt_createIntArray($width);
        $changedPixels = $pixmap.$getRealPixels();
        $dst = $changedPixels.$asIntBuffer();
        cbgggf_FreeType_$callClinit();
        if ($pixelMode == cbgggf_FreeType_FT_PIXEL_MODE_MONO) {
            $y = 0;
            while ($y < $rows) {
                $src.$get7($srcRow);
                $i = 0;
                $x = 0;
                while ($x < $width) {
                    $b = $srcRow.data[$i];
                    $ii = 0;
                    $n = jl_Math_min(8, $width - $x | 0);
                    while ($ii < $n) {
                        if ($b & 1 << (7 - $ii | 0))
                            $dstRow.data[$x + $ii | 0] = $rgba;
                        else
                            $dstRow.data[$x + $ii | 0] = 0;
                        $ii = $ii + 1 | 0;
                    }
                    $i = $i + 1 | 0;
                    $x = $x + 8 | 0;
                }
                jn_IntBuffer_put1($dst, $dstRow);
                $y = $y + 1 | 0;
            }
        } else {
            $rgb = $rgba & (-256);
            $a = $rgba & 255;
            $y = 0;
            while ($y < $rows) {
                $src.$get7($srcRow);
                $x = 0;
                while ($x < $width) {
                    $alpha = $srcRow.data[$x] & 255;
                    if (!$alpha)
                        $dstRow.data[$x] = $rgb;
                    else if ($alpha == 255)
                        $dstRow.data[$x] = $rgb | $a;
                    else
                        $dstRow.data[$x] = $rgb | $a * jl_Math_pow($alpha / 255.0, $gamma) | 0;
                    $x = $x + 1 | 0;
                }
                jn_IntBuffer_put1($dst, $dstRow);
                $y = $y + 1 | 0;
            }
        }
    }
    $pixmap.$putPixelsBack($changedPixels);
    $pixmap.$setPixelsNull();
    if ($format === $pixmap.$getFormat())
        var$24 = $pixmap;
    else {
        var$24 = cbgg_Pixmap__init_($pixmap.$getWidth(), $pixmap.$getHeight(), $format);
        cbgg_Pixmap$Blending_$callClinit();
        var$24.$setBlending(cbgg_Pixmap$Blending_None);
        var$24.$drawPixmap0($pixmap, 0, 0);
        var$24.$setBlending(cbgg_Pixmap$Blending_SourceOver);
        $pixmap.$dispose();
    }
    return var$24;
}
function cbgggf_FreeType$Bitmap_getPixelMode($this) {
    return Module._c_Bitmap_getPixelMode($this.$address);
}
function cbgggf_FreeType$Bitmap_getBuffer$js_body$_10(var$1, var$2, var$3) {
    var buff = Module.HEAP8.subarray(var$2, var$2 + var$3);
    return buff;
}
function jl_Float() {
    jl_Number.call(this);
    this.$value2 = 0.0;
}
var jl_Float_NaN = 0.0;
var jl_Float_TYPE = null;
function jl_Float_$callClinit() {
    jl_Float_$callClinit = $rt_eraseClinit(jl_Float);
    jl_Float__clinit_();
}
function jl_Float_floatValue($this) {
    return $this.$value2;
}
function jl_Float_floatToRawIntBits($value) {
    jl_Float_$callClinit();
    return $rt_floatToIntBits($value);
}
function jl_Float__clinit_() {
    jl_Float_NaN = NaN;
    jl_Float_TYPE = $rt_cls($rt_floatcls());
}
var ju_Arrays = $rt_classWithoutFields();
function ju_Arrays_copyOf0($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createCharArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createByteArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf2($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createIntArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf1($original, $newLength) {
    var var$3, $result, $sz, $i;
    var$3 = $original.data;
    $result = jlr_Array_newInstance((jl_Object_getClass($original)).$getComponentType(), $newLength);
    $sz = jl_Math_min($newLength, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_fill0($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill($a, $val) {
    ju_Arrays_fill0($a, 0, $a.data.length, $val);
}
function ju_Arrays_fill1($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill2($a, $val) {
    ju_Arrays_fill1($a, 0, $a.data.length, $val);
}
function ju_Arrays_fill3($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill4($a, $val) {
    ju_Arrays_fill3($a, 0, $a.data.length, $val);
}
function ju_Arrays_binarySearch($a, $key) {
    return ju_Arrays_binarySearch0($a, 0, $a.data.length, $key);
}
function ju_Arrays_binarySearch0($a, $fromIndex, $toIndex, $key) {
    var var$5, $u, var$7, $i, $e;
    var$5 = $rt_compare($fromIndex, $toIndex);
    if (var$5 > 0)
        $rt_throw(jl_IllegalArgumentException__init_0());
    if (!var$5)
        return (-1);
    $u = $toIndex - 1 | 0;
    while (true) {
        var$7 = $a.data;
        $i = ($fromIndex + $u | 0) / 2 | 0;
        $e = var$7[$i];
        if ($e == $key)
            break;
        if ($key >= $e) {
            $fromIndex = $i + 1 | 0;
            if ($fromIndex > $u)
                return ( -$i | 0) - 2 | 0;
        } else {
            $u = $i - 1 | 0;
            if ($u < $fromIndex)
                return ( -$i | 0) - 1 | 0;
        }
    }
    return $i;
}
function ju_Arrays_equals0($a, $a2) {
    var var$3, var$4, var$5, $i;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data;
        var$5 = var$4.length;
        if (var$5 == var$3.length) {
            $i = 0;
            while ($i < var$5) {
                if (var$4[$i] != var$3[$i])
                    return 0;
                $i = $i + 1 | 0;
            }
            return 1;
        }
    }
    return 0;
}
function ju_Arrays_equals($a, $a2) {
    var var$3, var$4, var$5, $i;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data;
        var$5 = var$4.length;
        if (var$5 == var$3.length) {
            $i = 0;
            while ($i < var$5) {
                if (!ju_Objects_equals(var$4[$i], var$3[$i]))
                    return 0;
                $i = $i + 1 | 0;
            }
            return 1;
        }
    }
    return 0;
}
function jur_CharSet() {
    jur_LeafSet.call(this);
    this.$ch = 0;
}
function jur_CharSet__init_(var_0) {
    var var_1 = new jur_CharSet();
    jur_CharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CharSet__init_0($this, $ch) {
    jur_LeafSet__init_0($this);
    $this.$ch = $ch;
}
function jur_CharSet_charCount($this) {
    return 1;
}
function jur_CharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch != $testString.$charAt($strIndex) ? (-1) : 1;
}
function jur_CharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf1($this.$ch, $strIndex);
        if (var$6 < 0)
            return (-1);
        var$7 = $this.$next;
        $strIndex = var$6 + 1 | 0;
        if (var$7.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
}
function jur_CharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf1($this.$ch, $lastIndex);
            if (var$6 < 0)
                break a;
            if (var$6 < $strIndex)
                break a;
            if ($this.$next.$matches(var$6 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$6 + (-1) | 0;
        }
        return var$6;
    }
    return (-1);
}
function jur_CharSet_getChar($this) {
    return $this.$ch;
}
function jur_CharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return $set.$getChar0() != $this.$ch ? 0 : 1;
    if (!($set instanceof jur_RangeSet)) {
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains($this.$ch);
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return $set.$accepts(0, jl_Character_toString($this.$ch)) <= 0 ? 0 : 1;
}
function cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter() {
    var a = this; jl_Object.call(a);
    a.$size5 = 0;
    a.$mono = 0;
    a.$hinting = null;
    a.$color0 = null;
    a.$gamma = 0.0;
    a.$renderCount = 0;
    a.$borderWidth = 0.0;
    a.$borderColor = null;
    a.$borderStraight = 0;
    a.$borderGamma = 0.0;
    a.$shadowOffsetX = 0;
    a.$shadowOffsetY = 0;
    a.$shadowColor = null;
    a.$spaceX = 0;
    a.$spaceY = 0;
    a.$padTop = 0;
    a.$padLeft = 0;
    a.$padBottom = 0;
    a.$padRight = 0;
    a.$characters0 = null;
    a.$kerning0 = 0;
    a.$packer = null;
    a.$flip1 = 0;
    a.$genMipMaps = 0;
    a.$minFilter0 = null;
    a.$magFilter0 = null;
    a.$incremental = 0;
}
function cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter__init_() {
    var var_0 = new cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter();
    cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter__init_0(var_0);
    return var_0;
}
function cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter__init_0($this) {
    jl_Object__init_0($this);
    $this.$size5 = 16;
    cbgggf_FreeTypeFontGenerator$Hinting_$callClinit();
    $this.$hinting = cbgggf_FreeTypeFontGenerator$Hinting_AutoMedium;
    cbgg_Color_$callClinit();
    $this.$color0 = cbgg_Color_WHITE;
    $this.$gamma = 1.7999999523162842;
    $this.$renderCount = 2;
    $this.$borderWidth = 0.0;
    $this.$borderColor = cbgg_Color_BLACK;
    $this.$borderStraight = 0;
    $this.$borderGamma = 1.7999999523162842;
    $this.$shadowOffsetX = 0;
    $this.$shadowOffsetY = 0;
    $this.$shadowColor = cbgg_Color__init_3(0.0, 0.0, 0.0, 0.75);
    $this.$characters0 = $rt_s(355);
    $this.$kerning0 = 1;
    $this.$packer = null;
    $this.$flip1 = 0;
    $this.$genMipMaps = 0;
    cbgg_Texture$TextureFilter_$callClinit();
    $this.$minFilter0 = cbgg_Texture$TextureFilter_Nearest;
    $this.$magFilter0 = cbgg_Texture$TextureFilter_Nearest;
}
function jur_CharClass$3() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt = 0;
    a.$val$cc = null;
    a.$this$04 = null;
}
function jur_CharClass$3__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$3();
    jur_CharClass$3__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$3__init_0($this, $this$0, var$2, var$3) {
    $this.$this$04 = $this$0;
    $this.$val$curAlt = var$2;
    $this.$val$cc = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$3_contains($this, $ch) {
    return !($this.$val$curAlt ^ $this.$this$04.$bits.$get8($ch)) && !($this.$val$curAlt ^ $this.$this$04.$inverted ^ $this.$val$cc.$contains($ch)) ? 0 : 1;
}
function jur_CharClass$4() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt0 = 0;
    a.$val$nb = null;
    a.$val$cc0 = null;
    a.$this$05 = null;
}
function jur_CharClass$4__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$4();
    jur_CharClass$4__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$4__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$05 = $this$0;
    $this.$val$curAlt0 = var$2;
    $this.$val$nb = var$3;
    $this.$val$cc0 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$4_contains($this, $ch) {
    return $this.$val$curAlt0 ^ (!$this.$val$nb.$contains($ch) && !$this.$val$cc0.$contains($ch) ? 0 : 1) ? 0 : 1;
}
function jur_CharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$cc1 = null;
    a.$this$06 = null;
}
function jur_CharClass$1__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$1();
    jur_CharClass$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$1__init_0($this, $this$0, var$2) {
    $this.$this$06 = $this$0;
    $this.$val$cc1 = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$1_contains($this, $ch) {
    return $this.$val$cc1.$contains($ch);
}
var otjb_AnimationFrameCallback = $rt_classWithoutFields(0);
function jur_CharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt1 = 0;
    a.$val$cc2 = null;
    a.$this$07 = null;
}
function jur_CharClass$2__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$2();
    jur_CharClass$2__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$2__init_0($this, $this$0, var$2, var$3) {
    $this.$this$07 = $this$0;
    $this.$val$curAlt1 = var$2;
    $this.$val$cc2 = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$2_contains($this, $ch) {
    return !($this.$val$curAlt1 ^ $this.$this$07.$bits.$get8($ch)) && !($this.$val$curAlt1 ^ $this.$this$07.$inverted ^ $this.$val$cc2.$contains($ch)) ? 1 : 0;
}
function jur_CharClass$7() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz = null;
    a.$this$08 = null;
}
function jur_CharClass$7__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$7();
    jur_CharClass$7__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$7__init_0($this, $this$0, var$2) {
    $this.$this$08 = $this$0;
    $this.$val$clazz = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$7_contains($this, $ch) {
    return $this.$val$clazz.$contains($ch);
}
function jur_CharClass$8() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz0 = null;
    a.$val$curAlt2 = 0;
    a.$this$09 = null;
}
function jur_CharClass$8__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$8();
    jur_CharClass$8__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$8__init_0($this, $this$0, var$2, var$3) {
    $this.$this$09 = $this$0;
    $this.$val$clazz0 = var$2;
    $this.$val$curAlt2 = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$8_contains($this, $ch) {
    return !$this.$val$clazz0.$contains($ch) && !($this.$val$curAlt2 ^ $this.$this$09.$bits.$get8($ch)) ? 1 : 0;
}
var cbggg_VertexData = $rt_classWithoutFields(0);
function jur_CharClass$5() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt3 = 0;
    a.$val$nb0 = null;
    a.$val$cc3 = null;
    a.$this$010 = null;
}
function jur_CharClass$5__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$5();
    jur_CharClass$5__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$5__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$010 = $this$0;
    $this.$val$curAlt3 = var$2;
    $this.$val$nb0 = var$3;
    $this.$val$cc3 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$5_contains($this, $ch) {
    return $this.$val$curAlt3 ^ (!$this.$val$nb0.$contains($ch) && !$this.$val$cc3.$contains($ch) ? 0 : 1);
}
function jur_CharClass$6() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz1 = null;
    a.$this$011 = null;
}
function jur_CharClass$6__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$6();
    jur_CharClass$6__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$6__init_0($this, $this$0, var$2) {
    $this.$this$011 = $this$0;
    $this.$val$clazz1 = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$6_contains($this, $ch) {
    return $this.$val$clazz1.$contains($ch) ? 0 : 1;
}
function jur_DotSet() {
    jur_JointSet.call(this);
    this.$lt0 = null;
}
function jur_DotSet__init_(var_0) {
    var var_1 = new jur_DotSet();
    jur_DotSet__init_0(var_1, var_0);
    return var_1;
}
function jur_DotSet__init_0($this, $lt) {
    jur_JointSet__init_0($this);
    $this.$lt0 = $lt;
}
function jur_DotSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$lt0.$isLineTerminator(jl_Character_toCodePoint($high, $low)) ? (-1) : $this.$next.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$lt0.$isLineTerminator($high) ? (-1) : $this.$next.$matches(var$5, $testString, $matchResult);
}
function jur_DotSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_DotSet_getType($this) {
    return (-2147483602);
}
function jur_DotSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CharClass$9() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz2 = null;
    a.$val$curAlt4 = 0;
    a.$this$012 = null;
}
function jur_CharClass$9__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$9();
    jur_CharClass$9__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$9__init_0($this, $this$0, var$2, var$3) {
    $this.$this$012 = $this$0;
    $this.$val$clazz2 = var$2;
    $this.$val$curAlt4 = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$9_contains($this, $ch) {
    return !$this.$val$clazz2.$contains($ch) && !($this.$val$curAlt4 ^ $this.$this$012.$bits.$get8($ch)) ? 0 : 1;
}
var jl_Character = $rt_classWithoutFields();
var jl_Character_TYPE = null;
var jl_Character_digitMapping = null;
var jl_Character_classMapping = null;
var jl_Character_characterCache = null;
var jl_Character_$$metadata$$1 = null;
var jl_Character_$$metadata$$2 = null;
function jl_Character_$callClinit() {
    jl_Character_$callClinit = $rt_eraseClinit(jl_Character);
    jl_Character__clinit_();
}
function jl_Character_toString($c) {
    var var$2, var$3;
    jl_Character_$callClinit();
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_1(var$2, var$3);
    return var$2;
}
function jl_Character_isBmpCodePoint($codePoint) {
    jl_Character_$callClinit();
    return $codePoint > 0 && $codePoint <= 65535 ? 1 : 0;
}
function jl_Character_isSupplementaryCodePoint($codePoint) {
    jl_Character_$callClinit();
    return $codePoint >= 65536 && $codePoint <= 1114111 ? 1 : 0;
}
function jl_Character_isHighSurrogate($ch) {
    jl_Character_$callClinit();
    return ($ch & 64512) != 55296 ? 0 : 1;
}
function jl_Character_isLowSurrogate($ch) {
    jl_Character_$callClinit();
    return ($ch & 64512) != 56320 ? 0 : 1;
}
function jl_Character_isSurrogate($ch) {
    jl_Character_$callClinit();
    return !jl_Character_isHighSurrogate($ch) && !jl_Character_isLowSurrogate($ch) ? 0 : 1;
}
function jl_Character_isSurrogatePair($high, $low) {
    jl_Character_$callClinit();
    return jl_Character_isHighSurrogate($high) && jl_Character_isLowSurrogate($low) ? 1 : 0;
}
function jl_Character_toCodePoint($high, $low) {
    jl_Character_$callClinit();
    return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
}
function jl_Character_codePointAt($a, $index) {
    jl_Character_$callClinit();
    return jl_Character_codePointAt0($a, $index, $a.data.length);
}
function jl_Character_codePointAt0($a, $index, $limit) {
    var var$4, var$5;
    jl_Character_$callClinit();
    if ($index < ($limit - 1 | 0)) {
        var$4 = $a.data;
        if (jl_Character_isHighSurrogate(var$4[$index])) {
            var$5 = $index + 1 | 0;
            if (jl_Character_isLowSurrogate(var$4[var$5]))
                return jl_Character_toCodePoint(var$4[$index], var$4[var$5]);
        }
    }
    return $a.data[$index];
}
function jl_Character_highSurrogate($codePoint) {
    var var$2;
    jl_Character_$callClinit();
    var$2 = $codePoint - 65536 | 0;
    return (55296 | var$2 >> 10 & 1023) & 65535;
}
function jl_Character_lowSurrogate($codePoint) {
    jl_Character_$callClinit();
    return (56320 | $codePoint & 1023) & 65535;
}
function jl_Character_toLowerCase($ch) {
    jl_Character_$callClinit();
    return jl_Character_toLowerCase0($ch) & 65535;
}
function jl_Character_toLowerCase0($ch) {
    jl_Character_$callClinit();
    return (otp_Platform_stringFromCharCode($ch)).toLowerCase().charCodeAt(0);
}
function jl_Character_toUpperCase($ch) {
    jl_Character_$callClinit();
    return jl_Character_toUpperCase0($ch) & 65535;
}
function jl_Character_toUpperCase0($codePoint) {
    jl_Character_$callClinit();
    return (otp_Platform_stringFromCharCode($codePoint)).toUpperCase().charCodeAt(0);
}
function jl_Character_digit($ch, $radix) {
    jl_Character_$callClinit();
    return jl_Character_digit0($ch, $radix);
}
function jl_Character_digit0($codePoint, $radix) {
    var $d;
    jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        $d = jl_Character_getNumericValue0($codePoint);
        if ($d >= $radix)
            $d = (-1);
        return $d;
    }
    return (-1);
}
function jl_Character_getNumericValue($ch) {
    jl_Character_$callClinit();
    return jl_Character_getNumericValue0($ch);
}
function jl_Character_getNumericValue0($codePoint) {
    var $digitMapping, var$3, $l, $u, $idx, var$7, $val, var$9;
    jl_Character_$callClinit();
    $digitMapping = jl_Character_getDigitMapping();
    var$3 = $digitMapping.data;
    $l = 0;
    $u = (var$3.length / 2 | 0) - 1 | 0;
    while ($u >= $l) {
        $idx = ($l + $u | 0) / 2 | 0;
        var$7 = $idx * 2 | 0;
        $val = var$3[var$7];
        var$9 = $rt_compare($codePoint, $val);
        if (var$9 > 0)
            $l = $idx + 1 | 0;
        else {
            if (var$9 >= 0)
                return var$3[var$7 + 1 | 0];
            $u = $idx - 1 | 0;
        }
    }
    return (-1);
}
function jl_Character_forDigit($digit, $radix) {
    jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36 && $digit < $radix)
        return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
    return 0;
}
function jl_Character_isDigit($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 9 ? 0 : 1;
}
function jl_Character_getDigitMapping() {
    jl_Character_$callClinit();
    if (jl_Character_digitMapping === null)
        jl_Character_digitMapping = otciu_UnicodeHelper_decodeIntPairsDiff(((jl_Character_obtainDigitMapping()).value !== null ? $rt_str((jl_Character_obtainDigitMapping()).value) : null));
    return jl_Character_digitMapping;
}
function jl_Character_obtainDigitMapping() {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$1 === null)
        jl_Character_$$metadata$$1 = jl_Character_obtainDigitMapping$$create();
    return jl_Character_$$metadata$$1;
}
function jl_Character_getClasses() {
    jl_Character_$callClinit();
    if (jl_Character_classMapping === null)
        jl_Character_classMapping = otciu_UnicodeHelper_extractRle(((jl_Character_obtainClasses()).value !== null ? $rt_str((jl_Character_obtainClasses()).value) : null));
    return jl_Character_classMapping;
}
function jl_Character_obtainClasses() {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$2 === null)
        jl_Character_$$metadata$$2 = jl_Character_obtainClasses$$create();
    return jl_Character_$$metadata$$2;
}
function jl_Character_toChars($codePoint) {
    var var$2;
    jl_Character_$callClinit();
    if ($codePoint < 65536) {
        var$2 = $rt_createCharArray(1);
        var$2.data[0] = $codePoint & 65535;
        return var$2;
    }
    return $rt_createCharArrayFromData([jl_Character_highSurrogate($codePoint), jl_Character_lowSurrogate($codePoint)]);
}
function jl_Character_isISOControl($codePoint) {
    var var$2;
    jl_Character_$callClinit();
    a: {
        b: {
            if (!($codePoint >= 0 && $codePoint <= 31)) {
                if ($codePoint < 127)
                    break b;
                if ($codePoint > 159)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
}
function jl_Character_getType0($c) {
    jl_Character_$callClinit();
    return jl_Character_getType($c);
}
function jl_Character_getType($codePoint) {
    var $classes, var$3, $l, $u, $i, $range;
    jl_Character_$callClinit();
    if (jl_Character_isBmpCodePoint($codePoint) && jl_Character_isSurrogate($codePoint & 65535))
        return 19;
    $classes = jl_Character_getClasses();
    var$3 = $classes.data;
    $l = 0;
    $u = var$3.length - 1 | 0;
    while ($l <= $u) {
        $i = ($l + $u | 0) / 2 | 0;
        $range = var$3[$i];
        if ($codePoint >= $range.$end1)
            $l = $i + 1 | 0;
        else {
            if ($codePoint >= $range.$start2)
                return $range.$data2.data[$codePoint - $range.$start2 | 0];
            $u = $i - 1 | 0;
        }
    }
    return 0;
}
function jl_Character_isLowerCase($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 2 ? 0 : 1;
}
function jl_Character_isUpperCase($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 1 ? 0 : 1;
}
function jl_Character_isTitleCase($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 3 ? 0 : 1;
}
function jl_Character_isDefined($codePoint) {
    jl_Character_$callClinit();
    return !jl_Character_getType($codePoint) ? 0 : 1;
}
function jl_Character_isLetter($codePoint) {
    jl_Character_$callClinit();
    switch (jl_Character_getType($codePoint)) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            return 0;
    }
    return 1;
}
function jl_Character_isLetterOrDigit($ch) {
    jl_Character_$callClinit();
    return jl_Character_isLetterOrDigit0($ch);
}
function jl_Character_isLetterOrDigit0($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 9:
                break;
            case 6:
            case 7:
            case 8:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return 0;
}
function jl_Character_isJavaIdentifierStart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
            case 23:
            case 26:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isJavaIdentifierPart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
            case 26:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isUnicodeIdentifierStart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isUnicodeIdentifierPart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isIdentifierIgnorable($codePoint) {
    jl_Character_$callClinit();
    a: {
        if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
            if ($codePoint < 127)
                break a;
            if ($codePoint > 159)
                break a;
        }
        return 1;
    }
    return jl_Character_getType($codePoint) != 16 ? 0 : 1;
}
function jl_Character_isSpaceChar($codePoint) {
    jl_Character_$callClinit();
    switch (jl_Character_getType($codePoint)) {
        case 12:
        case 13:
        case 14:
            break;
        default:
            return 0;
    }
    return 1;
}
function jl_Character_isWhitespace($ch) {
    jl_Character_$callClinit();
    return jl_Character_isWhitespace0($ch);
}
function jl_Character_isWhitespace0($codePoint) {
    jl_Character_$callClinit();
    switch ($codePoint) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 28:
        case 29:
        case 30:
        case 31:
            break;
        case 160:
        case 8199:
        case 8239:
            return 0;
        default:
            return jl_Character_isSpaceChar($codePoint);
    }
    return 1;
}
function jl_Character__clinit_() {
    jl_Character_TYPE = $rt_cls($rt_charcls());
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
}
function jl_Character_obtainDigitMapping$$create() {
    return {"value" : "{?*% %%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%_H#T#%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%{CG%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%6)G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%!i#G"
    + "%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%*;G%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%:/G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%{/G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%R@dG%%%%%%%%%%%%%%%%%%R[G%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%!#G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%cCG%%%%%%%%%%%%%%%%%%o*IG%%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%c:#T#%%%%%%%%%%%%%%%%%%w&%G%%%%%"
    + "%%%%%%%%%%%%%BhG%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%_%G%%%%%%%%%%%%%%%%%%>-G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%w=G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%>AG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%slG%%%%%%%%%%%%%%%%%%g5G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%sTEG%%%%%%%%%%%%%%%%%%&5G%%%%%%%%%%%%%%%%%%28UG%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%!8%G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%VR#G%%%%%%%%%%%%%"
    + "%%%%%"};
}
function jl_Character_obtainClasses$$create() {
    return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
    + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91 Y#FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,AVF6 F)A6G01GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F# F#A#\' "

    + "I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F. F%G$A,F3G$Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1 J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(AcG%)FP\')G&)\'I&\'I#F(A%J+Y(^+G*^*A$G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%FEI)G)I#G#A$Y&"
    + "J+A$F$J+F?E\'Y#C*A(BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFG[ G&!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[AA1G.H%\'H$G-A0^#"
    + "!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^gA:^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^AA#b=I! BP CP !#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?67676767Y&%Y+U#Y%"
    + "596Y.AQ^; b=:! A-b=7$ A;^-A%-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+F<A&^EA-F1^@ L+^?L)=L0^AL+^HL0b= & &b UG!&A+^b&b   %b O(!&A1F6%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#A#!#B$AQ&E##F(\'F$\'F%\'F8I#G#)^%A%L\'^#;=A\'FUY%A)I#F"
    + "SI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C)A)b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]1A2b&L& 76A1FbA#FWAIF-;=A#G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F\'A#F\'A#F$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0"
    + "A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^-A%=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9b 1# b&X% A*F7A+F)b 9# F\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+b G% L@b !# F>L+&A)F7G,L%Y&b \'# F8A*)\')FVG0Y(A%L5J+A0G$)FNI$G%I#G#Y#1Y%A,1A#F:A(J+A\'G$FEG&)G) J+Y%&I#A*FD\'Y#&A*G#)FQI$G*I#F%Y%G%9A#J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'AcF( & F% F0 F+"
    + "9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&b ,# FVI$G)I#G$)\'F%Y&J+ 9 9\'&AAFQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&A(J+AWF<A#G$I#G%)G&A%J+L#Y$=b  $ FMI$G*)G#9b E! BACAJ+L*A-&b A# F)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A>FZb (% F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF( F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#b ($ L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b ^K b&P1  Q*b (a b&(* b Z\'#b&Z) A(F"
    + "@ J+A%Y#b A! F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q+ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%A=&b W@!&A)b&T, b .5#b&@% ARF$A2F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =.!b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^]A8^dG$=b ;# L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) B( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 16 G( G2A#G( G# G&b 6$ FNA$G(E(A#J+A%&=b Q& FMG%J+A&;b  5 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN="
    + "L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.A$b=>! A$^_AZ^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=7, A+^.A$^,A&b=U! A-b=:! A(^-A5^-A%^YA)^+A\'^IA)^?b 3! ^- b=F!  ^%A$^JA#^\'A$^>A#b=(# A-^/A#^%A%^$A&^$A.^\'b K6 &b   %b   %b 6<#&AJ&b T !&A,&b =$ &A#&b  ;!&A/&b PU!&b @Q b&?) b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   "
    + "%b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b D8 1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
}
function jur_CICharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$ch0 = 0;
    a.$supplement = 0;
}
function jur_CICharSet__init_(var_0) {
    var var_1 = new jur_CICharSet();
    jur_CICharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CICharSet__init_0($this, $ch) {
    jur_LeafSet__init_0($this);
    $this.$ch0 = $ch;
    $this.$supplement = jur_Pattern_getSupplement($ch);
}
function jur_CICharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch0 != $testString.$charAt($strIndex) && $this.$supplement != $testString.$charAt($strIndex) ? (-1) : 1;
}
function jur_SupplCharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$high = 0;
    a.$low = 0;
    a.$ch1 = 0;
}
function jur_SupplCharSet__init_(var_0) {
    var var_1 = new jur_SupplCharSet();
    jur_SupplCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SupplCharSet__init_0($this, $ch) {
    var $chUTF16, var$3;
    jur_LeafSet__init_0($this);
    $this.$charCount = 2;
    $this.$ch1 = $ch;
    $chUTF16 = jl_Character_toChars($ch);
    var$3 = $chUTF16.data;
    $this.$high = var$3[0];
    $this.$low = var$3[1];
}
function jur_SupplCharSet_accepts($this, $strIndex, $testString) {
    var var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$high == $high && $this.$low == $low ? 2 : (-1);
}
function jur_SupplCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6, $ch;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while ($strIndex < $strLength) {
        var$6 = $testStr.$indexOf1($this.$high, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex >= $strLength)
            continue;
        $ch = $testStr.$charAt($strIndex);
        if ($this.$low == $ch && $this.$next.$matches($strIndex + 1 | 0, $testString, $matchResult) >= 0)
            return $strIndex + (-1) | 0;
        $strIndex = $strIndex + 1 | 0;
    }
    return (-1);
}
function jur_SupplCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf1($this.$low, $lastIndex);
            var$7 = var$6 + (-1) | 0;
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$high == $testStr.$charAt(var$7) && $this.$next.$matches(var$7 + 2 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_SupplCharSet_getCodePoint($this) {
    return $this.$ch1;
}
function jur_SupplCharSet_first($this, $set) {
    if ($set instanceof jur_SupplCharSet)
        return $set.$getCodePoint() != $this.$ch1 ? 0 : 1;
    if ($set instanceof jur_SupplRangeSet)
        return $set.$contains($this.$ch1);
    if ($set instanceof jur_CharSet)
        return 0;
    if (!($set instanceof jur_RangeSet))
        return 1;
    return 0;
}
function jur_AbstractCharClass$LazyCategoryScope() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category0 = 0;
    a.$mayContainSupplCodepoints1 = 0;
    a.$containsAllSurrogates0 = 0;
}
function jur_AbstractCharClass$LazyCategoryScope__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_1(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategoryScope__init_0(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategoryScope__init_1($this, $cat, $mayContainSupplCodepoints) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$containsAllSurrogates0 = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope_computeValue($this) {
    var $chCl;
    $chCl = jur_UnicodeCategoryScope__init_($this.$category0);
    if ($this.$containsAllSurrogates0)
        $chCl.$lowHighSurrogates.$set(0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints1;
    return $chCl;
}
var otjc_JSNumber = $rt_classWithoutFields();
var jn_CharBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_CharBufferOverByteBuffer);
function jn_CharBufferOverByteBufferBigEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_CharBufferOverByteBufferBigEndian();
    jn_CharBufferOverByteBufferBigEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_CharBufferOverByteBufferBigEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_CharBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_CharBufferOverByteBufferBigEndian_getChar($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer.$array0.data;
    var$3 = $this.$start;
    var$4 = $index * 2 | 0;
    $value = (var$2[var$3 + var$4 | 0] & 255) << 8 | $this.$byteByffer.$array0.data[($this.$start + var$4 | 0) + 1 | 0] & 255;
    return $value & 65535;
}
function jn_CharBufferOverByteBufferBigEndian_putChar($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer.$array0.data;
    var$4 = $this.$start;
    var$5 = $index * 2 | 0;
    var$3[var$4 + var$5 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start + var$5 | 0) + 1 | 0] = $value << 24 >> 24;
}
var jur_AbstractLineTerminator = $rt_classWithoutFields();
var jur_AbstractLineTerminator_unixLT = null;
var jur_AbstractLineTerminator_unicodeLT = null;
function jur_AbstractLineTerminator__init_($this) {
    jl_Object__init_0($this);
}
function jur_AbstractLineTerminator_getInstance($flag) {
    if (!($flag & 1)) {
        if (jur_AbstractLineTerminator_unicodeLT !== null)
            return jur_AbstractLineTerminator_unicodeLT;
        jur_AbstractLineTerminator_unicodeLT = jur_AbstractLineTerminator$2__init_();
        return jur_AbstractLineTerminator_unicodeLT;
    }
    if (jur_AbstractLineTerminator_unixLT !== null)
        return jur_AbstractLineTerminator_unixLT;
    jur_AbstractLineTerminator_unixLT = jur_AbstractLineTerminator$1__init_();
    return jur_AbstractLineTerminator_unixLT;
}
function jn_CharBufferOverArray() {
    var a = this; jn_CharBufferImpl.call(a);
    a.$readOnly2 = 0;
    a.$start3 = 0;
    a.$array1 = null;
}
function jn_CharBufferOverArray__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_CharBufferOverArray();
    jn_CharBufferOverArray__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_CharBufferOverArray__init_0($this, $start, $capacity, $array, $position, $limit, $readOnly) {
    jn_CharBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start3 = $start;
    $this.$readOnly2 = $readOnly;
    $this.$array1 = $array;
}
function jn_CharBufferOverArray_getChar($this, $index) {
    return $this.$array1.data[$index + $this.$start3 | 0];
}
function jn_LongBufferOverByteBuffer() {
    var a = this; jn_LongBufferImpl.call(a);
    a.$byteByffer1 = null;
    a.$readOnly3 = 0;
    a.$start4 = 0;
}
function jn_LongBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_LongBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start4 = $start;
    $this.$byteByffer1 = $byteBuffer;
    $this.$readOnly3 = $readOnly;
}
function jn_LongBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly3;
}
var jn_LongBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_LongBufferOverByteBuffer);
function jn_LongBufferOverByteBufferLittleEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_LongBufferOverByteBufferLittleEndian();
    jn_LongBufferOverByteBufferLittleEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_LongBufferOverByteBufferLittleEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_LongBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_LongBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2, var$3, var$4;
    var$2 = $this.$byteByffer1.$array0.data;
    var$3 = $this.$start4;
    var$4 = $index * 8 | 0;
    return Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_fromInt(var$2[var$3 + var$4 | 0] & 255), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 1 | 0]), Long_fromInt(255)), 8)), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 2 | 0]), Long_fromInt(255)), 16)), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 3 | 0]), Long_fromInt(255)), 24)), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4
    + var$4 | 0) + 4 | 0]), Long_fromInt(255)), 32)), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 5 | 0]), Long_fromInt(255)), 40)), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 6 | 0]), Long_fromInt(255)), 48)), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 7 | 0]), Long_fromInt(255)), 56));
}
function jn_LongBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer1.$array0.data;
    var$4 = $this.$start4;
    var$5 = $index * 8 | 0;
    var$3[var$4 + var$5 | 0] = Long_lo($value) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 1 | 0] = Long_lo(Long_shr($value, 8)) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 2 | 0] = Long_lo(Long_shr($value, 16)) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 3 | 0] = Long_lo(Long_shr($value, 24)) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 4 | 0] = Long_hi($value) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 5 | 0] = Long_lo(Long_shr($value, 40)) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 6 | 0] = Long_lo(Long_shr($value, 48)) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 7 | 0] = Long_lo(Long_shr($value, 56)) << 24 >> 24;
}
function cbgu_IntMap() {
    var a = this; jl_Object.call(a);
    a.$size6 = 0;
    a.$keyTable1 = null;
    a.$valueTable0 = null;
    a.$zeroValue0 = null;
    a.$hasZeroValue1 = 0;
    a.$loadFactor1 = 0.0;
    a.$threshold1 = 0;
    a.$shift1 = 0;
    a.$mask1 = 0;
}
function cbgu_IntMap__init_(var_0) {
    var var_1 = new cbgu_IntMap();
    cbgu_IntMap__init_0(var_1, var_0);
    return var_1;
}
function cbgu_IntMap__init_1(var_0, var_1) {
    var var_2 = new cbgu_IntMap();
    cbgu_IntMap__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_IntMap__init_0($this, $initialCapacity) {
    cbgu_IntMap__init_2($this, $initialCapacity, 0.800000011920929);
}
function cbgu_IntMap__init_2($this, $initialCapacity, $loadFactor) {
    var $tableSize;
    jl_Object__init_0($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor1 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold1 = $tableSize * $loadFactor | 0;
        $this.$mask1 = $tableSize - 1 | 0;
        $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask1));
        $this.$keyTable1 = $rt_createIntArray($tableSize);
        $this.$valueTable0 = $rt_createArray(jl_Object, $tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(24))).$append2($loadFactor)).$toString()));
}
function cbgu_IntMap_place($this, $item) {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift1));
}
function cbgu_IntMap_locateKey($this, $key) {
    var $keyTable, $i, $other;
    $keyTable = $this.$keyTable1;
    $i = $this.$place($key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask1;
    }
    return $i;
}
function cbgu_IntMap_put($this, $key, $value) {
    var $oldValue, $i, var$5;
    if (!$key) {
        $oldValue = $this.$zeroValue0;
        $this.$zeroValue0 = $value;
        if (!$this.$hasZeroValue1) {
            $this.$hasZeroValue1 = 1;
            $this.$size6 = $this.$size6 + 1 | 0;
        }
        return $oldValue;
    }
    $i = cbgu_IntMap_locateKey($this, $key);
    if ($i >= 0) {
        $oldValue = $this.$valueTable0.data[$i];
        $this.$valueTable0.data[$i] = $value;
        return $oldValue;
    }
    var$5 =  -($i + 1 | 0) | 0;
    $this.$keyTable1.data[var$5] = $key;
    $this.$valueTable0.data[var$5] = $value;
    var$5 = $this.$size6 + 1 | 0;
    $this.$size6 = var$5;
    if (var$5 >= $this.$threshold1)
        cbgu_IntMap_resize($this, $this.$keyTable1.data.length << 1);
    return null;
}
function cbgu_IntMap_putResize($this, $key, $value) {
    var $keyTable, $i, var$5;
    $keyTable = $this.$keyTable1;
    $i = $this.$place($key);
    while (true) {
        var$5 = $keyTable.data;
        if (!var$5[$i])
            break;
        $i = ($i + 1 | 0) & $this.$mask1;
    }
    var$5[$i] = $key;
    $this.$valueTable0.data[$i] = $value;
}
function cbgu_IntMap_get($this, $key) {
    var $i;
    if (!$key)
        return !$this.$hasZeroValue1 ? null : $this.$zeroValue0;
    $i = cbgu_IntMap_locateKey($this, $key);
    return $i < 0 ? null : $this.$valueTable0.data[$i];
}
function cbgu_IntMap_remove($this, $key) {
    var $oldValue, $i, $keyTable, $valueTable, var$6, $mask, $next, var$9, var$10, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue1)
            return null;
        $this.$hasZeroValue1 = 0;
        $oldValue = $this.$zeroValue0;
        $this.$zeroValue0 = null;
        $this.$size6 = $this.$size6 - 1 | 0;
        return $oldValue;
    }
    $i = cbgu_IntMap_locateKey($this, $key);
    if ($i < 0)
        return null;
    $keyTable = $this.$keyTable1;
    $valueTable = $this.$valueTable0;
    var$6 = $valueTable.data;
    $oldValue = var$6[$i];
    $mask = $this.$mask1;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$9 = $keyTable.data;
        var$10 = var$9[$next];
        if (!var$10)
            break;
        $placement = $this.$place(var$10);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$9[$i] = var$10;
            var$6[$i] = var$6[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$9[$i] = 0;
    var$6[$i] = null;
    $this.$size6 = $this.$size6 - 1 | 0;
    return $oldValue;
}
function cbgu_IntMap_containsValue($this, $value, $identity) {
    var $valueTable, var$4, $keyTable, $i;
    a: {
        $valueTable = $this.$valueTable0;
        if ($value === null) {
            if ($this.$hasZeroValue1 && $this.$zeroValue0 === null)
                return 1;
            var$4 = $valueTable.data;
            $keyTable = $this.$keyTable1;
            $i = var$4.length - 1 | 0;
            while (true) {
                if ($i < 0)
                    break a;
                if ($keyTable.data[$i] && var$4[$i] === null)
                    break;
                $i = $i + (-1) | 0;
            }
            return 1;
        }
        if ($identity) {
            if ($value === $this.$zeroValue0)
                return 1;
            var$4 = $valueTable.data;
            $i = var$4.length - 1 | 0;
            while (true) {
                if ($i < 0)
                    break a;
                if (var$4[$i] === $value)
                    break;
                $i = $i + (-1) | 0;
            }
            return 1;
        }
        if ($this.$hasZeroValue1 && $value.$equals($this.$zeroValue0))
            return 1;
        var$4 = $valueTable.data;
        $i = var$4.length - 1 | 0;
        while (true) {
            if ($i < 0)
                break a;
            if ($value.$equals(var$4[$i]))
                return 1;
            $i = $i + (-1) | 0;
        }
    }
    return 0;
}
function cbgu_IntMap_resize($this, $newSize) {
    var $oldCapacity, $oldKeyTable, $oldValueTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable1.data.length;
        $this.$threshold1 = $newSize * $this.$loadFactor1 | 0;
        $this.$mask1 = $newSize - 1 | 0;
        $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask1));
        $oldKeyTable = $this.$keyTable1;
        $oldValueTable = $this.$valueTable0;
        $this.$keyTable1 = $rt_createIntArray($newSize);
        $this.$valueTable0 = $rt_createArray(jl_Object, $newSize);
        if ($this.$size6 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key)
                    cbgu_IntMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
var jnci_Iso8859Encoder = $rt_classWithoutFields(jnci_BufferedEncoder);
function jnci_Iso8859Encoder__init_(var_0) {
    var var_1 = new jnci_Iso8859Encoder();
    jnci_Iso8859Encoder__init_0(var_1, var_0);
    return var_1;
}
function jnci_Iso8859Encoder__init_0($this, $cs) {
    jnci_BufferedEncoder__init_($this, $cs, 1.0, 1.0);
}
function jnci_Iso8859Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, $next, var$13;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $c = var$10[$inPos];
            if (jl_Character_isHighSurrogate($c)) {
                if (var$9 == $inSize) {
                    if ($controller.$hasMoreInput(2)) {
                        var$9 = var$9 + (-1) | 0;
                        break a;
                    }
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $next = var$10[var$9];
                if (!jl_Character_isLowSurrogate($next)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                var$9 = var$9 + (-1) | 0;
                $result = jnc_CoderResult_unmappableForLength(2);
                break a;
            }
            if (jl_Character_isLowSurrogate($c))
                $result = jnc_CoderResult_malformedForLength(1);
            if ($c >= 256) {
                var$9 = var$9 + (-1) | 0;
                $result = jnc_CoderResult_unmappableForLength(1);
                break a;
            }
            var$10 = $outArray.data;
            var$13 = $outPos + 1 | 0;
            var$10[$outPos] = $c << 24 >> 24;
            $inPos = var$9;
            $outPos = var$13;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$013 = null;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaTitleCase$1();
    jur_AbstractCharClass$LazyJavaTitleCase$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1__init_0($this, $this$0) {
    $this.$this$013 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaTitleCase$1_contains($this, $ch) {
    return jl_Character_isTitleCase($ch);
}
function cbgm_Quaternion() {
    var a = this; jl_Object.call(a);
    a.$x0 = 0.0;
    a.$y0 = 0.0;
    a.$z = 0.0;
    a.$w = 0.0;
}
var cbgm_Quaternion_tmp1 = null;
var cbgm_Quaternion_tmp2 = null;
function cbgm_Quaternion_$callClinit() {
    cbgm_Quaternion_$callClinit = $rt_eraseClinit(cbgm_Quaternion);
    cbgm_Quaternion__clinit_();
}
function cbgm_Quaternion__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgm_Quaternion();
    cbgm_Quaternion__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgm_Quaternion__init_1() {
    var var_0 = new cbgm_Quaternion();
    cbgm_Quaternion__init_2(var_0);
    return var_0;
}
function cbgm_Quaternion__init_0($this, $x, $y, $z, $w) {
    cbgm_Quaternion_$callClinit();
    jl_Object__init_0($this);
    $this.$set5($x, $y, $z, $w);
}
function cbgm_Quaternion__init_2($this) {
    cbgm_Quaternion_$callClinit();
    jl_Object__init_0($this);
    $this.$idt();
}
function cbgm_Quaternion_set($this, $x, $y, $z, $w) {
    $this.$x0 = $x;
    $this.$y0 = $y;
    $this.$z = $z;
    $this.$w = $w;
    return $this;
}
function cbgm_Quaternion_idt($this) {
    return $this.$set5(0.0, 0.0, 0.0, 1.0);
}
function cbgm_Quaternion__clinit_() {
    cbgm_Quaternion_tmp1 = cbgm_Quaternion__init_(0.0, 0.0, 0.0, 0.0);
    cbgm_Quaternion_tmp2 = cbgm_Quaternion__init_(0.0, 0.0, 0.0, 0.0);
}
var jnc_StandardCharsets = $rt_classWithoutFields();
var jnc_StandardCharsets_UTF_8 = null;
var jnc_StandardCharsets_US_ASCII = null;
var jnc_StandardCharsets_ISO_8859_1 = null;
var jnc_StandardCharsets_UTF_16 = null;
var jnc_StandardCharsets_UTF_16BE = null;
var jnc_StandardCharsets_UTF_16LE = null;
function jnc_StandardCharsets_$callClinit() {
    jnc_StandardCharsets_$callClinit = $rt_eraseClinit(jnc_StandardCharsets);
    jnc_StandardCharsets__clinit_();
}
function jnc_StandardCharsets__clinit_() {
    jnci_UTF8Charset_$callClinit();
    jnc_StandardCharsets_UTF_8 = jnci_UTF8Charset_INSTANCE;
    jnc_StandardCharsets_US_ASCII = jnci_AsciiCharset__init_();
    jnc_StandardCharsets_ISO_8859_1 = jnci_Iso8859Charset__init_();
    jnc_StandardCharsets_UTF_16 = jnci_UTF16Charset__init_($rt_s(356), 1, 0);
    jnc_StandardCharsets_UTF_16BE = jnci_UTF16Charset__init_($rt_s(357), 0, 0);
    jnc_StandardCharsets_UTF_16LE = jnci_UTF16Charset__init_($rt_s(358), 0, 1);
}
var jn_LongBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_LongBufferOverByteBuffer);
function jn_LongBufferOverByteBufferBigEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_LongBufferOverByteBufferBigEndian();
    jn_LongBufferOverByteBufferBigEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_LongBufferOverByteBufferBigEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_LongBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_LongBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2, var$3, var$4;
    var$2 = $this.$byteByffer1.$array0.data;
    var$3 = $this.$start4;
    var$4 = $index * 8 | 0;
    return Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_shl(Long_and(Long_fromInt(var$2[var$3 + var$4 | 0]), Long_fromInt(255)), 56), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 1 | 0]), Long_fromInt(255)), 48)), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 2 | 0]), Long_fromInt(255)), 40)), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 3 | 0]), Long_fromInt(255)),
    32)), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 4 | 0]), Long_fromInt(255)), 24)), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 5 | 0]), Long_fromInt(255)), 16)), Long_shl(Long_and(Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 6 | 0]), Long_fromInt(255)), 8)), Long_fromInt($this.$byteByffer1.$array0.data[($this.$start4 + var$4 | 0) + 7 | 0] & 255));
}
function jn_LongBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer1.$array0.data;
    var$4 = $this.$start4;
    var$5 = $index * 8 | 0;
    var$3[var$4 + var$5 | 0] = Long_lo(Long_shr($value, 56)) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 1 | 0] = Long_lo(Long_shr($value, 48)) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 2 | 0] = Long_lo(Long_shr($value, 40)) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 3 | 0] = Long_hi($value) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 4 | 0] = Long_lo(Long_shr($value, 24)) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 5 | 0] = Long_lo(Long_shr($value, 16)) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 6 | 0] = Long_lo(Long_shr($value, 8)) << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start4 + var$5 | 0) + 7 | 0] = Long_lo($value) << 24 >> 24;
}
var cbggg_MipMapGenerator = $rt_classWithoutFields();
var cbggg_MipMapGenerator_useHWMipMap = 0;
function cbggg_MipMapGenerator_$callClinit() {
    cbggg_MipMapGenerator_$callClinit = $rt_eraseClinit(cbggg_MipMapGenerator);
    cbggg_MipMapGenerator__clinit_();
}
function cbggg_MipMapGenerator_generateMipMap($target, $pixmap, $textureWidth, $textureHeight) {
    var var$5;
    cbggg_MipMapGenerator_$callClinit();
    if (!cbggg_MipMapGenerator_useHWMipMap) {
        cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
        return;
    }
    a: {
        var$5 = cbg_Gdx_app.$getType2();
        cbg_Application$ApplicationType_$callClinit();
        if (var$5 !== cbg_Application$ApplicationType_Android && cbg_Gdx_app.$getType2() !== cbg_Application$ApplicationType_WebGL) {
            var$5 = cbg_Gdx_app;
            if (var$5.$getType2() !== cbg_Application$ApplicationType_iOS) {
                cbggg_MipMapGenerator_generateMipMapDesktop($target, $pixmap, $textureWidth, $textureHeight);
                break a;
            }
        }
        cbggg_MipMapGenerator_generateMipMapGLES20($target, $pixmap);
    }
}
function cbggg_MipMapGenerator_generateMipMapGLES20($target, $pixmap) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    cbggg_MipMapGenerator_$callClinit();
    var$3 = cbg_Gdx_gl;
    var$4 = $pixmap.$getGLInternalFormat();
    var$5 = $pixmap.$getWidth();
    var$6 = $pixmap.$getHeight();
    var$7 = $pixmap.$getGLFormat();
    var$8 = $pixmap.$getGLType();
    var$9 = $pixmap.$getPixels();
    var$3.$glTexImage2D($target, 0, var$4, var$5, var$6, 0, var$7, var$8, var$9);
    cbg_Gdx_gl20.$glGenerateMipmap($target);
}
function cbggg_MipMapGenerator_generateMipMapDesktop($target, $pixmap, $textureWidth, $textureHeight) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    cbggg_MipMapGenerator_$callClinit();
    a: {
        if (!cbg_Gdx_graphics.$supportsExtension($rt_s(359))) {
            var$5 = cbg_Gdx_graphics;
            if (!var$5.$supportsExtension($rt_s(360)) && cbg_Gdx_gl30 === null) {
                cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
                break a;
            }
        }
        var$5 = cbg_Gdx_gl;
        var$6 = $pixmap.$getGLInternalFormat();
        var$7 = $pixmap.$getWidth();
        var$8 = $pixmap.$getHeight();
        var$9 = $pixmap.$getGLFormat();
        var$10 = $pixmap.$getGLType();
        var$11 = $pixmap.$getPixels();
        var$5.$glTexImage2D($target, 0, var$6, var$7, var$8, 0, var$9, var$10, var$11);
        cbg_Gdx_gl20.$glGenerateMipmap($target);
    }
}
function cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11, $width, $height, $level, $tmp_0, var$16;
    cbggg_MipMapGenerator_$callClinit();
    var$5 = cbg_Gdx_gl;
    var$6 = $pixmap.$getGLInternalFormat();
    var$7 = $pixmap.$getWidth();
    var$8 = $pixmap.$getHeight();
    var$9 = $pixmap.$getGLFormat();
    var$10 = $pixmap.$getGLType();
    var$11 = $pixmap.$getPixels();
    var$5.$glTexImage2D($target, 0, var$6, var$7, var$8, 0, var$9, var$10, var$11);
    if (cbg_Gdx_gl20 === null && $textureWidth != $textureHeight)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(361)));
    $width = $pixmap.$getWidth() / 2 | 0;
    $height = $pixmap.$getHeight() / 2 | 0;
    $level = 1;
    while ($width > 0 && $height > 0) {
        $tmp_0 = cbgg_Pixmap__init_($width, $height, $pixmap.$getFormat());
        cbgg_Pixmap$Blending_$callClinit();
        $tmp_0.$setBlending(cbgg_Pixmap$Blending_None);
        $tmp_0.$drawPixmap1($pixmap, 0, 0, $pixmap.$getWidth(), $pixmap.$getHeight(), 0, 0, $width, $height);
        if ($level > 1)
            $pixmap.$dispose();
        var$5 = cbg_Gdx_gl;
        var$9 = $tmp_0.$getGLInternalFormat();
        var$10 = $tmp_0.$getWidth();
        var$16 = $tmp_0.$getHeight();
        var$6 = $tmp_0.$getGLFormat();
        var$7 = $tmp_0.$getGLType();
        var$11 = $tmp_0.$getPixels();
        var$5.$glTexImage2D($target, $level, var$9, var$10, var$16, 0, var$6, var$7, var$11);
        $width = $tmp_0.$getWidth() / 2 | 0;
        $height = $tmp_0.$getHeight() / 2 | 0;
        $level = $level + 1 | 0;
        $pixmap = $tmp_0;
    }
}
function cbggg_MipMapGenerator__clinit_() {
    cbggg_MipMapGenerator_useHWMipMap = 1;
}
function jur_AbstractCharClass$LazyJavaMirrored$1() {
    jur_AbstractCharClass.call(this);
    this.$this$014 = null;
}
function jur_AbstractCharClass$LazyJavaMirrored$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaMirrored$1();
    jur_AbstractCharClass$LazyJavaMirrored$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaMirrored$1__init_0($this, $this$0) {
    $this.$this$014 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaMirrored$1_contains($this, $ch) {
    return 0;
}
function jnc_UnsupportedCharsetException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName0 = null;
}
function jnc_UnsupportedCharsetException__init_(var_0) {
    var var_1 = new jnc_UnsupportedCharsetException();
    jnc_UnsupportedCharsetException__init_0(var_1, var_0);
    return var_1;
}
function jnc_UnsupportedCharsetException__init_0($this, $charsetName) {
    jl_IllegalArgumentException__init_1($this);
    $this.$charsetName0 = $charsetName;
}
var jn_ShortBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_ShortBuffer__init_($this, $capacity, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    $this.$position3 = $position;
    $this.$limit = $limit;
}
function jn_ShortBuffer_wrap($array, $offset, $length) {
    return jn_ShortBufferOverArray__init_(0, $array.data.length, $array, $offset, $offset + $length | 0, 0);
}
function jn_ShortBuffer_wrap0($array) {
    return jn_ShortBuffer_wrap($array, 0, $array.data.length);
}
function jn_ShortBuffer_put($this, $src) {
    var $length, $pos, $offset, $i, var$6, var$7;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src))
        $rt_throw(jn_BufferOverflowException__init_());
    $length = jn_Buffer_remaining($src);
    $pos = $this.$position3;
    $offset = $src.$position3;
    $i = 0;
    while ($i < $length) {
        var$6 = $pos + 1 | 0;
        var$7 = $offset + 1 | 0;
        $this.$putElement2($pos, $src.$getElement2($offset));
        $i = $i + 1 | 0;
        $pos = var$6;
        $offset = var$7;
    }
    $this.$position3 = $this.$position3 + $length | 0;
    return $this;
}
function jn_ShortBuffer_put0($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(362))).$append0(var$6)).$append($rt_s(294))).$append0(var$5)).$toString()));
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_1(((((jl_StringBuilder__init_()).$append($rt_s(295))).$append0($length)).$append($rt_s(296))).$toString()));
            $pos = $this.$position3;
            $i = 0;
            while ($i < $length) {
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                $this.$putElement2($pos, var$4[$offset]);
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position3 = $this.$position3 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(297))).$append0($offset)).$append($rt_s(51))).$append0(var$4.length)).$append($rt_s(289))).$toString()));
}
function jn_ShortBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_ShortBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_ShortBuffer_limit($this, $newLimit) {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
}
function jn_ShortBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_ShortBuffer_flip0($this) {
    return jn_ShortBuffer_flip($this);
}
function jn_ShortBuffer_clear0($this) {
    return jn_ShortBuffer_clear($this);
}
function jn_ShortBuffer_limit0($this, var$1) {
    return $this.$limit2(var$1);
}
function jn_ShortBuffer_position0($this, var$1) {
    return $this.$position5(var$1);
}
var jn_ShortBufferImpl = $rt_classWithoutFields(jn_ShortBuffer);
function jn_ShortBufferImpl__init_($this, $capacity, $position, $limit) {
    jn_ShortBuffer__init_($this, $capacity, $position, $limit);
}
function jn_ShortBufferImpl_get($this, $index) {
    if ($index >= 0 && $index < $this.$limit)
        return $this.$getElement2($index);
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(309))).$append0($index)).$append($rt_s(51))).$append0($this.$limit)).$append($rt_s(289))).$toString()));
}
function jn_ShortBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_ShortBufferOverByteBuffer() {
    var a = this; jn_ShortBufferImpl.call(a);
    a.$byteByffer2 = null;
    a.$readOnly4 = 0;
    a.$start5 = 0;
}
function jn_ShortBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_ShortBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start5 = $start;
    $this.$byteByffer2 = $byteBuffer;
    $this.$readOnly4 = $readOnly;
}
function jn_ShortBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly4;
}
var jn_ShortBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_ShortBufferOverByteBuffer);
function jn_ShortBufferOverByteBufferLittleEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_ShortBufferOverByteBufferLittleEndian();
    jn_ShortBufferOverByteBufferLittleEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_ShortBufferOverByteBufferLittleEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_ShortBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_ShortBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer2.$array0.data;
    var$3 = $this.$start5;
    var$4 = $index * 2 | 0;
    $value = var$2[var$3 + var$4 | 0] & 255 | ($this.$byteByffer2.$array0.data[($this.$start5 + var$4 | 0) + 1 | 0] & 255) << 8;
    return $value << 16 >> 16;
}
function jn_ShortBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer2.$array0.data;
    var$4 = $this.$start5;
    var$5 = $index * 2 | 0;
    var$3[var$4 + var$5 | 0] = $value << 24 >> 24;
    $this.$byteByffer2.$array0.data[($this.$start5 + var$5 | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
}
function jur_AbstractCharClass$LazyJavaISOControl$1() {
    jur_AbstractCharClass.call(this);
    this.$this$015 = null;
}
function jur_AbstractCharClass$LazyJavaISOControl$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaISOControl$1();
    jur_AbstractCharClass$LazyJavaISOControl$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaISOControl$1__init_0($this, $this$0) {
    $this.$this$015 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaISOControl$1_contains($this, $ch) {
    return jl_Character_isISOControl($ch);
}
var jn_FloatBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_FloatBuffer__init_($this, $capacity, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    $this.$position3 = $position;
    $this.$limit = $limit;
}
function jn_FloatBuffer_wrap($array, $offset, $length) {
    return jn_FloatBufferOverArray__init_(0, $array.data.length, $array, $offset, $offset + $length | 0, 0);
}
function jn_FloatBuffer_wrap0($array) {
    return jn_FloatBuffer_wrap($array, 0, $array.data.length);
}
function jn_FloatBuffer_put($this, $src) {
    var $length, $pos, $offset, $i, var$6, var$7;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src))
        $rt_throw(jn_BufferOverflowException__init_());
    $length = jn_Buffer_remaining($src);
    $pos = $this.$position3;
    $offset = $src.$position3;
    $i = 0;
    while ($i < $length) {
        var$6 = $pos + 1 | 0;
        var$7 = $offset + 1 | 0;
        $this.$putElement3($pos, $src.$getElement3($offset));
        $i = $i + 1 | 0;
        $pos = var$6;
        $offset = var$7;
    }
    $this.$position3 = $this.$position3 + $length | 0;
    return $this;
}
function jn_FloatBuffer_put0($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(363))).$append0(var$6)).$append($rt_s(294))).$append0(var$5)).$toString()));
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_1(((((jl_StringBuilder__init_()).$append($rt_s(295))).$append0($length)).$append($rt_s(296))).$toString()));
            $pos = $this.$position3;
            $i = 0;
            while ($i < $length) {
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                $this.$putElement3($pos, var$4[$offset]);
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position3 = $this.$position3 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(297))).$append0($offset)).$append($rt_s(51))).$append0(var$4.length)).$append($rt_s(289))).$toString()));
}
function jn_FloatBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_FloatBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_FloatBuffer_limit($this, $newLimit) {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
}
function jn_FloatBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_FloatBuffer_flip0($this) {
    return jn_FloatBuffer_flip($this);
}
function jn_FloatBuffer_clear0($this) {
    return jn_FloatBuffer_clear($this);
}
function jn_FloatBuffer_limit0($this, var$1) {
    return $this.$limit3(var$1);
}
function jn_FloatBuffer_position0($this, var$1) {
    return $this.$position6(var$1);
}
var jn_FloatBufferImpl = $rt_classWithoutFields(jn_FloatBuffer);
function jn_FloatBufferImpl__init_($this, $capacity, $position, $limit) {
    jn_FloatBuffer__init_($this, $capacity, $position, $limit);
}
function jn_FloatBufferImpl_get($this, $index) {
    if ($index >= 0 && $index < $this.$limit)
        return $this.$getElement3($index);
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(309))).$append0($index)).$append($rt_s(51))).$append0($this.$limit)).$append($rt_s(289))).$toString()));
}
function jn_FloatBufferImpl_put($this, $index, $b) {
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($index >= 0 && $index < $this.$limit) {
        $this.$putElement3($index, $b);
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(309))).$append0($index)).$append($rt_s(51))).$append0($this.$limit)).$append($rt_s(289))).$toString()));
}
function jn_FloatBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_FloatBufferOverByteBuffer() {
    var a = this; jn_FloatBufferImpl.call(a);
    a.$byteByffer3 = null;
    a.$readOnly5 = 0;
    a.$start6 = 0;
}
function jn_FloatBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_FloatBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start6 = $start;
    $this.$byteByffer3 = $byteBuffer;
    $this.$readOnly5 = $readOnly;
}
function jn_FloatBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly5;
}
function jur_UEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter0 = 0;
}
function jur_UEOLSet__init_(var_0) {
    var var_1 = new jur_UEOLSet();
    jur_UEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter0 = $counter;
}
function jur_UEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter0, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    if (($rightBound - $strIndex | 0) == 1 && $testString.$charAt($strIndex) == 10) {
        $matchResult.$setConsumed($this.$consCounter0, 1);
        return $this.$next.$matches($strIndex + 1 | 0, $testString, $matchResult);
    }
    return (-1);
}
function jur_UEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter0) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter0, (-1));
    return $res;
}
function jur_UCICharSet() {
    jur_LeafSet.call(this);
    this.$ch2 = 0;
}
function jur_UCICharSet__init_(var_0) {
    var var_1 = new jur_UCICharSet();
    jur_UCICharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCICharSet__init_0($this, $ch) {
    jur_LeafSet__init_0($this);
    $this.$ch2 = jl_Character_toLowerCase(jl_Character_toUpperCase($ch));
}
function jur_UCICharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch2 != jl_Character_toLowerCase(jl_Character_toUpperCase($testString.$charAt($strIndex))) ? (-1) : 1;
}
var cbgggf_FreeType$GlyphMetrics = $rt_classWithoutFields(cbgggf_FreeType$Pointer);
function cbgggf_FreeType$GlyphMetrics__init_(var_0) {
    var var_1 = new cbgggf_FreeType$GlyphMetrics();
    cbgggf_FreeType$GlyphMetrics__init_0(var_1, var_0);
    return var_1;
}
function cbgggf_FreeType$GlyphMetrics__init_0($this, $address) {
    cbgggf_FreeType$Pointer__init_0($this, $address);
}
function cbgggf_FreeType$GlyphMetrics_getHeight($this) {
    return Module._c_GlyphMetrics_getHeight($this.$address);
}
function cbgggf_FreeType$GlyphMetrics_getHoriAdvance($this) {
    return Module._c_GlyphMetrics_getHoriAdvance($this.$address);
}
function cbgu_Array() {
    var a = this; jl_Object.call(a);
    a.$items = null;
    a.$size1 = 0;
    a.$ordered = 0;
    a.$iterable = null;
}
function cbgu_Array__init_() {
    var var_0 = new cbgu_Array();
    cbgu_Array__init_0(var_0);
    return var_0;
}
function cbgu_Array__init_1(var_0) {
    var var_1 = new cbgu_Array();
    cbgu_Array__init_2(var_1, var_0);
    return var_1;
}
function cbgu_Array__init_3(var_0, var_1) {
    var var_2 = new cbgu_Array();
    cbgu_Array__init_4(var_2, var_0, var_1);
    return var_2;
}
function cbgu_Array__init_0($this) {
    cbgu_Array__init_4($this, 1, 16);
}
function cbgu_Array__init_2($this, $capacity) {
    cbgu_Array__init_4($this, 1, $capacity);
}
function cbgu_Array__init_4($this, $ordered, $capacity) {
    jl_Object__init_0($this);
    $this.$ordered = $ordered;
    $this.$items = $rt_createArray(jl_Object, $capacity);
}
function cbgu_Array_add($this, $value) {
    var $items, var$3, var$4;
    $items = $this.$items;
    var$3 = $items.data;
    if ($this.$size1 == var$3.length)
        $items = $this.$resize0(jl_Math_max(8, $this.$size1 * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size1;
    $this.$size1 = var$4 + 1 | 0;
    var$3[var$4] = $value;
}
function cbgu_Array_addAll($this, $array) {
    $this.$addAll($array.$items, 0, $array.$size1);
}
function cbgu_Array_addAll0($this, $array, $start, $count) {
    if (($start + $count | 0) <= $array.$size1) {
        $this.$addAll($array.$items, $start, $count);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((((((jl_StringBuilder__init_()).$append($rt_s(364))).$append0($start)).$append($rt_s(365))).$append0($count)).$append($rt_s(366))).$append0($array.$size1)).$toString()));
}
function cbgu_Array_addAll1($this, $array, $start, $count) {
    var $items, var$5, $sizeNeeded;
    $items = $this.$items;
    var$5 = $items.data;
    $sizeNeeded = $this.$size1 + $count | 0;
    if ($sizeNeeded > var$5.length)
        $items = $this.$resize0(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size1 * 1.75 | 0));
    jl_System_arraycopy($array, $start, $items, $this.$size1, $count);
    $this.$size1 = $sizeNeeded;
}
function cbgu_Array_get($this, $index) {
    if ($index < $this.$size1)
        return $this.$items.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(367))).$append0($index)).$append($rt_s(368))).$append0($this.$size1)).$toString()));
}
function cbgu_Array_removeRange($this, $start, $end) {
    var $n, $items, $count, $lastIndex, var$7, $i;
    $n = $this.$size1;
    if ($end >= $n)
        $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(369))).$append0($end)).$append($rt_s(368))).$append0($this.$size1)).$toString()));
    if ($start > $end)
        $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(370))).$append0($start)).$append($rt_s(371))).$append0($end)).$toString()));
    $items = $this.$items;
    $count = ($end - $start | 0) + 1 | 0;
    $lastIndex = $n - $count | 0;
    if ($this.$ordered) {
        var$7 = $start + $count | 0;
        jl_System_arraycopy($items, var$7, $items, $start, $n - var$7 | 0);
    } else {
        $i = jl_Math_max($lastIndex, $end + 1 | 0);
        jl_System_arraycopy($items, $i, $items, $start, $n - $i | 0);
    }
    $i = $lastIndex;
    while ($i < $n) {
        $items.data[$i] = null;
        $i = $i + 1 | 0;
    }
    $this.$size1 = $lastIndex;
}
function cbgu_Array_pop($this) {
    var $item;
    if (!$this.$size1)
        $rt_throw(jl_IllegalStateException__init_($rt_s(372)));
    $this.$size1 = $this.$size1 - 1 | 0;
    $item = $this.$items.data[$this.$size1];
    $this.$items.data[$this.$size1] = null;
    return $item;
}
function cbgu_Array_peek($this) {
    if (!$this.$size1)
        $rt_throw(jl_IllegalStateException__init_($rt_s(372)));
    return $this.$items.data[$this.$size1 - 1 | 0];
}
function cbgu_Array_first($this) {
    if (!$this.$size1)
        $rt_throw(jl_IllegalStateException__init_($rt_s(372)));
    return $this.$items.data[0];
}
function cbgu_Array_clear($this) {
    ju_Arrays_fill3($this.$items, 0, $this.$size1, null);
    $this.$size1 = 0;
}
function cbgu_Array_ensureCapacity($this, $additionalCapacity) {
    var $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(373))).$append0($additionalCapacity)).$toString()));
    $sizeNeeded = $this.$size1 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items.data.length)
        $this.$resize0(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size1 * 1.75 | 0));
    return $this.$items;
}
function cbgu_Array_resize($this, $newSize) {
    var $items, $newItems, var$4;
    $items = $this.$items;
    $newItems = cbgur_ArrayReflection_newInstance((jl_Object_getClass($items)).$getComponentType(), $newSize);
    var$4 = $newItems.data;
    jl_System_arraycopy($items, 0, $newItems, 0, jl_Math_min($this.$size1, var$4.length));
    $this.$items = $newItems;
    return $newItems;
}
function cbgu_Array_iterator($this) {
    if (cbgu_Collections_allocateIterators)
        return cbgu_Array$ArrayIterator__init_($this, 1);
    if ($this.$iterable === null)
        $this.$iterable = cbgu_Array$ArrayIterable__init_($this);
    return $this.$iterable.$iterator0();
}
function cbgu_Array_truncate($this, $newSize) {
    var $i;
    if ($newSize < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(374))).$append0($newSize)).$toString()));
    if ($this.$size1 <= $newSize)
        return;
    $i = $newSize;
    while ($i < $this.$size1) {
        $this.$items.data[$i] = null;
        $i = $i + 1 | 0;
    }
    $this.$size1 = $newSize;
}
function cbgu_Array_hashCode($this) {
    var $items, $h, $i, $n, var$5, $item;
    if (!$this.$ordered)
        return jl_Object_hashCode($this);
    $items = $this.$items;
    $h = 1;
    $i = 0;
    $n = $this.$size1;
    while ($i < $n) {
        var$5 = $items.data;
        $h = $h * 31 | 0;
        $item = var$5[$i];
        if ($item !== null)
            $h = $h + $item.$hashCode0() | 0;
        $i = $i + 1 | 0;
    }
    return $h;
}
function cbgu_Array_equals($this, $object) {
    var $array, $n, $items1, $items2, $i, var$7, $o1, $o2;
    if ($object === $this)
        return 1;
    if (!$this.$ordered)
        return 0;
    if (!($object instanceof cbgu_Array))
        return 0;
    $array = $object;
    if (!$array.$ordered)
        return 0;
    $n = $this.$size1;
    if ($n != $array.$size1)
        return 0;
    $items1 = $this.$items;
    $items2 = $array.$items;
    $i = 0;
    a: {
        while ($i < $n) {
            b: {
                var$7 = $items2.data;
                $o1 = $items1.data[$i];
                $o2 = var$7[$i];
                if ($o1 !== null) {
                    if ($o1.$equals($o2))
                        break b;
                    else
                        break a;
                }
                if ($o2 !== null)
                    break a;
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
}
var jnci_Iso8859Charset = $rt_classWithoutFields(jnc_Charset);
function jnci_Iso8859Charset__init_() {
    var var_0 = new jnci_Iso8859Charset();
    jnci_Iso8859Charset__init_0(var_0);
    return var_0;
}
function jnci_Iso8859Charset__init_0($this) {
    jnc_Charset__init_($this, $rt_s(375), $rt_createArray(jl_String, 0));
}
function jnci_Iso8859Charset_newEncoder($this) {
    return jnci_Iso8859Encoder__init_($this);
}
function jur_AtomicFSet() {
    jur_FSet.call(this);
    this.$index0 = 0;
}
function jur_AtomicFSet__init_(var_0) {
    var var_1 = new jur_AtomicFSet();
    jur_AtomicFSet__init_0(var_1, var_0);
    return var_1;
}
function jur_AtomicFSet__init_0($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_AtomicFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    $this.$index0 = $stringIndex;
    return $stringIndex;
}
function jur_AtomicFSet_getIndex($this) {
    return $this.$index0;
}
function jur_AtomicFSet_hasConsumed($this, $mr) {
    return 0;
}
function cbgg_Texture$TextureWrap() {
    jl_Enum.call(this);
    this.$glEnum = 0;
}
var cbgg_Texture$TextureWrap_MirroredRepeat = null;
var cbgg_Texture$TextureWrap_ClampToEdge = null;
var cbgg_Texture$TextureWrap_Repeat = null;
var cbgg_Texture$TextureWrap_$VALUES = null;
function cbgg_Texture$TextureWrap_$callClinit() {
    cbgg_Texture$TextureWrap_$callClinit = $rt_eraseClinit(cbgg_Texture$TextureWrap);
    cbgg_Texture$TextureWrap__clinit_();
}
function cbgg_Texture$TextureWrap__init_(var_0, var_1, var_2) {
    var var_3 = new cbgg_Texture$TextureWrap();
    cbgg_Texture$TextureWrap__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Texture$TextureWrap_values() {
    cbgg_Texture$TextureWrap_$callClinit();
    return cbgg_Texture$TextureWrap_$VALUES.$clone();
}
function cbgg_Texture$TextureWrap__init_0($this, var$1, var$2, $glEnum) {
    cbgg_Texture$TextureWrap_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$glEnum = $glEnum;
}
function cbgg_Texture$TextureWrap_getGLEnum($this) {
    return $this.$glEnum;
}
function cbgg_Texture$TextureWrap__clinit_() {
    cbgg_Texture$TextureWrap_MirroredRepeat = cbgg_Texture$TextureWrap__init_($rt_s(376), 0, 33648);
    cbgg_Texture$TextureWrap_ClampToEdge = cbgg_Texture$TextureWrap__init_($rt_s(377), 1, 33071);
    cbgg_Texture$TextureWrap_Repeat = cbgg_Texture$TextureWrap__init_($rt_s(378), 2, 10497);
    cbgg_Texture$TextureWrap_$VALUES = $rt_createArrayFromData(cbgg_Texture$TextureWrap, [cbgg_Texture$TextureWrap_MirroredRepeat, cbgg_Texture$TextureWrap_ClampToEdge, cbgg_Texture$TextureWrap_Repeat]);
}
function jur_LowSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$low0 = 0;
}
function jur_LowSurrogateCharSet__init_(var_0) {
    var var_1 = new jur_LowSurrogateCharSet();
    jur_LowSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LowSurrogateCharSet__init_0($this, $low) {
    jur_JointSet__init_0($this);
    $this.$low0 = $low;
}
function jur_LowSurrogateCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_LowSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4, $low, $high;
    var$4 = $stringIndex + 1 | 0;
    if (var$4 > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $low = $testString.$charAt($stringIndex);
    if ($stringIndex > $matchResult.$getLeftBound()) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    if ($this.$low0 != $low)
        return (-1);
    return $this.$next.$matches(var$4, $testString, $matchResult);
}
function jur_LowSurrogateCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $startStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$7 = $testStr.$indexOf1($this.$low0, $strIndex);
        if (var$7 < 0)
            return (-1);
        if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
            $strIndex = var$7 + 1 | 0;
            continue;
        }
        var$8 = $this.$next;
        $strIndex = var$7 + 1 | 0;
        if (var$8.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$7;
}
function jur_LowSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $startStr, $testStr, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $startStr = $matchResult.$getLeftBound();
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf1($this.$low0, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
                $lastIndex = var$7 + (-2) | 0;
                continue;
            }
            if ($this.$next.$matches(var$7 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_LowSurrogateCharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_HighSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_LowSurrogateCharSet))
        return 1;
    return $set.$low0 != $this.$low0 ? 0 : 1;
}
function jur_LowSurrogateCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
var jl_AssertionError = $rt_classWithoutFields(jl_Error);
function jl_AssertionError__init_(var_0, var_1) {
    var var_2 = new jl_AssertionError();
    jl_AssertionError__init_0(var_2, var_0, var_1);
    return var_2;
}
function jl_AssertionError__init_0($this, $message, $cause) {
    jl_Error__init_0($this, $message, $cause);
}
function jur_CompositeGroupQuantifierSet() {
    var a = this; jur_GroupQuantifierSet.call(a);
    a.$quantifier = null;
    a.$setCounter = 0;
}
function jur_CompositeGroupQuantifierSet__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_CompositeGroupQuantifierSet();
    jur_CompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$quantifier = $quant;
    $this.$setCounter = $setCounter;
}
function jur_CompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $enterCounter, var$5, var$6, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier.$max1())
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    var$5 = $this.$setCounter;
    var$6 = $enterCounter + 1 | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $nextIndex;
    }
    var$5 = $this.$setCounter;
    var$6 = var$6 + (-1) | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    if (var$6 >= $this.$quantifier.$min1())
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $matchResult.$setEnterCounter($this.$setCounter, 0);
    return (-1);
}
var jur_RelCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet);
function jur_RelCompositeGroupQuantifierSet__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_RelCompositeGroupQuantifierSet();
    jur_RelCompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_RelCompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter);
}
function jur_RelCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $enterCounter, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier.$max1()) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    }
    if ($enterCounter < $this.$quantifier.$min1()) {
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    } else {
        $nextIndex = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            $matchResult.$setEnterCounter($this.$setCounter, 0);
            return $nextIndex;
        }
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    return $nextIndex;
}
var cbggg_Batch = $rt_classWithoutFields(0);
var ju_List = $rt_classWithoutFields(0);
function ju_AbstractList() {
    ju_AbstractCollection.call(this);
    this.$modCount = 0;
}
function ju_AbstractList__init_($this) {
    ju_AbstractCollection__init_($this);
}
function ju_AbstractList_iterator($this) {
    return ju_AbstractList$1__init_($this);
}
var ju_RandomAccess = $rt_classWithoutFields(0);
function ju_ArrayList() {
    var a = this; ju_AbstractList.call(a);
    a.$array2 = null;
    a.$size7 = 0;
}
function ju_ArrayList__init_() {
    var var_0 = new ju_ArrayList();
    ju_ArrayList__init_0(var_0);
    return var_0;
}
function ju_ArrayList__init_1(var_0) {
    var var_1 = new ju_ArrayList();
    ju_ArrayList__init_2(var_1, var_0);
    return var_1;
}
function ju_ArrayList__init_0($this) {
    ju_ArrayList__init_2($this, 10);
}
function ju_ArrayList__init_2($this, $initialCapacity) {
    ju_AbstractList__init_($this);
    $this.$array2 = $rt_createArray(jl_Object, $initialCapacity);
}
function ju_ArrayList_ensureCapacity($this, $minCapacity) {
    var $newLength;
    if ($this.$array2.data.length < $minCapacity) {
        $newLength = $this.$array2.data.length >= 1073741823 ? 2147483647 : jl_Math_max($minCapacity, jl_Math_max($this.$array2.data.length * 2 | 0, 5));
        $this.$array2 = ju_Arrays_copyOf1($this.$array2, $newLength);
    }
}
function ju_ArrayList_get($this, $index) {
    ju_ArrayList_checkIndex($this, $index);
    return $this.$array2.data[$index];
}
function ju_ArrayList_size($this) {
    return $this.$size7;
}
function ju_ArrayList_add($this, $element) {
    var var$2, var$3;
    $this.$ensureCapacity($this.$size7 + 1 | 0);
    var$2 = $this.$array2.data;
    var$3 = $this.$size7;
    $this.$size7 = var$3 + 1 | 0;
    var$2[var$3] = $element;
    $this.$modCount = $this.$modCount + 1 | 0;
    return 1;
}
function ju_ArrayList_add0($this, $index, $element) {
    var $i;
    ju_ArrayList_checkIndexForAdd($this, $index);
    $this.$ensureCapacity($this.$size7 + 1 | 0);
    $i = $this.$size7;
    while ($i > $index) {
        $this.$array2.data[$i] = $this.$array2.data[$i - 1 | 0];
        $i = $i + (-1) | 0;
    }
    $this.$array2.data[$index] = $element;
    $this.$size7 = $this.$size7 + 1 | 0;
    $this.$modCount = $this.$modCount + 1 | 0;
}
function ju_ArrayList_remove($this, $i) {
    var $old, var$3, var$4, $i_0;
    ju_ArrayList_checkIndex($this, $i);
    $old = $this.$array2.data[$i];
    $this.$size7 = $this.$size7 - 1 | 0;
    while ($i < $this.$size7) {
        var$3 = $this.$array2.data;
        var$4 = $this.$array2.data;
        $i_0 = $i + 1 | 0;
        var$3[$i] = var$4[$i_0];
        $i = $i_0;
    }
    $this.$array2.data[$this.$size7] = null;
    $this.$modCount = $this.$modCount + 1 | 0;
    return $old;
}
function ju_ArrayList_checkIndex($this, $index) {
    if ($index >= 0 && $index < $this.$size7)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function ju_ArrayList_checkIndexForAdd($this, $index) {
    if ($index >= 0 && $index <= $this.$size7)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
var jl_IllegalMonitorStateException = $rt_classWithoutFields(jl_RuntimeException);
function jl_IllegalMonitorStateException__init_() {
    var var_0 = new jl_IllegalMonitorStateException();
    jl_IllegalMonitorStateException__init_0(var_0);
    return var_0;
}
function jl_IllegalMonitorStateException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function jur_CompositeQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
    this.$quantifier0 = null;
}
function jur_CompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CompositeQuantifierSet();
    jur_CompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$quantifier0 = $quant;
}
function jur_CompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, $shift;
    $min = $this.$quantifier0.$min1();
    $max = $this.$quantifier0.$max1();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while ($i < $max) {
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break a;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            while (true) {
                if ($i < $min)
                    return (-1);
                $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
                $i = $i + (-1) | 0;
            }
            return $shift;
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
var cbgggf_FreeTypeFontGenerator$1 = $rt_classWithoutFields();
var cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting = null;
function cbgggf_FreeTypeFontGenerator$1_$callClinit() {
    cbgggf_FreeTypeFontGenerator$1_$callClinit = $rt_eraseClinit(cbgggf_FreeTypeFontGenerator$1);
    cbgggf_FreeTypeFontGenerator$1__clinit_();
}
function cbgggf_FreeTypeFontGenerator$1__clinit_() {
    cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting = $rt_createIntArray((cbgggf_FreeTypeFontGenerator$Hinting_values()).data.length);
    cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting.data[jl_Enum_ordinal(cbgggf_FreeTypeFontGenerator$Hinting_None)] = 1;
    cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting.data[jl_Enum_ordinal(cbgggf_FreeTypeFontGenerator$Hinting_Slight)] = 2;
    cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting.data[jl_Enum_ordinal(cbgggf_FreeTypeFontGenerator$Hinting_Medium)] = 3;
    cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting.data[jl_Enum_ordinal(cbgggf_FreeTypeFontGenerator$Hinting_Full)] = 4;
    cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting.data[jl_Enum_ordinal(cbgggf_FreeTypeFontGenerator$Hinting_AutoSlight)] = 5;
    cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting.data[jl_Enum_ordinal(cbgggf_FreeTypeFontGenerator$Hinting_AutoMedium)] = 6;
    cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting.data[jl_Enum_ordinal(cbgggf_FreeTypeFontGenerator$Hinting_AutoFull)] = 7;
}
function jur_SupplRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$chars0 = null;
    a.$alt2 = 0;
}
function jur_SupplRangeSet__init_(var_0) {
    var var_1 = new jur_SupplRangeSet();
    jur_SupplRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SupplRangeSet__init_0($this, $cc) {
    jur_JointSet__init_0($this);
    $this.$chars0 = $cc.$getInstance();
    $this.$alt2 = $cc.$alt0;
}
function jur_SupplRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, $offset, var$8, $low;
    $strLength = $matchResult.$getRightBound();
    if ($stringIndex < $strLength) {
        var$5 = $stringIndex + 1 | 0;
        $high = $testString.$charAt($stringIndex);
        if ($this.$contains($high)) {
            $offset = $this.$next.$matches(var$5, $testString, $matchResult);
            if ($offset > 0)
                return $offset;
        }
        if (var$5 < $strLength) {
            var$8 = var$5 + 1 | 0;
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low) && $this.$contains(jl_Character_toCodePoint($high, $low)))
                return $this.$next.$matches(var$8, $testString, $matchResult);
        }
    }
    return (-1);
}
function jur_SupplRangeSet_contains($this, $ch) {
    return $this.$chars0.$contains($ch);
}
function jur_SupplRangeSet_first($this, $set) {
    if ($set instanceof jur_SupplCharSet)
        return jur_AbstractCharClass_intersects($this.$chars0, $set.$getCodePoint());
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects($this.$chars0, $set.$getChar0());
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars0, $set.$chars0);
    if (!($set instanceof jur_RangeSet))
        return 1;
    return jur_AbstractCharClass_intersects0($this.$chars0, $set.$getChars0());
}
function jur_SupplRangeSet_getChars($this) {
    return $this.$chars0;
}
function jur_SupplRangeSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_SupplRangeSet_hasConsumed($this, $mr) {
    return 1;
}
var jur_RelAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet);
function jur_RelAltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_RelAltGroupQuantifierSet();
    jur_RelAltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_RelAltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_RelAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    return $nextIndex;
}
var otcir_Flags = $rt_classWithoutFields();
function otcir_Flags_getModifiers($flags, $access) {
    var $modifiers, var$4, var$5;
    a: {
        $modifiers = 0;
        switch ($access) {
            case 1:
                $modifiers = 2;
                break a;
            case 2:
                $modifiers = 4;
                break a;
            case 3:
                $modifiers = 1;
                break a;
            default:
        }
    }
    var$4 = $flags >>> 6;
    var$5 = $modifiers | var$4 & 8;
    var$5 = var$5 | $flags << 2 & 16;
    var$4 = var$5 | var$4 & 32;
    var$4 = var$4 | $flags >>> 8 & 64;
    var$4 = var$4 | $flags >>> 5 & 128;
    var$4 = var$4 | $flags & 256;
    var$4 = var$4 | $flags << 8 & 512;
    var$4 = var$4 | $flags << 10 & 1024;
    var$4 = var$4 | $flags << 1 & 2048;
    return var$4;
}
function jl_String() {
    var a = this; jl_Object.call(a);
    a.$characters = null;
    a.$hashCode1 = 0;
}
var jl_String_CASE_INSENSITIVE_ORDER = null;
function jl_String_$callClinit() {
    jl_String_$callClinit = $rt_eraseClinit(jl_String);
    jl_String__clinit_();
}
function jl_String__init_(var_0) {
    var var_1 = new jl_String();
    jl_String__init_1(var_1, var_0);
    return var_1;
}
function jl_String__init_0(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_3(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_1($this, $characters) {
    var var$2, var$3, $i;
    jl_String_$callClinit();
    var$2 = $characters.data;
    jl_Object__init_0($this);
    var$3 = var$2.length;
    $this.$characters = $rt_createCharArray(var$3);
    $i = 0;
    while ($i < var$3) {
        $this.$characters.data[$i] = var$2[$i];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_2($this, $value, $offset, $count) {
    var $i, var$5;
    jl_String_$callClinit();
    jl_Object__init_0($this);
    $this.$characters = $rt_createCharArray($count);
    $i = 0;
    while ($i < $count) {
        var$5 = $value.data;
        $this.$characters.data[$i] = var$5[$i + $offset | 0];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_4($this, $codePoints, $offset, $count) {
    var $charCount, $i, var$6, var$7, $codePoint, var$9, var$10;
    jl_String_$callClinit();
    jl_Object__init_0($this);
    $this.$characters = $rt_createCharArray($count * 2 | 0);
    $charCount = 0;
    $i = 0;
    while ($i < $count) {
        var$6 = $codePoints.data;
        var$7 = $offset + 1 | 0;
        $codePoint = var$6[$offset];
        if ($codePoint < 65536) {
            var$6 = $this.$characters.data;
            var$9 = $charCount + 1 | 0;
            var$6[$charCount] = $codePoint & 65535;
        } else {
            var$6 = $this.$characters.data;
            var$10 = $charCount + 1 | 0;
            var$6[$charCount] = jl_Character_highSurrogate($codePoint);
            var$6 = $this.$characters.data;
            var$9 = var$10 + 1 | 0;
            var$6[var$10] = jl_Character_lowSurrogate($codePoint);
        }
        $i = $i + 1 | 0;
        $offset = var$7;
        $charCount = var$9;
    }
    if ($charCount < $this.$characters.data.length)
        $this.$characters = ju_Arrays_copyOf0($this.$characters, $charCount);
}
function jl_String_charAt($this, $index) {
    if ($index >= 0 && $index < $this.$characters.data.length)
        return $this.$characters.data[$index];
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_String_length($this) {
    return $this.$characters.data.length;
}
function jl_String_isEmpty($this) {
    return $this.$characters.data.length ? 0 : 1;
}
function jl_String_startsWith($this, $prefix, $toffset) {
    var $i, var$4, var$5;
    if (($toffset + $prefix.$length() | 0) > $this.$length())
        return 0;
    $i = 0;
    while ($i < $prefix.$length()) {
        var$4 = $prefix.$charAt($i);
        var$5 = $toffset + 1 | 0;
        if (var$4 != $this.$charAt($toffset))
            return 0;
        $i = $i + 1 | 0;
        $toffset = var$5;
    }
    return 1;
}
function jl_String_startsWith0($this, $prefix) {
    if ($this === $prefix)
        return 1;
    return $this.$startsWith0($prefix, 0);
}
function jl_String_endsWith($this, $suffix) {
    var $j, $i, var$4, var$5;
    if ($this === $suffix)
        return 1;
    if ($suffix.$length() > $this.$length())
        return 0;
    $j = 0;
    $i = $this.$length() - $suffix.$length() | 0;
    while ($i < $this.$length()) {
        var$4 = $this.$charAt($i);
        var$5 = $j + 1 | 0;
        if (var$4 != $suffix.$charAt($j))
            return 0;
        $i = $i + 1 | 0;
        $j = var$5;
    }
    return 1;
}
function jl_String_indexOf($this, $ch, $fromIndex) {
    var $i, $bmpChar, $hi, $lo;
    $i = jl_Math_max(0, $fromIndex);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i >= $this.$characters.data.length)
                return (-1);
            if ($this.$characters.data[$i] == $bmpChar)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i >= ($this.$characters.data.length - 1 | 0))
            return (-1);
        if ($this.$characters.data[$i] == $hi && $this.$characters.data[$i + 1 | 0] == $lo)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_String_lastIndexOf($this, $ch, $fromIndex) {
    var $i, $bmpChar, $hi, $lo, var$7, var$8;
    $i = jl_Math_min($fromIndex, $this.$length() - 1 | 0);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i < 0)
                return (-1);
            if ($this.$characters.data[$i] == $bmpChar)
                break;
            $i = $i + (-1) | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i < 1)
            return (-1);
        if ($this.$characters.data[$i] == $lo) {
            var$7 = $this.$characters.data;
            var$8 = $i - 1 | 0;
            if (var$7[var$8] == $hi)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return var$8;
}
function jl_String_lastIndexOf0($this, $ch) {
    return $this.$lastIndexOf1($ch, $this.$length() - 1 | 0);
}
function jl_String_indexOf0($this, $str, $fromIndex) {
    var $i, $toIndex, $j;
    $i = jl_Math_max(0, $fromIndex);
    $toIndex = $this.$length() - $str.$length() | 0;
    a: while (true) {
        if ($i > $toIndex)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_String_lastIndexOf1($this, $str, $fromIndex) {
    var $i, $j;
    $i = jl_Math_min($fromIndex, $this.$length() - $str.$length() | 0);
    a: while (true) {
        if ($i < 0)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + (-1) | 0;
    }
    return $i;
}
function jl_String_substring($this, $beginIndex, $endIndex) {
    if ($beginIndex > $endIndex)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    return jl_String__init_0($this.$characters, $beginIndex, $endIndex - $beginIndex | 0);
}
function jl_String_substring0($this, $beginIndex) {
    return $this.$substring($beginIndex, $this.$length());
}
function jl_String_subSequence($this, $beginIndex, $endIndex) {
    return $this.$substring($beginIndex, $endIndex);
}
function jl_String_contains($this, $s) {
    var $sz, $i, $j;
    $sz = $this.$length() - $s.$length() | 0;
    $i = 0;
    while ($i <= $sz) {
        $j = 0;
        while (true) {
            if ($j >= $s.$length())
                return 1;
            if ($this.$charAt($i + $j | 0) != $s.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return 0;
}
function jl_String_replace($this, $target, $replacement) {
    var $sb, $sz, $i, $j;
    $sb = jl_StringBuilder__init_();
    $sz = $this.$length() - $target.$length() | 0;
    $i = 0;
    while ($i <= $sz) {
        $j = 0;
        a: {
            while (true) {
                if ($j >= $target.$length()) {
                    $sb.$append9($replacement);
                    $i = $i + ($target.$length() - 1 | 0) | 0;
                    break a;
                }
                if ($this.$charAt($i + $j | 0) != $target.$charAt($j))
                    break;
                $j = $j + 1 | 0;
            }
            $sb.$append8($this.$charAt($i));
        }
        $i = $i + 1 | 0;
    }
    $sb.$append9($this.$substring0($i));
    return $sb.$toString();
}
function jl_String_trim($this) {
    var $lower, $upper;
    $lower = 0;
    $upper = $this.$length() - 1 | 0;
    a: {
        while ($lower <= $upper) {
            if ($this.$charAt($lower) > 32)
                break a;
            $lower = $lower + 1 | 0;
        }
    }
    while ($lower <= $upper && $this.$charAt($upper) <= 32) {
        $upper = $upper + (-1) | 0;
    }
    return $this.$substring($lower, $upper + 1 | 0);
}
function jl_String_toString($this) {
    return $this;
}
function jl_String_toCharArray($this) {
    var $array, $i, var$3;
    $array = $rt_createCharArray($this.$characters.data.length);
    $i = 0;
    while (true) {
        var$3 = $array.data;
        if ($i >= var$3.length)
            break;
        var$3[$i] = $this.$characters.data[$i];
        $i = $i + 1 | 0;
    }
    return $array;
}
function jl_String_valueOf($i) {
    jl_String_$callClinit();
    return ((jl_StringBuilder__init_()).$append0($i)).$toString();
}
function jl_String_equals($this, $other) {
    var $str, $i;
    if ($this === $other)
        return 1;
    if (!($other instanceof jl_String))
        return 0;
    $str = $other;
    if ($str.$length() != $this.$length())
        return 0;
    $i = 0;
    while ($i < $str.$length()) {
        if ($this.$charAt($i) != $str.$charAt($i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function jl_String_getBytes($this, $charsetName) {
    return $this.$getBytes(jnc_Charset_forName($charsetName.$toString()));
}
function jl_String_getBytes0($this) {
    jnci_UTF8Charset_$callClinit();
    return $this.$getBytes(jnci_UTF8Charset_INSTANCE);
}
function jl_String_getBytes1($this, $charset) {
    var $buffer, $result;
    $buffer = jnc_Charset_encode($charset, jn_CharBuffer_wrap0($this.$characters));
    if ($buffer.$hasArray() && !jn_Buffer_position($buffer) && jn_Buffer_limit($buffer) == jn_Buffer_capacity($buffer))
        return jn_ByteBuffer_array($buffer);
    $result = $rt_createByteArray(jn_Buffer_remaining($buffer));
    $buffer.$get7($result);
    return $result;
}
function jl_String_hashCode($this) {
    var var$1, var$2, var$3, $c;
    a: {
        if (!$this.$hashCode1) {
            var$1 = $this.$characters.data;
            var$2 = var$1.length;
            var$3 = 0;
            while (true) {
                if (var$3 >= var$2)
                    break a;
                $c = var$1[var$3];
                $this.$hashCode1 = (31 * $this.$hashCode1 | 0) + $c | 0;
                var$3 = var$3 + 1 | 0;
            }
        }
    }
    return $this.$hashCode1;
}
function jl_String_toUpperCase($this) {
    var $codePoints, $codePointCount, $i, var$4, var$5, var$6, var$7, var$8;
    if ($this.$isEmpty())
        return $this;
    $codePoints = $rt_createIntArray($this.$characters.data.length);
    $codePointCount = 0;
    $i = 0;
    while ($i < $this.$characters.data.length) {
        a: {
            if ($i != ($this.$characters.data.length - 1 | 0) && jl_Character_isHighSurrogate($this.$characters.data[$i])) {
                var$4 = $this.$characters.data;
                var$5 = $i + 1 | 0;
                var$6 = var$4[var$5];
                if (jl_Character_isLowSurrogate(var$6)) {
                    var$7 = $codePoints.data;
                    var$8 = $codePointCount + 1 | 0;
                    var$7[$codePointCount] = jl_Character_toUpperCase0(jl_Character_toCodePoint($this.$characters.data[$i], $this.$characters.data[var$5]));
                    $i = var$5;
                    break a;
                }
            }
            var$7 = $codePoints.data;
            var$8 = $codePointCount + 1 | 0;
            var$7[$codePointCount] = jl_Character_toUpperCase($this.$characters.data[$i]);
        }
        $i = $i + 1 | 0;
        $codePointCount = var$8;
    }
    return jl_String__init_3($codePoints, 0, $codePointCount);
}
function jl_String_split($this, $regex) {
    return jur_Pattern_split(jur_Pattern_compile($regex), $this.$toString());
}
function jl_String__clinit_() {
    jl_String_CASE_INSENSITIVE_ORDER = jl_String$_clinit_$lambda$_84_0__init_();
}
var otcic_StderrOutputStream = $rt_classWithoutFields(ji_OutputStream);
var otcic_StderrOutputStream_INSTANCE = null;
function otcic_StderrOutputStream_$callClinit() {
    otcic_StderrOutputStream_$callClinit = $rt_eraseClinit(otcic_StderrOutputStream);
    otcic_StderrOutputStream__clinit_();
}
function otcic_StderrOutputStream__init_() {
    var var_0 = new otcic_StderrOutputStream();
    otcic_StderrOutputStream__init_0(var_0);
    return var_0;
}
function otcic_StderrOutputStream__init_0($this) {
    otcic_StderrOutputStream_$callClinit();
    ji_OutputStream__init_($this);
}
function otcic_StderrOutputStream_write($this, $b) {
    otcic_Console_writeStderr($b);
}
function otcic_StderrOutputStream__clinit_() {
    otcic_StderrOutputStream_INSTANCE = otcic_StderrOutputStream__init_();
}
var jnc_Charset$Charsets = $rt_classWithoutFields();
var jnc_Charset$Charsets_value = null;
function jnc_Charset$Charsets_$callClinit() {
    jnc_Charset$Charsets_$callClinit = $rt_eraseClinit(jnc_Charset$Charsets);
    jnc_Charset$Charsets__clinit_();
}
function jnc_Charset$Charsets_access$000() {
    jnc_Charset$Charsets_$callClinit();
    return jnc_Charset$Charsets_value;
}
function jnc_Charset$Charsets__clinit_() {
    var $charsets, var$2, var$3, var$4, $charset;
    jnc_Charset$Charsets_value = ju_HashMap__init_();
    $charsets = $rt_createArray(jnc_Charset, 6);
    var$2 = $charsets.data;
    jnc_StandardCharsets_$callClinit();
    var$2[0] = jnc_StandardCharsets_UTF_8;
    var$2[1] = jnc_StandardCharsets_US_ASCII;
    var$2[2] = jnc_StandardCharsets_ISO_8859_1;
    var$2[3] = jnc_StandardCharsets_UTF_16;
    var$2[4] = jnc_StandardCharsets_UTF_16BE;
    var$2[5] = jnc_StandardCharsets_UTF_16LE;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $charset = var$2[var$4];
        jnc_Charset$Charsets_value.$put1(jnc_Charset_name($charset), $charset);
        var$4 = var$4 + 1 | 0;
    }
}
var otjde_EventTarget = $rt_classWithoutFields(0);
var otjde_FocusEventTarget = $rt_classWithoutFields(0);
function jn_IntBufferOverArray() {
    var a = this; jn_IntBufferImpl.call(a);
    a.$readOnly6 = 0;
    a.$start7 = 0;
    a.$array3 = null;
}
function jn_IntBufferOverArray__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_IntBufferOverArray();
    jn_IntBufferOverArray__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_IntBufferOverArray__init_0($this, $start, $capacity, $array, $position, $limit, $readOnly) {
    jn_IntBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start7 = $start;
    $this.$readOnly6 = $readOnly;
    $this.$array3 = $array;
}
function jn_IntBufferOverArray_getElement($this, $index) {
    return $this.$array3.data[$index + $this.$start7 | 0];
}
function jn_IntBufferOverArray_putElement($this, $index, $value) {
    $this.$array3.data[$index + $this.$start7 | 0] = $value;
}
function jn_IntBufferOverArray_readOnly($this) {
    return $this.$readOnly6;
}
var jnci_UTF8Encoder = $rt_classWithoutFields(jnci_BufferedEncoder);
function jnci_UTF8Encoder__init_(var_0) {
    var var_1 = new jnci_UTF8Encoder();
    jnci_UTF8Encoder__init_0(var_1, var_0);
    return var_1;
}
function jnci_UTF8Encoder__init_0($this, $cs) {
    jnci_BufferedEncoder__init_($this, $cs, 2.0, 4.0);
}
function jnci_UTF8Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $ch, var$12, var$13, var$14, $low, $codePoint;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $ch = var$10[$inPos];
            if ($ch < 128) {
                var$10 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$10[$outPos] = $ch << 24 >> 24;
            } else if ($ch < 2048) {
                if (($outPos + 2 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$13 = $outPos + 1 | 0;
                var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else if (!jl_Character_isSurrogate($ch)) {
                if (($outPos + 3 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(3))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$14 = $outPos + 1 | 0;
                var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                var$13 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $ch >> 6 & 63) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else {
                if (!jl_Character_isHighSurrogate($ch)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (var$9 >= $inSize) {
                    if ($controller.$hasMoreInput0())
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                var$13 = var$9 + 1 | 0;
                $low = var$10[var$9];
                if (!jl_Character_isLowSurrogate($low)) {
                    var$9 = var$13 + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    var$9 = var$13 + (-2) | 0;
                    if ($controller.$hasMoreOutput0(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $codePoint = jl_Character_toCodePoint($ch, $low);
                var$9 = $outPos + 1 | 0;
                var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                var$14 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                var$9 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                var$12 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint & 63) << 24 >> 24;
                var$9 = var$13;
            }
            $inPos = var$9;
            $outPos = var$12;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
}
var ju_Dictionary = $rt_classWithoutFields();
function ju_Dictionary__init_($this) {
    jl_Object__init_0($this);
}
function ju_Hashtable() {
    var a = this; ju_Dictionary.call(a);
    a.$elementCount = 0;
    a.$elementData = null;
    a.$loadFactor2 = 0.0;
    a.$threshold2 = 0;
    a.$firstSlot = 0;
    a.$lastSlot = 0;
    a.$modCount0 = 0;
}
var ju_Hashtable_EMPTY_ENUMERATION = null;
var ju_Hashtable_EMPTY_ITERATOR = null;
function ju_Hashtable_$callClinit() {
    ju_Hashtable_$callClinit = $rt_eraseClinit(ju_Hashtable);
    ju_Hashtable__clinit_();
}
function ju_Hashtable__init_() {
    var var_0 = new ju_Hashtable();
    ju_Hashtable__init_0(var_0);
    return var_0;
}
function ju_Hashtable__init_1(var_0) {
    var var_1 = new ju_Hashtable();
    ju_Hashtable__init_2(var_1, var_0);
    return var_1;
}
function ju_Hashtable_newEntry($key, $value, $hash) {
    ju_Hashtable_$callClinit();
    return ju_Hashtable$Entry__init_($key, $value);
}
function ju_Hashtable__init_0($this) {
    ju_Hashtable_$callClinit();
    ju_Hashtable__init_2($this, 11);
}
function ju_Hashtable__init_2($this, $capacity) {
    ju_Hashtable_$callClinit();
    ju_Dictionary__init_($this);
    $this.$lastSlot = (-1);
    if ($capacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $this.$elementCount = 0;
    if (!$capacity)
        $capacity = 1;
    $this.$elementData = ju_Hashtable_newElementArray($this, $capacity);
    $this.$firstSlot = $this.$elementData.data.length;
    $this.$loadFactor2 = 0.75;
    ju_Hashtable_computeMaxSize($this);
}
function ju_Hashtable_newElementArray($this, $size) {
    return $rt_createArray(ju_Hashtable$Entry, $size);
}
function ju_Hashtable_computeMaxSize($this) {
    $this.$threshold2 = $this.$elementData.data.length * $this.$loadFactor2 | 0;
}
function ju_Hashtable_put($this, $key, $value) {
    var $hash, var$4, $index, $entry, $result, var$8, var$9;
    jl_Object_monitorEnterSync($this);
    try {
        if ($key !== null && $value !== null) {
            $hash = $key.$hashCode0();
            var$4 = $hash & 2147483647;
            $index = var$4 % $this.$elementData.data.length | 0;
            $entry = $this.$elementData.data[$index];
            while ($entry !== null && !$entry.$equalsKey($key, $hash)) {
                $entry = $entry.$next1;
            }
            if ($entry !== null) {
                $result = $entry.$value3;
                $entry.$value3 = $value;
                return $result;
            }
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            var$8 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$8;
            if (var$8 > $this.$threshold2) {
                $this.$rehash();
                $index = var$4 % $this.$elementData.data.length | 0;
            }
            if ($index < $this.$firstSlot)
                $this.$firstSlot = $index;
            if ($index > $this.$lastSlot)
                $this.$lastSlot = $index;
            var$9 = ju_Hashtable_newEntry($key, $value, $hash);
            var$9.$next1 = $this.$elementData.data[$index];
            $this.$elementData.data[$index] = var$9;
            return null;
        }
        $rt_throw(jl_NullPointerException__init_());
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function ju_Hashtable_rehash($this) {
    var $length, $newLast, $newData, $i, var$5, $entry, $index, var$8, $entry_0;
    $length = ($this.$elementData.data.length << 1) + 1 | 0;
    if (!$length)
        $length = 1;
    $newLast = (-1);
    $newData = ju_Hashtable_newElementArray($this, $length);
    $i = $this.$lastSlot + 1 | 0;
    var$5 = $length;
    while (true) {
        $i = $i + (-1) | 0;
        if ($i < $this.$firstSlot)
            break;
        $entry = $this.$elementData.data[$i];
        while ($entry !== null) {
            $index = ($entry.$getKeyHash() & 2147483647) % $length | 0;
            if ($index < var$5)
                var$5 = $index;
            if ($index > $newLast)
                $newLast = $index;
            var$8 = $newData.data;
            $entry_0 = $entry.$next1;
            $entry.$next1 = var$8[$index];
            var$8[$index] = $entry;
            $entry = $entry_0;
        }
    }
    $this.$firstSlot = var$5;
    $this.$lastSlot = $newLast;
    $this.$elementData = $newData;
    ju_Hashtable_computeMaxSize($this);
}
function ju_Hashtable__clinit_() {
    ju_Hashtable_EMPTY_ENUMERATION = ju_Hashtable$1__init_();
    ju_Hashtable_EMPTY_ITERATOR = ju_Hashtable$2__init_();
}
function ju_Properties() {
    ju_Hashtable.call(this);
    this.$defaults = null;
}
function ju_Properties__init_() {
    var var_0 = new ju_Properties();
    ju_Properties__init_0(var_0);
    return var_0;
}
function ju_Properties__init_1(var_0) {
    var var_1 = new ju_Properties();
    ju_Properties__init_2(var_1, var_0);
    return var_1;
}
function ju_Properties__init_0($this) {
    ju_Hashtable__init_0($this);
}
function ju_Properties__init_2($this, $properties) {
    ju_Hashtable__init_0($this);
    $this.$defaults = $properties;
}
function jn_FloatBufferOverArray() {
    var a = this; jn_FloatBufferImpl.call(a);
    a.$readOnly7 = 0;
    a.$start8 = 0;
    a.$array4 = null;
}
function jn_FloatBufferOverArray__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_FloatBufferOverArray();
    jn_FloatBufferOverArray__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_FloatBufferOverArray__init_0($this, $start, $capacity, $array, $position, $limit, $readOnly) {
    jn_FloatBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start8 = $start;
    $this.$readOnly7 = $readOnly;
    $this.$array4 = $array;
}
function jn_FloatBufferOverArray_getElement($this, $index) {
    return $this.$array4.data[$index + $this.$start8 | 0];
}
function jn_FloatBufferOverArray_putElement($this, $index, $value) {
    $this.$array4.data[$index + $this.$start8 | 0] = $value;
}
function jn_FloatBufferOverArray_readOnly($this) {
    return $this.$readOnly7;
}
var jur_FSet$PossessiveFSet = $rt_classWithoutFields(jur_AbstractSet);
function jur_FSet$PossessiveFSet__init_() {
    var var_0 = new jur_FSet$PossessiveFSet();
    jur_FSet$PossessiveFSet__init_0(var_0);
    return var_0;
}
function jur_FSet$PossessiveFSet__init_0($this) {
    jur_AbstractSet__init_($this);
}
function jur_FSet$PossessiveFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
function jur_FSet$PossessiveFSet_hasConsumed($this, $mr) {
    return 0;
}
var cbg_ApplicationListener = $rt_classWithoutFields(0);
function cgxgetf_FreeTypePackTest() {
    var a = this; jl_Object.call(a);
    a.$camera = null;
    a.$batch = null;
    a.$regions = null;
    a.$text = null;
    a.$fontMap = null;
}
function cgxgetf_FreeTypePackTest__init_() {
    var var_0 = new cgxgetf_FreeTypePackTest();
    cgxgetf_FreeTypePackTest__init_0(var_0);
    return var_0;
}
function cgxgetf_FreeTypePackTest__init_0($this) {
    jl_Object__init_0($this);
}
function cgxgetf_FreeTypePackTest_create($this) {
    var $start, $glyphCount, $time;
    $this.$camera = cbgg_OrthographicCamera__init_();
    $this.$batch = cbggg_SpriteBatch__init_();
    $start = jl_System_currentTimeMillis();
    $glyphCount = $this.$createFonts();
    $time = Long_sub(jl_System_currentTimeMillis(), $start);
    $this.$text = (((((((jl_StringBuilder__init_()).$append0($glyphCount)).$append($rt_s(379))).$append0($this.$regions.$size1)).$append($rt_s(380))).$append10($time)).$append($rt_s(381))).$toString();
}
function cgxgetf_FreeTypePackTest_resize($this, $width, $height) {}
function cgxgetf_FreeTypePackTest_render($this) {
    var $x, $y, var$3, var$4, var$5, $style, var$7, var$8, var$9, $size, $fnt, var$12, $font;
    cbgu_ScreenUtils_clear(0.20000000298023224, 0.20000000298023224, 0.20000000298023224, 1.0);
    $this.$camera.$setToOrtho0(0, cbg_Gdx_graphics.$getWidth(), cbg_Gdx_graphics.$getHeight());
    $this.$batch.$setProjectionMatrix($this.$camera.$combined);
    $this.$batch.$begin();
    $x = 10.0;
    $y = cbg_Gdx_graphics.$getHeight() - 10 | 0;
    var$3 = (cgxgetf_FreeTypePackTest$FontStyle_values()).data;
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $style = var$3[var$5];
        var$7 = (cgxgetf_FreeTypePackTest$FontSize_values()).data;
        var$8 = var$7.length;
        var$9 = 0;
        while (var$9 < var$8) {
            $size = var$7[var$9];
            $fnt = $this.$getFont($style, $size);
            $fnt.$draw($this.$batch, (((((jl_StringBuilder__init_()).$append(jl_Enum_name($style))).$append($rt_s(382))).$append0($size.$size8)).$append($rt_s(383))).$toString(), $x, $y);
            $y = $y - ($fnt.$getLineHeight() + 10.0);
            var$9 = var$9 + 1 | 0;
        }
        $y = $y - 20.0;
        var$5 = var$5 + 1 | 0;
    }
    var$12 = cgxgetf_FreeTypePackTest$FontStyle_Regular;
    cgxgetf_FreeTypePackTest$FontSize_$callClinit();
    $font = $this.$getFont(var$12, cgxgetf_FreeTypePackTest$FontSize_Medium);
    $font.$draw($this.$batch, $this.$text, 10.0, $font.$getCapHeight() + 10.0);
    $this.$batch.$setColor0(1.0, 1.0, 1.0, 0.15000000596046448);
    $this.$batch.$draw0($this.$regions.$first0(), 0.0, 0.0);
    $this.$batch.$setColor0(1.0, 1.0, 1.0, 1.0);
    $this.$batch.$end2();
}
function cgxgetf_FreeTypePackTest_getFont($this, $style, $size) {
    return ($this.$fontMap.$get1($style)).$get1($size);
}
function cgxgetf_FreeTypePackTest_createFonts($this) {
    var $packer, $dataMap, var$3, var$4, var$5, $style, $gen, var$8, var$9, var$10, $size, $fontParameter, $data, var$14, $fontCount, var$16, $bmFont;
    $packer = new cbggg_PixmapPacker;
    cbgg_Pixmap$Format_$callClinit();
    cbggg_PixmapPacker__init_($packer, 1024, 512, cbgg_Pixmap$Format_RGBA8888, 2, 0);
    $dataMap = cgxgetf_FreeTypePackTest$FontMap__init_($this);
    var$3 = (cgxgetf_FreeTypePackTest$FontStyle_values()).data;
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $style = var$3[var$5];
        $gen = cbgggf_FreeTypeFontGenerator__init_(cbg_Gdx_files.$internal($style.$path0));
        var$8 = (cgxgetf_FreeTypePackTest$FontSize_values()).data;
        var$9 = var$8.length;
        var$10 = 0;
        while (var$10 < var$9) {
            $size = var$8[var$10];
            $fontParameter = cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter__init_();
            $fontParameter.$size5 = $size.$size8;
            $fontParameter.$packer = $packer;
            $fontParameter.$characters0 = $rt_s(384);
            $data = $gen.$generateData($fontParameter);
            ($dataMap.$get1($style)).$put3($size, $data);
            var$10 = var$10 + 1 | 0;
        }
        $gen.$dispose();
        var$5 = var$5 + 1 | 0;
    }
    $this.$regions = cbgu_Array__init_();
    var$14 = $this.$regions;
    cbgg_Texture$TextureFilter_$callClinit();
    $packer.$updateTextureRegions(var$14, cbgg_Texture$TextureFilter_Nearest, cbgg_Texture$TextureFilter_Nearest, 0);
    $packer.$dispose();
    $this.$fontMap = cgxgetf_FreeTypePackTest$FontMap__init_($this);
    $fontCount = 0;
    var$8 = (cgxgetf_FreeTypePackTest$FontStyle_values()).data;
    var$10 = var$8.length;
    var$16 = 0;
    while (var$16 < var$10) {
        $style = var$8[var$16];
        var$3 = (cgxgetf_FreeTypePackTest$FontSize_values()).data;
        var$4 = var$3.length;
        var$5 = 0;
        while (var$5 < var$4) {
            $size = var$3[var$5];
            $data = ($dataMap.$get1($style)).$get1($size);
            $bmFont = cbggg_BitmapFont__init_($data, $this.$regions, 0);
            ($this.$fontMap.$get1($style)).$put3($size, $bmFont);
            $fontCount = $fontCount + 1 | 0;
            var$5 = var$5 + 1 | 0;
        }
        var$16 = var$16 + 1 | 0;
    }
    return $rt_imul($fontCount, $rt_s(384).$length());
}
var jur_PosCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet);
function jur_PosCompositeGroupQuantifierSet__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_PosCompositeGroupQuantifierSet();
    jur_PosCompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_PosCompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $counter, $max, $nextIndex;
    $counter = 0;
    $max = $this.$quantifier.$max1();
    a: {
        while (true) {
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
            if ($nextIndex <= $stringIndex)
                break a;
            if ($counter >= $max)
                break;
            $counter = $counter + 1 | 0;
            $stringIndex = $nextIndex;
        }
    }
    if ($nextIndex < 0 && $counter < $this.$quantifier.$min1())
        return (-1);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function cbgg_Texture$TextureFilter() {
    jl_Enum.call(this);
    this.$glEnum0 = 0;
}
var cbgg_Texture$TextureFilter_Nearest = null;
var cbgg_Texture$TextureFilter_Linear = null;
var cbgg_Texture$TextureFilter_MipMap = null;
var cbgg_Texture$TextureFilter_MipMapNearestNearest = null;
var cbgg_Texture$TextureFilter_MipMapLinearNearest = null;
var cbgg_Texture$TextureFilter_MipMapNearestLinear = null;
var cbgg_Texture$TextureFilter_MipMapLinearLinear = null;
var cbgg_Texture$TextureFilter_$VALUES = null;
function cbgg_Texture$TextureFilter_$callClinit() {
    cbgg_Texture$TextureFilter_$callClinit = $rt_eraseClinit(cbgg_Texture$TextureFilter);
    cbgg_Texture$TextureFilter__clinit_();
}
function cbgg_Texture$TextureFilter__init_(var_0, var_1, var_2) {
    var var_3 = new cbgg_Texture$TextureFilter();
    cbgg_Texture$TextureFilter__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Texture$TextureFilter_values() {
    cbgg_Texture$TextureFilter_$callClinit();
    return cbgg_Texture$TextureFilter_$VALUES.$clone();
}
function cbgg_Texture$TextureFilter__init_0($this, var$1, var$2, $glEnum) {
    cbgg_Texture$TextureFilter_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$glEnum0 = $glEnum;
}
function cbgg_Texture$TextureFilter_getGLEnum($this) {
    return $this.$glEnum0;
}
function cbgg_Texture$TextureFilter__clinit_() {
    cbgg_Texture$TextureFilter_Nearest = cbgg_Texture$TextureFilter__init_($rt_s(385), 0, 9728);
    cbgg_Texture$TextureFilter_Linear = cbgg_Texture$TextureFilter__init_($rt_s(386), 1, 9729);
    cbgg_Texture$TextureFilter_MipMap = cbgg_Texture$TextureFilter__init_($rt_s(387), 2, 9987);
    cbgg_Texture$TextureFilter_MipMapNearestNearest = cbgg_Texture$TextureFilter__init_($rt_s(388), 3, 9984);
    cbgg_Texture$TextureFilter_MipMapLinearNearest = cbgg_Texture$TextureFilter__init_($rt_s(389), 4, 9985);
    cbgg_Texture$TextureFilter_MipMapNearestLinear = cbgg_Texture$TextureFilter__init_($rt_s(390), 5, 9986);
    cbgg_Texture$TextureFilter_MipMapLinearLinear = cbgg_Texture$TextureFilter__init_($rt_s(391), 6, 9987);
    cbgg_Texture$TextureFilter_$VALUES = $rt_createArrayFromData(cbgg_Texture$TextureFilter, [cbgg_Texture$TextureFilter_Nearest, cbgg_Texture$TextureFilter_Linear, cbgg_Texture$TextureFilter_MipMap, cbgg_Texture$TextureFilter_MipMapNearestNearest, cbgg_Texture$TextureFilter_MipMapLinearNearest, cbgg_Texture$TextureFilter_MipMapNearestLinear, cbgg_Texture$TextureFilter_MipMapLinearLinear]);
}
var jnci_UTF8Charset = $rt_classWithoutFields(jnc_Charset);
var jnci_UTF8Charset_INSTANCE = null;
function jnci_UTF8Charset_$callClinit() {
    jnci_UTF8Charset_$callClinit = $rt_eraseClinit(jnci_UTF8Charset);
    jnci_UTF8Charset__clinit_();
}
function jnci_UTF8Charset__init_() {
    var var_0 = new jnci_UTF8Charset();
    jnci_UTF8Charset__init_0(var_0);
    return var_0;
}
function jnci_UTF8Charset__init_0($this) {
    jnci_UTF8Charset_$callClinit();
    jnc_Charset__init_($this, $rt_s(392), $rt_createArray(jl_String, 0));
}
function jnci_UTF8Charset_newEncoder($this) {
    return jnci_UTF8Encoder__init_($this);
}
function jnci_UTF8Charset__clinit_() {
    jnci_UTF8Charset_INSTANCE = jnci_UTF8Charset__init_();
}
var otjde_KeyboardEventTarget = $rt_classWithoutFields(0);
function jur_MultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter1 = 0;
}
function jur_MultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineEOLSet();
    jur_MultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter1 = $counter;
}
function jur_MultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $strDif, $ch1, $ch2;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getLeftBound() - $strIndex | 0;
    if (!$strDif) {
        $matchResult.$setConsumed($this.$consCounter1, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    if ($strDif < 2) {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = 97;
    } else {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = $testString.$charAt($strIndex + 1 | 0);
    }
    switch ($ch1) {
        case 10:
        case 133:
        case 8232:
        case 8233:
            $matchResult.$setConsumed($this.$consCounter1, 0);
            return $this.$next.$matches($strIndex, $testString, $matchResult);
        case 13:
            if ($ch2 != 10) {
                $matchResult.$setConsumed($this.$consCounter1, 0);
                return $this.$next.$matches($strIndex, $testString, $matchResult);
            }
            $matchResult.$setConsumed($this.$consCounter1, 0);
            return $this.$next.$matches($strIndex, $testString, $matchResult);
        default:
    }
    return (-1);
}
function jur_MultiLineEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter1) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter1, (-1));
    return $res;
}
function cgxgbwp_Preloader() {
    var a = this; jl_Object.call(a);
    a.$directories = null;
    a.$images = null;
    a.$audio = null;
    a.$texts = null;
    a.$binaries = null;
    a.$baseUrl = null;
}
function cgxgbwp_Preloader__init_(var_0) {
    var var_1 = new cgxgbwp_Preloader();
    cgxgbwp_Preloader__init_0(var_1, var_0);
    return var_1;
}
function cgxgbwp_Preloader__init_0($this, $newBaseURL) {
    jl_Object__init_0($this);
    $this.$directories = cbgu_ObjectMap__init_();
    $this.$images = cbgu_ObjectMap__init_();
    $this.$audio = cbgu_ObjectMap__init_();
    $this.$texts = cbgu_ObjectMap__init_();
    $this.$binaries = cbgu_ObjectMap__init_();
    $this.$baseUrl = $newBaseURL;
}
function cgxgbwp_Preloader_preload($this, $assetFileUrl) {
    (cgxgbwp_AssetDownloader_getInstance()).$loadText((((jl_StringBuilder__init_()).$append($this.$baseUrl)).$append($assetFileUrl)).$toString(), cgxgbwp_Preloader$1__init_($this, $assetFileUrl));
}
function cgxgbwp_Preloader_loadAsset($this, $url, $type, $mimeType, $listener) {
    (cgxgbwp_AssetDownloader_getInstance()).$load0((((jl_StringBuilder__init_()).$append($this.$baseUrl)).$append($url)).$toString(), $type, $mimeType, cgxgbwp_Preloader$2__init_($this, $listener, $type, $url));
}
function cgxgbwp_Preloader_loadScript($this, $url, $listener) {
    (cgxgbwp_AssetDownloader_getInstance()).$loadScript((((jl_StringBuilder__init_()).$append($this.$baseUrl)).$append($url)).$toString(), $listener);
}
function cgxgbwp_Preloader_putAssetInMap($this, $type, $url, $result) {
    a: {
        cgxgbwp_Preloader$3_$callClinit();
        switch (cgxgbwp_Preloader$3_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal($type)]) {
            case 1:
                $this.$texts.$put1($url, $result);
                break a;
            case 2:
                break;
            case 3:
                $this.$binaries.$put1($url, $result);
                break a;
            case 4:
                $this.$audio.$put1($url, $result);
                break a;
            case 5:
                $this.$directories.$put1($url, null);
                break a;
            default:
                break a;
        }
        $this.$images.$put1($url, $result);
    }
}
function cgxgbwp_Preloader_read($this, $url) {
    var var$2, $$je;
    if ($this.$texts.$containsKey($url)) {
        a: {
            try {
                var$2 = ji_ByteArrayInputStream__init_1(($this.$texts.$get1($url)).$getBytes0($rt_s(392)));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_UnsupportedEncodingException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$2;
        }
        return null;
    }
    if ($this.$images.$containsKey($url))
        return ji_ByteArrayInputStream__init_1($rt_createByteArray(1));
    if ($this.$binaries.$containsKey($url))
        return cgxgbwp_Blob_read($this.$binaries.$get1($url));
    if (!$this.$audio.$containsKey($url))
        return null;
    return ji_ByteArrayInputStream__init_1($rt_createByteArray(1));
}
function cgxgbwp_Preloader_contains($this, $url) {
    var var$2, var$3;
    a: {
        if (!$this.$texts.$containsKey($url) && !$this.$images.$containsKey($url) && !$this.$binaries.$containsKey($url) && !$this.$audio.$containsKey($url)) {
            var$2 = $this.$directories;
            if (!var$2.$containsKey($url)) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
}
function cgxgbwp_Preloader_length($this, $url) {
    var var$2, $$je;
    if ($this.$texts.$containsKey($url)) {
        a: {
            try {
                var$2 = Long_fromInt((($this.$texts.$get1($url)).$getBytes0($rt_s(392))).data.length);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_UnsupportedEncodingException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$2;
        }
        return Long_fromInt((($this.$texts.$get1($url)).$getBytes1()).data.length);
    }
    if ($this.$images.$containsKey($url))
        return Long_fromInt(1);
    if ($this.$binaries.$containsKey($url))
        return Long_fromInt(cgxgbwp_Blob_length($this.$binaries.$get1($url)));
    if (!$this.$audio.$containsKey($url))
        return Long_ZERO;
    return Long_fromInt(1);
}
function cbgggf_FreeType$Face() {
    cbgggf_FreeType$Pointer.call(this);
    this.$library = null;
}
function cbgggf_FreeType$Face__init_(var_0, var_1) {
    var var_2 = new cbgggf_FreeType$Face();
    cbgggf_FreeType$Face__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgggf_FreeType$Face__init_0($this, $address, $library) {
    cbgggf_FreeType$Pointer__init_0($this, $address);
    $this.$library = $library;
}
function cbgggf_FreeType$Face_dispose($this) {
    var $freeAddress;
    Module._c_Face_doneFace($this.$address);
    $freeAddress = $this.$library.$fontData.$get9(Long_fromInt($this.$address));
    if ($freeAddress.$intValue()) {
        $this.$library.$fontData.$remove2(Long_fromInt($this.$address));
        cbgggf_FreeType_access$000($freeAddress.$intValue());
    }
}
function cbgggf_FreeType$Face_getFaceFlags($this) {
    return Module._c_Face_getFaceFlags($this.$address);
}
function cbgggf_FreeType$Face_getNumGlyphs($this) {
    return Module._c_Face_getNumGlyphs($this.$address);
}
function cbgggf_FreeType$Face_getMaxAdvanceWidth($this) {
    return Module._c_Face_getMaxAdvanceWidth($this.$address);
}
function cbgggf_FreeType$Face_setPixelSizes($this, $pixelWidth, $pixelHeight) {
    return !!Module._c_Face_setPixelSizes($this.$address, $pixelWidth, $pixelHeight) ? 1 : 0;
}
function cbgggf_FreeType$Face_loadChar($this, $charCode, $loadFlags) {
    return !!Module._c_Face_loadChar($this.$address, $charCode, $loadFlags) ? 1 : 0;
}
function cbgggf_FreeType$Face_getGlyph($this) {
    return cbgggf_FreeType$GlyphSlot__init_(Module._c_Face_getGlyph($this.$address));
}
function cbgggf_FreeType$Face_getSize($this) {
    return cbgggf_FreeType$Size__init_(Module._c_Face_getSize($this.$address));
}
function cbgggf_FreeType$Face_hasKerning($this) {
    return !!Module._c_Face_hasKerning($this.$address) ? 1 : 0;
}
function cbgggf_FreeType$Face_getKerning($this, $leftGlyph, $rightGlyph, $kernMode) {
    return Module._c_Face_getKerning($this.$address, $leftGlyph, $rightGlyph, $kernMode);
}
function cbgggf_FreeType$Face_getCharIndex($this, $charCode) {
    return Module._c_Face_getCharIndex($this.$address, $charCode);
}
function jur_AbstractCharClass$LazyJavaDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$016 = null;
}
function jur_AbstractCharClass$LazyJavaDigit$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaDigit$1();
    jur_AbstractCharClass$LazyJavaDigit$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaDigit$1__init_0($this, $this$0) {
    $this.$this$016 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaDigit$1_contains($this, $ch) {
    return jl_Character_isDigit($ch);
}
var jl_NoSuchMethodException = $rt_classWithoutFields(jl_ReflectiveOperationException);
function jl_NoSuchMethodException__init_() {
    var var_0 = new jl_NoSuchMethodException();
    jl_NoSuchMethodException__init_0(var_0);
    return var_0;
}
function jl_NoSuchMethodException__init_0($this) {
    jl_ReflectiveOperationException__init_0($this);
}
var otcir_Converter = $rt_classWithoutFields();
var jn_IntBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_IntBufferOverByteBuffer);
function jn_IntBufferOverByteBufferBigEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_IntBufferOverByteBufferBigEndian();
    jn_IntBufferOverByteBufferBigEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_IntBufferOverByteBufferBigEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_IntBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_IntBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2, var$3, var$4;
    var$2 = $this.$byteByffer0.$array0.data;
    var$3 = $this.$start1;
    var$4 = $index * 4 | 0;
    return (var$2[var$3 + var$4 | 0] & 255) << 24 | ($this.$byteByffer0.$array0.data[($this.$start1 + var$4 | 0) + 1 | 0] & 255) << 16 | ($this.$byteByffer0.$array0.data[($this.$start1 + var$4 | 0) + 2 | 0] & 255) << 8 | $this.$byteByffer0.$array0.data[($this.$start1 + var$4 | 0) + 3 | 0] & 255;
}
function jn_IntBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer0.$array0.data;
    var$4 = $this.$start1;
    var$5 = $index * 4 | 0;
    var$3[var$4 + var$5 | 0] = $value >> 24 << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start1 + var$5 | 0) + 1 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start1 + var$5 | 0) + 2 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start1 + var$5 | 0) + 3 | 0] = $value << 24 >> 24;
}
function cgxgbwp_Preloader$1() {
    var a = this; cgxgbw_AssetLoaderListener.call(a);
    a.$val$assetFileUrl = null;
    a.$this$017 = null;
}
function cgxgbwp_Preloader$1__init_(var_0, var_1) {
    var var_2 = new cgxgbwp_Preloader$1();
    cgxgbwp_Preloader$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbwp_Preloader$1__init_0($this, $this$0, var$2) {
    $this.$this$017 = $this$0;
    $this.$val$assetFileUrl = var$2;
    cgxgbw_AssetLoaderListener__init_0($this);
}
function cgxgbwp_Preloader$1_onProgress($this, $amount) {}
function cgxgbwp_Preloader$1_onFailure($this, $url) {
    (jl_System_out()).$println1((((jl_StringBuilder__init_()).$append($rt_s(393))).$append($this.$val$assetFileUrl)).$toString());
}
function cgxgbwp_Preloader$1_onSuccess($this, $url, $result) {
    var $lines, var$4, $assets, var$6, var$7, $i, $asset, $line, $tokens, var$12, $type, $size;
    $lines = $result.$split0($rt_s(394));
    var$4 = $lines.data;
    $assets = new cbgu_Array;
    var$6 = var$4.length;
    cbgu_Array__init_2($assets, var$6);
    var$7 = 0;
    while (true) {
        if (var$7 >= var$6) {
            $i = 0;
            while ($i < $assets.$size1) {
                $asset = $assets.$get($i);
                if ($this.$this$017.$contains0($asset.$url)) {
                    $asset.$loaded = $asset.$size4;
                    $asset.$succeed = 1;
                } else
                    $this.$this$017.$loadAsset($asset.$url, $asset.$type0, $asset.$mimeType, cgxgbwp_Preloader$1$1__init_($this));
                $i = $i + 1 | 0;
            }
            return 0;
        }
        $line = var$4[var$7];
        $tokens = $line.$split0($rt_s(395));
        var$12 = $tokens.data;
        if (var$12.length != 4)
            break;
        cgxgbwp_AssetType_$callClinit();
        $type = cgxgbwp_AssetType_Text;
        if (var$12[0].$equals($rt_s(333)))
            $type = cgxgbwp_AssetType_Image;
        if (var$12[0].$equals($rt_s(339)))
            $type = cgxgbwp_AssetType_Binary;
        if (var$12[0].$equals($rt_s(335)))
            $type = cgxgbwp_AssetType_Audio;
        if (var$12[0].$equals($rt_s(122)))
            $type = cgxgbwp_AssetType_Directory;
        $size = jl_Long_parseLong(var$12[2]);
        if ($type === cgxgbwp_AssetType_Audio && !(cgxgbwp_AssetDownloader_getInstance()).$isUseBrowserCache())
            $size = Long_ZERO;
        $assets.$add3(cgxgbwp_Preloader$Asset__init_(var$12[1].$trim(), $type, $size, var$12[3]));
        var$7 = var$7 + 1 | 0;
    }
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(396)));
}
function cgxgbwp_Preloader$1_onSuccess0($this, var$1, var$2) {
    return $this.$onSuccess(var$1, var$2);
}
var jl_NullPointerException = $rt_classWithoutFields(jl_RuntimeException);
function jl_NullPointerException__init_0(var_0) {
    var var_1 = new jl_NullPointerException();
    jl_NullPointerException__init_1(var_1, var_0);
    return var_1;
}
function jl_NullPointerException__init_() {
    var var_0 = new jl_NullPointerException();
    jl_NullPointerException__init_2(var_0);
    return var_0;
}
function jl_NullPointerException__init_1($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function jl_NullPointerException__init_2($this) {
    jl_RuntimeException__init_1($this);
}
var cgxgbwp_Preloader$3 = $rt_classWithoutFields();
var cgxgbwp_Preloader$3_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType = null;
function cgxgbwp_Preloader$3_$callClinit() {
    cgxgbwp_Preloader$3_$callClinit = $rt_eraseClinit(cgxgbwp_Preloader$3);
    cgxgbwp_Preloader$3__clinit_();
}
function cgxgbwp_Preloader$3__clinit_() {
    cgxgbwp_Preloader$3_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType = $rt_createIntArray((cgxgbwp_AssetType_values()).data.length);
    cgxgbwp_Preloader$3_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal(cgxgbwp_AssetType_Text)] = 1;
    cgxgbwp_Preloader$3_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal(cgxgbwp_AssetType_Image)] = 2;
    cgxgbwp_Preloader$3_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal(cgxgbwp_AssetType_Binary)] = 3;
    cgxgbwp_Preloader$3_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal(cgxgbwp_AssetType_Audio)] = 4;
    cgxgbwp_Preloader$3_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal(cgxgbwp_AssetType_Directory)] = 5;
}
function cgxgbwp_Preloader$2() {
    var a = this; cgxgbw_AssetLoaderListener.call(a);
    a.$val$listener = null;
    a.$val$type = null;
    a.$val$url = null;
    a.$this$018 = null;
}
function cgxgbwp_Preloader$2__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgxgbwp_Preloader$2();
    cgxgbwp_Preloader$2__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgxgbwp_Preloader$2__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$018 = $this$0;
    $this.$val$listener = var$2;
    $this.$val$type = var$3;
    $this.$val$url = var$4;
    cgxgbw_AssetLoaderListener__init_0($this);
}
function cgxgbwp_Preloader$2_onProgress($this, $amount) {
    $this.$val$listener.$onProgress($amount);
}
function cgxgbwp_Preloader$2_onFailure($this, $urll) {
    $this.$val$listener.$onFailure($urll);
}
function cgxgbwp_Preloader$2_onSuccess($this, $urll, $result) {
    $this.$this$018.$putAssetInMap($this.$val$type, $this.$val$url, $result);
    $this.$val$listener.$onSuccess0($urll, $result);
    return 0;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
    jur_AbstractCharClass.call(this);
    this.$this$019 = null;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1();
    jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0($this, $this$0) {
    $this.$this$019 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1_contains($this, $ch) {
    return jl_Character_isSpaceChar($ch);
}
function jl_Object$Monitor() {
    var a = this; jl_Object.call(a);
    a.$enteringThreads = null;
    a.$notifyListeners = null;
    a.$owner = null;
    a.$count = 0;
}
function jl_Object$Monitor__init_() {
    var var_0 = new jl_Object$Monitor();
    jl_Object$Monitor__init_0(var_0);
    return var_0;
}
function jl_Object$Monitor__init_0($this) {
    jl_Object__init_0($this);
    $this.$owner = jl_Thread_currentThread();
}
function cbgggf_FreeType$Glyph() {
    cbgggf_FreeType$Pointer.call(this);
    this.$rendered = 0;
}
function cbgggf_FreeType$Glyph__init_(var_0) {
    var var_1 = new cbgggf_FreeType$Glyph();
    cbgggf_FreeType$Glyph__init_0(var_1, var_0);
    return var_1;
}
function cbgggf_FreeType$Glyph__init_0($this, $address) {
    cbgggf_FreeType$Pointer__init_0($this, $address);
}
function cbgggf_FreeType$Glyph_dispose($this) {
    Module._c_Glyph_done($this.$address);
}
function cbgggf_FreeType$Glyph_bTI($this, $bool) {
    return $bool != 1 ? 0 : 1;
}
function cbgggf_FreeType$Glyph_strokeBorder($this, $stroker, $inside) {
    var var$3, var$4, var$5;
    var$3 = $this.$address;
    var$4 = $stroker.$address;
    var$5 = cbgggf_FreeType$Glyph_bTI($this, $inside);
    $this.$address = Module._c_Glyph_strokeBorder(var$3, var$4, var$5);
}
function cbgggf_FreeType$Glyph_toBitmap($this, $renderMode) {
    var $bitmap;
    $bitmap = Module._c_Glyph_toBitmap($this.$address, $renderMode);
    if ($bitmap) {
        $this.$address = $bitmap;
        $this.$rendered = 1;
        return;
    }
    $rt_throw(cbgu_GdxRuntimeException__init_((((jl_StringBuilder__init_()).$append($rt_s(397))).$append0(Module._c_FreeType_getLastErrorCode())).$toString()));
}
function cbgggf_FreeType$Glyph_getBitmap($this) {
    if (!$this.$rendered)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(398)));
    return cbgggf_FreeType$Bitmap__init_(Module._c_Glyph_getBitmap($this.$address));
}
function cbgggf_FreeType$Glyph_getLeft($this) {
    if (!$this.$rendered)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(398)));
    return Module._c_Glyph_getLeft($this.$address);
}
function cbgggf_FreeType$Glyph_getTop($this) {
    if (!$this.$rendered)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(398)));
    return Module._c_Glyph_getTop($this.$address);
}
var jl_Math = $rt_classWithoutFields();
function jl_Math_sqrt(var$1) {
    return Math.sqrt(var$1);
}
function jl_Math_ceil(var$1) {
    return Math.ceil(var$1);
}
function jl_Math_pow(var$1, var$2) {
    return Math.pow(var$1, var$2);
}
function jl_Math_round($a) {
    return $a + jl_Math_signum($a) * 0.5 | 0;
}
function jl_Math_min($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_min0($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max0($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_abs0($n) {
    if ($n <= 0)
        $n =  -$n | 0;
    return $n;
}
function jl_Math_abs($n) {
    if ($n <= 0.0)
        $n =  -$n;
    return $n;
}
function jl_Math_signum($d) {
    var var$2;
    var$2 = $rt_compare($d, 0.0);
    if (var$2 > 0)
        $d = 1.0;
    else if (var$2 < 0)
        $d = (-1.0);
    return $d;
}
function cbggg_VertexBufferObjectSubData() {
    var a = this; jl_Object.call(a);
    a.$attributes0 = null;
    a.$buffer3 = null;
    a.$byteBuffer = null;
    a.$bufferHandle0 = 0;
    a.$isDirect0 = 0;
    a.$isStatic = 0;
    a.$usage1 = 0;
    a.$isDirty0 = 0;
    a.$isBound0 = 0;
}
function cbggg_VertexBufferObjectSubData__init_(var_0, var_1, var_2) {
    var var_3 = new cbggg_VertexBufferObjectSubData();
    cbggg_VertexBufferObjectSubData__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_VertexBufferObjectSubData__init_0($this, $isStatic, $numVertices, $attributes) {
    jl_Object__init_0($this);
    $this.$isDirty0 = 0;
    $this.$isBound0 = 0;
    $this.$isStatic = $isStatic;
    $this.$attributes0 = $attributes;
    $this.$byteBuffer = cbgu_BufferUtils_newByteBuffer($rt_imul($this.$attributes0.$vertexSize, $numVertices));
    $this.$isDirect0 = 1;
    $this.$usage1 = !$isStatic ? 35048 : 35044;
    $this.$buffer3 = $this.$byteBuffer.$asFloatBuffer();
    $this.$bufferHandle0 = cbggg_VertexBufferObjectSubData_createBufferObject($this);
    $this.$buffer3.$flip0();
    $this.$byteBuffer.$flip0();
}
function cbggg_VertexBufferObjectSubData_createBufferObject($this) {
    var $result;
    $result = cbg_Gdx_gl20.$glGenBuffer();
    cbg_Gdx_gl20.$glBindBuffer(34962, $result);
    cbg_Gdx_gl20.$glBufferData(34962, jn_Buffer_capacity($this.$byteBuffer), null, $this.$usage1);
    cbg_Gdx_gl20.$glBindBuffer(34962, 0);
    return $result;
}
function cbggg_VertexBufferObjectSubData_bufferChanged($this) {
    if ($this.$isBound0) {
        cbg_Gdx_gl20.$glBufferSubData(34962, 0, jn_Buffer_limit($this.$byteBuffer), $this.$byteBuffer);
        $this.$isDirty0 = 0;
    }
}
function cbggg_VertexBufferObjectSubData_setVertices($this, $vertices, $offset, $count) {
    $this.$isDirty0 = 1;
    if ($this.$isDirect0) {
        cbgu_BufferUtils_copy1($vertices, $this.$byteBuffer, $count, $offset);
        $this.$buffer3.$position2(0);
        $this.$buffer3.$limit0($count);
    } else {
        $this.$buffer3.$clear0();
        $this.$buffer3.$put10($vertices, $offset, $count);
        $this.$buffer3.$flip0();
        $this.$byteBuffer.$position2(0);
        $this.$byteBuffer.$limit0(jn_Buffer_limit($this.$buffer3) << 2);
    }
    cbggg_VertexBufferObjectSubData_bufferChanged($this);
}
function cbggg_VertexBufferObjectSubData_bind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, var$6, $attribute, $location;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle0);
    if ($this.$isDirty0) {
        $this.$byteBuffer.$limit0(jn_Buffer_limit($this.$buffer3) * 4 | 0);
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$byteBuffer), $this.$byteBuffer, $this.$usage1);
        $this.$isDirty0 = 0;
    }
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes0);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$6 = $locations.data;
                $attribute = cbgg_VertexAttributes_get($this.$attributes0, $i);
                $location = var$6[$i];
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type1, $attribute.$normalized, $this.$attributes0.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = cbgg_VertexAttributes_get($this.$attributes0, $i);
            $location = $shader.$getAttributeLocation($attribute.$alias);
            if ($location >= 0) {
                $shader.$enableVertexAttribute($location);
                $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type1, $attribute.$normalized, $this.$attributes0.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound0 = 1;
}
function cbggg_VertexBufferObjectSubData_unbind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, $location;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes0);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                $shader.$disableVertexAttribute((cbgg_VertexAttributes_get($this.$attributes0, $i)).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    $shader.$disableVertexAttribute0($location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound0 = 0;
}
var cbg_Files = $rt_classWithoutFields(0);
var cgxgbtd_TeaWebAgent = $rt_classWithoutFields();
function cgxgbtd_TeaWebAgent_computeAgentInfo() {
    var $jsObj;
    $jsObj = cgxgbtd_TeaWebAgent_createAgent$js_body$_1();
    return $jsObj;
}
function cgxgbtd_TeaWebAgent_createAgent$js_body$_1() {
    var userAgent = navigator.userAgent.toLowerCase();
    return { firefox : userAgent.indexOf('firefox') !=  -1, chrome : userAgent.indexOf('chrome') !=  -1, safari : userAgent.indexOf('safari') !=  -1, opera : userAgent.indexOf('opera') !=  -1, IE : userAgent.indexOf('msie') !=  -1, macOS : userAgent.indexOf('mac') !=  -1, linux : userAgent.indexOf('linux') !=  -1, windows : userAgent.indexOf('win') !=  -1 };
}
var jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var cgxgbwd_WindowWrapper = $rt_classWithoutFields(0);
function jur_PatternSyntaxException() {
    var a = this; jl_IllegalArgumentException.call(a);
    a.$desc = null;
    a.$pattern = null;
    a.$index1 = 0;
}
function jur_PatternSyntaxException__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PatternSyntaxException();
    jur_PatternSyntaxException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PatternSyntaxException__init_0($this, $description, $pattern, $index) {
    jl_IllegalArgumentException__init_1($this);
    $this.$index1 = (-1);
    $this.$desc = $description;
    $this.$pattern = $pattern;
    $this.$index1 = $index;
}
function jur_PatternSyntaxException_getMessage($this) {
    var $filler, $temp;
    $filler = $rt_s(88);
    if ($this.$index1 >= 1) {
        $temp = $rt_createCharArray($this.$index1);
        ju_Arrays_fill2($temp, 32);
        $filler = jl_String__init_($temp);
    }
    return (((jl_StringBuilder__init_()).$append($this.$desc)).$append($this.$pattern !== null && $this.$pattern.$length() ? ((((((jl_StringBuilder__init_()).$append0($this.$index1)).$append($rt_s(399))).$append($this.$pattern)).$append($rt_s(399))).$append($filler)).$toString() : $rt_s(88))).$toString();
}
function cbgu_Pool() {
    var a = this; jl_Object.call(a);
    a.$max2 = 0;
    a.$peak = 0;
    a.$freeObjects = null;
}
function cbgu_Pool__init_($this, $initialCapacity, $max) {
    jl_Object__init_0($this);
    $this.$freeObjects = cbgu_Array__init_3(0, $initialCapacity);
    $this.$max2 = $max;
}
function cbgu_Pool_obtain($this) {
    return !$this.$freeObjects.$size1 ? $this.$newObject() : $this.$freeObjects.$pop();
}
function cbgu_Pool_free($this, $object) {
    if ($object === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(400)));
    if ($this.$freeObjects.$size1 >= $this.$max2)
        $this.$discard($object);
    else {
        $this.$freeObjects.$add3($object);
        $this.$peak = jl_Math_max($this.$peak, $this.$freeObjects.$size1);
        $this.$reset2($object);
    }
}
function cbgu_Pool_reset($this, $object) {
    if ($rt_isInstance($object, cbgu_Pool$Poolable))
        $object.$reset0();
}
function cbgu_Pool_discard($this, $object) {}
function cbgu_Pool_freeAll($this, $objects) {
    var $freeObjects, $max, $i, $n, $object;
    if ($objects === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(25)));
    $freeObjects = $this.$freeObjects;
    $max = $this.$max2;
    $i = 0;
    $n = $objects.$size1;
    while ($i < $n) {
        $object = $objects.$get($i);
        if ($object !== null) {
            if ($freeObjects.$size1 >= $max)
                $this.$discard($object);
            else {
                $freeObjects.$add3($object);
                $this.$reset2($object);
            }
        }
        $i = $i + 1 | 0;
    }
    $this.$peak = jl_Math_max($this.$peak, $freeObjects.$size1);
}
function cbgu_ReflectionPool() {
    cbgu_Pool.call(this);
    this.$constructor = null;
}
function cbgu_ReflectionPool__init_(var_0, var_1, var_2) {
    var var_3 = new cbgu_ReflectionPool();
    cbgu_ReflectionPool__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgu_ReflectionPool__init_0($this, $type, $initialCapacity, $max) {
    cbgu_Pool__init_($this, $initialCapacity, $max);
    $this.$constructor = cbgu_ReflectionPool_findConstructor($this, $type);
    if ($this.$constructor !== null)
        return;
    $rt_throw(jl_RuntimeException__init_((((jl_StringBuilder__init_()).$append($rt_s(401))).$append($type.$getName())).$toString()));
}
function cbgu_ReflectionPool_findConstructor($this, $type) {
    var var$2, $constructor, $$je;
    a: {
        try {
            var$2 = cbgur_ClassReflection_getConstructor($type, null);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    b: {
        try {
            $constructor = cbgur_ClassReflection_getDeclaredConstructor($type, null);
            cbgur_Constructor_setAccessible($constructor, 1);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof cbgur_ReflectionException) {
                break b;
            } else {
                throw $$e;
            }
        }
        return $constructor;
    }
    return null;
}
function cbgu_ReflectionPool_newObject($this) {
    var var$1, $ex, $$je;
    a: {
        try {
            var$1 = cbgur_Constructor_newInstance($this.$constructor, null);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $ex = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    $rt_throw(cbgu_GdxRuntimeException__init_0((((jl_StringBuilder__init_()).$append($rt_s(402))).$append((cbgur_Constructor_getDeclaringClass($this.$constructor)).$getName())).$toString(), $ex));
}
var jur_AbstractCharClass$LazyJavaDefined = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaDefined__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDefined();
    jur_AbstractCharClass$LazyJavaDefined__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDefined__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaDefined_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDefined$1__init_($this);
    $chCl.$lowHighSurrogates.$set(0, 2048);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var cbgm_Vector = $rt_classWithoutFields(0);
var cbgg_Mesh$VertexDataType = $rt_classWithoutFields(jl_Enum);
var cbgg_Mesh$VertexDataType_VertexArray = null;
var cbgg_Mesh$VertexDataType_VertexBufferObject = null;
var cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = null;
var cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = null;
var cbgg_Mesh$VertexDataType_$VALUES = null;
function cbgg_Mesh$VertexDataType_$callClinit() {
    cbgg_Mesh$VertexDataType_$callClinit = $rt_eraseClinit(cbgg_Mesh$VertexDataType);
    cbgg_Mesh$VertexDataType__clinit_();
}
function cbgg_Mesh$VertexDataType__init_(var_0, var_1) {
    var var_2 = new cbgg_Mesh$VertexDataType();
    cbgg_Mesh$VertexDataType__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_Mesh$VertexDataType_values() {
    cbgg_Mesh$VertexDataType_$callClinit();
    return cbgg_Mesh$VertexDataType_$VALUES.$clone();
}
function cbgg_Mesh$VertexDataType__init_0($this, var$1, var$2) {
    cbgg_Mesh$VertexDataType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_Mesh$VertexDataType__clinit_() {
    cbgg_Mesh$VertexDataType_VertexArray = cbgg_Mesh$VertexDataType__init_($rt_s(403), 0);
    cbgg_Mesh$VertexDataType_VertexBufferObject = cbgg_Mesh$VertexDataType__init_($rt_s(404), 1);
    cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = cbgg_Mesh$VertexDataType__init_($rt_s(405), 2);
    cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = cbgg_Mesh$VertexDataType__init_($rt_s(406), 3);
    cbgg_Mesh$VertexDataType_$VALUES = $rt_createArrayFromData(cbgg_Mesh$VertexDataType, [cbgg_Mesh$VertexDataType_VertexArray, cbgg_Mesh$VertexDataType_VertexBufferObject, cbgg_Mesh$VertexDataType_VertexBufferObjectSubData, cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO]);
}
function cgxgbwp_Blob$1() {
    var a = this; ji_InputStream.call(a);
    a.$pos0 = 0;
    a.$this$020 = null;
}
function cgxgbwp_Blob$1__init_(var_0) {
    var var_1 = new cgxgbwp_Blob$1();
    cgxgbwp_Blob$1__init_0(var_1, var_0);
    return var_1;
}
function cgxgbwp_Blob$1__init_0($this, $this$0) {
    $this.$this$020 = $this$0;
    ji_InputStream__init_($this);
}
function cgxgbwp_Blob$1_read($this) {
    var var$1, var$2;
    if ($this.$pos0 == cgxgbwp_Blob_length($this.$this$020))
        return (-1);
    var$1 = $this.$this$020;
    var$2 = $this.$pos0;
    $this.$pos0 = var$2 + 1 | 0;
    return cgxgbwp_Blob_get(var$1, var$2) & 255;
}
function cbgu_ObjectMap() {
    var a = this; jl_Object.call(a);
    a.$size9 = 0;
    a.$keyTable2 = null;
    a.$valueTable1 = null;
    a.$loadFactor3 = 0.0;
    a.$threshold3 = 0;
    a.$shift2 = 0;
    a.$mask2 = 0;
}
var cbgu_ObjectMap_dummy = null;
function cbgu_ObjectMap_$callClinit() {
    cbgu_ObjectMap_$callClinit = $rt_eraseClinit(cbgu_ObjectMap);
    cbgu_ObjectMap__clinit_();
}
function cbgu_ObjectMap__init_() {
    var var_0 = new cbgu_ObjectMap();
    cbgu_ObjectMap__init_0(var_0);
    return var_0;
}
function cbgu_ObjectMap__init_1(var_0, var_1) {
    var var_2 = new cbgu_ObjectMap();
    cbgu_ObjectMap__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_ObjectMap__init_0($this) {
    cbgu_ObjectMap_$callClinit();
    cbgu_ObjectMap__init_2($this, 51, 0.800000011920929);
}
function cbgu_ObjectMap__init_2($this, $initialCapacity, $loadFactor) {
    var $tableSize;
    cbgu_ObjectMap_$callClinit();
    jl_Object__init_0($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor3 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold3 = $tableSize * $loadFactor | 0;
        $this.$mask2 = $tableSize - 1 | 0;
        $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask2));
        $this.$keyTable2 = $rt_createArray(jl_Object, $tableSize);
        $this.$valueTable1 = $rt_createArray(jl_Object, $tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(24))).$append2($loadFactor)).$toString()));
}
function cbgu_ObjectMap_place($this, $item) {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item.$hashCode0()), Long_create(2135587861, 2654435769)), $this.$shift2));
}
function cbgu_ObjectMap_locateKey($this, $key) {
    var $keyTable, $i, $other;
    if ($key === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(407)));
    $keyTable = $this.$keyTable2;
    $i = $this.$place1($key);
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if ($other.$equals($key))
            break;
        $i = ($i + 1 | 0) & $this.$mask2;
    }
    return $i;
}
function cbgu_ObjectMap_put($this, $key, $value) {
    var $i, $oldValue, var$5;
    $i = $this.$locateKey1($key);
    if ($i >= 0) {
        $oldValue = $this.$valueTable1.data[$i];
        $this.$valueTable1.data[$i] = $value;
        return $oldValue;
    }
    var$5 =  -($i + 1 | 0) | 0;
    $this.$keyTable2.data[var$5] = $key;
    $this.$valueTable1.data[var$5] = $value;
    var$5 = $this.$size9 + 1 | 0;
    $this.$size9 = var$5;
    if (var$5 >= $this.$threshold3)
        cbgu_ObjectMap_resize($this, $this.$keyTable2.data.length << 1);
    return null;
}
function cbgu_ObjectMap_putResize($this, $key, $value) {
    var $keyTable, $i, var$5;
    $keyTable = $this.$keyTable2;
    $i = $this.$place1($key);
    while (true) {
        var$5 = $keyTable.data;
        if (var$5[$i] === null)
            break;
        $i = ($i + 1 | 0) & $this.$mask2;
    }
    var$5[$i] = $key;
    $this.$valueTable1.data[$i] = $value;
}
function cbgu_ObjectMap_get($this, $key) {
    var $i;
    $i = $this.$locateKey1($key);
    return $i < 0 ? null : $this.$valueTable1.data[$i];
}
function cbgu_ObjectMap_clear($this) {
    if (!$this.$size9)
        return;
    $this.$size9 = 0;
    ju_Arrays_fill4($this.$keyTable2, null);
    ju_Arrays_fill4($this.$valueTable1, null);
}
function cbgu_ObjectMap_containsKey($this, $key) {
    return $this.$locateKey1($key) < 0 ? 0 : 1;
}
function cbgu_ObjectMap_resize($this, $newSize) {
    var $oldCapacity, $oldKeyTable, $oldValueTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable2.data.length;
        $this.$threshold3 = $newSize * $this.$loadFactor3 | 0;
        $this.$mask2 = $newSize - 1 | 0;
        $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask2));
        $oldKeyTable = $this.$keyTable2;
        $oldValueTable = $this.$valueTable1;
        $this.$keyTable2 = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable1 = $rt_createArray(jl_Object, $newSize);
        if ($this.$size9 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null)
                    cbgu_ObjectMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbgu_ObjectMap__clinit_() {
    cbgu_ObjectMap_dummy = jl_Object__init_();
}
function jur_Pattern() {
    var a = this; jl_Object.call(a);
    a.$lexemes = null;
    a.$flags = 0;
    a.$backRefs = null;
    a.$needsBackRefReplacement = 0;
    a.$globalGroupIndex = 0;
    a.$compCount = 0;
    a.$consCount = 0;
    a.$start9 = null;
}
function jur_Pattern__init_() {
    var var_0 = new jur_Pattern();
    jur_Pattern__init_0(var_0);
    return var_0;
}
function jur_Pattern_matcher($this, $input) {
    return jur_Matcher__init_($this, $input);
}
function jur_Pattern_split0($this, $inputSeq, $limit) {
    var $res, $mat, $index, $curPos, var$7, var$8;
    $res = ju_ArrayList__init_();
    $mat = jur_Pattern_matcher($this, $inputSeq);
    $index = 0;
    $curPos = 0;
    if (!$inputSeq.$length()) {
        var$7 = $rt_createArray(jl_String, 1);
        var$7.data[0] = $rt_s(88);
        return var$7;
    }
    while (jur_Matcher_find($mat)) {
        var$8 = $index + 1 | 0;
        if (var$8 >= $limit && $limit > 0)
            break;
        $res.$add5(($inputSeq.$subSequence($curPos, jur_Matcher_start($mat))).$toString());
        $curPos = jur_Matcher_end($mat);
        $index = var$8;
    }
    a: {
        $res.$add5(($inputSeq.$subSequence($curPos, $inputSeq.$length())).$toString());
        var$8 = $index + 1 | 0;
        if (!$limit)
            while (true) {
                var$8 = var$8 + (-1) | 0;
                if (var$8 < 0)
                    break;
                if ((($res.$get(var$8)).$toString()).$length())
                    break a;
                $res.$remove(var$8);
            }
    }
    if (var$8 < 0)
        var$8 = 0;
    return $res.$toArray($rt_createArray(jl_String, var$8));
}
function jur_Pattern_split($this, $input) {
    return jur_Pattern_split0($this, $input, 0);
}
function jur_Pattern_pattern($this) {
    return $this.$lexemes.$toString();
}
function jur_Pattern_compile0($pattern, $flags) {
    if ($pattern === null)
        $rt_throw(jl_NullPointerException__init_0($rt_s(408)));
    if ($flags && ($flags | 255) != 255)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(88)));
    jur_AbstractSet_$callClinit();
    jur_AbstractSet_counter = 1;
    return jur_Pattern_compileImpl(jur_Pattern__init_(), $pattern, $flags);
}
function jur_Pattern_compileImpl($this, $pattern, $flags) {
    $this.$lexemes = jur_Lexer__init_($pattern, $flags);
    $this.$flags = $flags;
    $this.$start9 = jur_Pattern_processExpression($this, (-1), $this.$flags, null);
    if ($this.$lexemes.$isEmpty()) {
        jur_Pattern_finalizeCompile($this);
        return $this;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
}
function jur_Pattern_processAlternations($this, $last) {
    var $auxRange, var$3, $rangeSet;
    $auxRange = jur_CharClass__init_0(jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    while (!$this.$lexemes.$isEmpty()) {
        var$3 = $this.$lexemes;
        if (!var$3.$isLetter())
            break;
        var$3 = $this.$lexemes;
        if (var$3.$lookAhead() && $this.$lexemes.$lookAhead() != (-536870788)) {
            var$3 = $this.$lexemes;
            if (var$3.$lookAhead() != (-536870871))
                break;
        }
        $auxRange.$add($this.$lexemes.$next2());
        if ($this.$lexemes.$peek0() != (-536870788))
            continue;
        $this.$lexemes.$next2();
    }
    $rangeSet = jur_Pattern_processRangeSet($this, $auxRange);
    $rangeSet.$setNext($last);
    return $rangeSet;
}
function jur_Pattern_processExpression($this, $ch, $newFlags, $last) {
    var $children, $saveFlags, $saveChangedFlags, $fSet, var$8, $child;
    $children = ju_ArrayList__init_();
    $saveFlags = $this.$flags;
    $saveChangedFlags = 0;
    if ($newFlags != $this.$flags)
        $this.$flags = $newFlags;
    a: {
        switch ($ch) {
            case -1073741784:
                $fSet = new jur_NonCapFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_NonCapFSet__init_($fSet, var$8);
                break a;
            case -536870872:
            case -268435416:
                break;
            case -134217688:
            case -67108824:
                $fSet = new jur_BehindFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_BehindFSet__init_0($fSet, var$8);
                break a;
            case -33554392:
                $fSet = new jur_AtomicFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_AtomicFSet__init_0($fSet, var$8);
                break a;
            default:
                $this.$globalGroupIndex = $this.$globalGroupIndex + 1 | 0;
                if ($last !== null)
                    $fSet = jur_FSet__init_($this.$globalGroupIndex);
                else {
                    $fSet = jur_FinalSet__init_();
                    $saveChangedFlags = 1;
                }
                if ($this.$globalGroupIndex <= (-1))
                    break a;
                if ($this.$globalGroupIndex >= 10)
                    break a;
                $this.$backRefs.data[$this.$globalGroupIndex] = $fSet;
                break a;
        }
        $fSet = jur_AheadFSet__init_();
    }
    while (true) {
        if ($this.$lexemes.$isLetter() && $this.$lexemes.$lookAhead() == (-536870788))
            $child = jur_Pattern_processAlternations($this, $fSet);
        else if ($this.$lexemes.$peek0() == (-536870788)) {
            $child = jur_EmptySet__init_($fSet);
            $this.$lexemes.$next2();
        } else {
            $child = jur_Pattern_processSubExpression($this, $fSet);
            if ($this.$lexemes.$peek0() == (-536870788))
                $this.$lexemes.$next2();
        }
        if ($child !== null)
            $children.$add5($child);
        if ($this.$lexemes.$isEmpty())
            break;
        if ($this.$lexemes.$peek0() == (-536870871))
            break;
    }
    if ($this.$lexemes.$back() == (-536870788))
        $children.$add5(jur_EmptySet__init_($fSet));
    if ($this.$flags != $saveFlags && !$saveChangedFlags) {
        $this.$flags = $saveFlags;
        $this.$lexemes.$restoreFlags($this.$flags);
    }
    switch ($ch) {
        case -1073741784:
            break;
        case -536870872:
            return jur_PositiveLookAhead__init_($children, $fSet);
        case -268435416:
            return jur_NegativeLookAhead__init_($children, $fSet);
        case -134217688:
            return jur_PositiveLookBehind__init_($children, $fSet);
        case -67108824:
            return jur_NegativeLookBehind__init_($children, $fSet);
        case -33554392:
            return jur_AtomicJointSet__init_($children, $fSet);
        default:
            switch ($children.$size()) {
                case 0:
                    break;
                case 1:
                    return jur_SingleSet__init_($children.$get(0), $fSet);
                default:
                    return jur_JointSet__init_1($children, $fSet);
            }
            return jur_EmptySet__init_($fSet);
    }
    return jur_NonCapJointSet__init_($children, $fSet);
}
function jur_Pattern_processSequence($this) {
    var $substring, var$2, $ch;
    $substring = jl_StringBuffer__init_();
    while (!$this.$lexemes.$isEmpty()) {
        var$2 = $this.$lexemes;
        if (!var$2.$isLetter())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isHighSurrogate0())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isLowSurrogate0())
            break;
        var$2 = $this.$lexemes;
        if (!(!var$2.$isNextSpecial() && !$this.$lexemes.$lookAhead())) {
            var$2 = $this.$lexemes;
            if (!(!var$2.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead()))) {
                var$2 = $this.$lexemes;
                if (var$2.$lookAhead() != (-536870871)) {
                    var$2 = $this.$lexemes;
                    if ((var$2.$lookAhead() & (-2147418113)) != (-2147483608)) {
                        var$2 = $this.$lexemes;
                        if (var$2.$lookAhead() != (-536870788)) {
                            var$2 = $this.$lexemes;
                            if (var$2.$lookAhead() != (-536870876))
                                break;
                        }
                    }
                }
            }
        }
        $ch = $this.$lexemes.$next2();
        if (!jl_Character_isSupplementaryCodePoint($ch))
            $substring.$append11($ch & 65535);
        else
            $substring.$append12(jl_Character_toChars($ch));
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_SequenceSet__init_($substring);
    if (jur_Pattern_hasFlag($this, 64))
        return jur_UCISequenceSet__init_($substring);
    return jur_CISequenceSet__init_($substring);
}
function jur_Pattern_processDecomposedChar($this) {
    var $codePoints, $readCodePoints, $curSymb, $curSymbIndex, var$5, $codePointsHangul, var$7, var$8, var$9, var$10;
    $codePoints = $rt_createIntArray(4);
    $readCodePoints = 0;
    $curSymb = (-1);
    $curSymbIndex = (-1);
    if (!$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter()) {
        var$5 = $codePoints.data;
        $curSymb = $this.$lexemes.$next2();
        var$5[$readCodePoints] = $curSymb;
        $curSymbIndex = $curSymb - 4352 | 0;
    }
    if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
        $codePointsHangul = $rt_createCharArray(3);
        var$5 = $codePointsHangul.data;
        var$5[$readCodePoints] = $curSymb & 65535;
        var$7 = $this.$lexemes.$peek0();
        var$8 = var$7 - 4449 | 0;
        if (var$8 >= 0 && var$8 < 21) {
            var$5[1] = var$7 & 65535;
            $this.$lexemes.$next2();
            var$9 = $this.$lexemes.$peek0();
            var$7 = var$9 - 4519 | 0;
            if (var$7 >= 0 && var$7 < 28) {
                var$5[2] = var$9 & 65535;
                $this.$lexemes.$next2();
                return jur_HangulDecomposedCharSet__init_($codePointsHangul, 3);
            }
            return jur_HangulDecomposedCharSet__init_($codePointsHangul, 2);
        }
        if (!jur_Pattern_hasFlag($this, 2))
            return jur_CharSet__init_(var$5[0]);
        if (jur_Pattern_hasFlag($this, 64))
            return jur_UCICharSet__init_(var$5[0]);
        return jur_CICharSet__init_(var$5[0]);
    }
    var$10 = 1;
    while (var$10 < 4 && !$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter()) {
        var$5 = $codePoints.data;
        var$9 = var$10 + 1 | 0;
        var$5[var$10] = $this.$lexemes.$next2();
        var$10 = var$9;
    }
    if (var$10 == 1) {
        var$5 = $codePoints.data;
        if (!jur_Lexer_hasSingleCodepointDecomposition(var$5[0]))
            return jur_Pattern_processCharSet($this, var$5[0]);
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_DecomposedCharSet__init_($codePoints, var$10);
    if (jur_Pattern_hasFlag($this, 64))
        return jur_UCIDecomposedCharSet__init_($codePoints, var$10);
    return jur_CIDecomposedCharSet__init_($codePoints, var$10);
}
function jur_Pattern_processSubExpression($this, $last) {
    var $cur, $term, var$4, $next;
    if ($this.$lexemes.$isLetter() && !$this.$lexemes.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead())) {
        if (!jur_Pattern_hasFlag($this, 128)) {
            if (!$this.$lexemes.$isHighSurrogate0() && !$this.$lexemes.$isLowSurrogate0())
                $cur = jur_Pattern_processSequence($this);
            else {
                $term = jur_Pattern_processTerminal($this, $last);
                $cur = jur_Pattern_processQuantifier($this, $last, $term);
            }
        } else {
            $cur = jur_Pattern_processDecomposedChar($this);
            if (!$this.$lexemes.$isEmpty()) {
                var$4 = $this.$lexemes;
                if (!(var$4.$peek0() == (-536870871) && !($last instanceof jur_FinalSet))) {
                    var$4 = $this.$lexemes;
                    if (var$4.$peek0() != (-536870788) && !$this.$lexemes.$isLetter())
                        $cur = jur_Pattern_processQuantifier($this, $last, $cur);
                }
            }
        }
    } else if ($this.$lexemes.$peek0() != (-536870871)) {
        $term = jur_Pattern_processTerminal($this, $last);
        $cur = jur_Pattern_processQuantifier($this, $last, $term);
    } else {
        if ($last instanceof jur_FinalSet)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
        $cur = jur_EmptySet__init_($last);
    }
    a: {
        if (!$this.$lexemes.$isEmpty()) {
            var$4 = $this.$lexemes;
            if (!(var$4.$peek0() == (-536870871) && !($last instanceof jur_FinalSet))) {
                var$4 = $this.$lexemes;
                if (var$4.$peek0() != (-536870788)) {
                    $next = jur_Pattern_processSubExpression($this, $last);
                    if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
                        var$4 = $cur;
                        if (!$next.$first(var$4.$getInnerSet()))
                            $cur = jur_UnifiedQuantifierSet__init_(var$4);
                    }
                    if (($next.$getType0() & 65535) != 43)
                        $cur.$setNext($next);
                    else
                        $cur.$setNext($next.$getInnerSet());
                    break a;
                }
            }
        }
        if ($cur === null)
            return null;
        $cur.$setNext($last);
    }
    if (($cur.$getType0() & 65535) != 43)
        return $cur;
    return $cur.$getInnerSet();
}
function jur_Pattern_processQuantifier($this, $last, $term) {
    var $quant, var$4, var$5, var$6, $q, var$8, $leaf;
    $quant = $this.$lexemes.$peek0();
    if ($term !== null && !($term instanceof jur_LeafSet)) {
        switch ($quant) {
            case -2147483606:
                $this.$lexemes.$next2();
                return jur_PossessiveGroupQuantifierSet__init_($term, $last, $quant);
            case -2147483605:
                $this.$lexemes.$next2();
                return jur_PosPlusGroupQuantifierSet__init_($term, $last, (-2147483606));
            case -2147483585:
                $this.$lexemes.$next2();
                return jur_PosAltGroupQuantifierSet__init_($term, $last, (-536870849));
            case -2147483525:
                var$4 = new jur_PosCompositeGroupQuantifierSet;
                var$5 = $this.$lexemes.$nextSpecial();
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_PosCompositeGroupQuantifierSet__init_0(var$4, var$5, $term, $last, (-536870849), var$6);
                return var$4;
            case -1073741782:
            case -1073741781:
                $this.$lexemes.$next2();
                $q = jur_ReluctantGroupQuantifierSet__init_($term, $last, $quant);
                $term.$setNext($q);
                return $q;
            case -1073741761:
                $this.$lexemes.$next2();
                $q = jur_RelAltGroupQuantifierSet__init_($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -1073741701:
                $q = new jur_RelCompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$8 = $this.$compCount + 1 | 0;
                $this.$compCount = var$8;
                jur_RelCompositeGroupQuantifierSet__init_0($q, var$4, $term, $last, (-536870849), var$8);
                $term.$setNext($q);
                return $q;
            case -536870870:
            case -536870869:
                $this.$lexemes.$next2();
                $q = $term.$getType0() != (-2147483602) ? jur_GroupQuantifierSet__init_($term, $last, $quant) : jur_Pattern_hasFlag($this, 32) ? jur_DotAllQuantifierSet__init_($term, $last, $quant) : jur_DotQuantifierSet__init_($term, $last, $quant, jur_AbstractLineTerminator_getInstance($this.$flags));
                $term.$setNext($q);
                return $q;
            case -536870849:
                $this.$lexemes.$next2();
                $q = jur_AltGroupQuantifierSet__init_($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -536870789:
                $q = new jur_CompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_CompositeGroupQuantifierSet__init_0($q, var$4, $term, $last, (-536870849), var$6);
                $term.$setNext($q);
                return $q;
            default:
        }
        return $term;
    }
    $leaf = null;
    if ($term !== null)
        $leaf = $term;
    switch ($quant) {
        case -2147483606:
        case -2147483605:
            $this.$lexemes.$next2();
            $q = jur_PossessiveQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -2147483585:
            $this.$lexemes.$next2();
            return jur_PossessiveAltQuantifierSet__init_($leaf, $last, (-2147483585));
        case -2147483525:
            return jur_PossessiveCompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-2147483525));
        case -1073741782:
        case -1073741781:
            $this.$lexemes.$next2();
            $q = jur_ReluctantQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -1073741761:
            $this.$lexemes.$next2();
            return jur_ReluctantAltQuantifierSet__init_($leaf, $last, (-1073741761));
        case -1073741701:
            return jur_ReluctantCompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-1073741701));
        case -536870870:
        case -536870869:
            $this.$lexemes.$next2();
            $q = jur_LeafQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -536870849:
            $this.$lexemes.$next2();
            return jur_AltQuantifierSet__init_($leaf, $last, (-536870849));
        case -536870789:
            return jur_CompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-536870789));
        default:
    }
    return $term;
}
function jur_Pattern_processTerminal($this, $last) {
    var $term, $ch, $newFlags, var$5, $negative, $cc, $number, var$9, var$10, var$11;
    $term = null;
    while (true) {
        a: {
            $ch = $this.$lexemes.$peek0();
            if (($ch & (-2147418113)) == (-2147483608)) {
                $this.$lexemes.$next2();
                $newFlags = ($ch & 16711680) >> 16;
                $ch = $ch & (-16711681);
                if ($ch == (-16777176))
                    $this.$flags = $newFlags;
                else {
                    if ($ch != (-1073741784))
                        $newFlags = $this.$flags;
                    $term = jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                    if ($this.$lexemes.$peek0() != (-536870871))
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $this.$lexemes.$next2();
                }
            } else {
                b: {
                    c: {
                        switch ($ch) {
                            case -2147483599:
                            case -2147483598:
                            case -2147483597:
                            case -2147483596:
                            case -2147483595:
                            case -2147483594:
                            case -2147483593:
                            case -2147483592:
                            case -2147483591:
                                break c;
                            case -2147483583:
                                break;
                            case -2147483582:
                                $this.$lexemes.$next2();
                                $term = jur_WordBoundary__init_(0);
                                break a;
                            case -2147483577:
                                $this.$lexemes.$next2();
                                $term = jur_PreviousMatch__init_();
                                break a;
                            case -2147483558:
                                $this.$lexemes.$next2();
                                $term = new jur_EOLSet;
                                var$5 = $this.$consCount + 1 | 0;
                                $this.$consCount = var$5;
                                jur_EOLSet__init_($term, var$5);
                                break a;
                            case -2147483550:
                                $this.$lexemes.$next2();
                                $term = jur_WordBoundary__init_(1);
                                break a;
                            case -2147483526:
                                $this.$lexemes.$next2();
                                $term = jur_EOISet__init_();
                                break a;
                            case -536870876:
                                $this.$lexemes.$next2();
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (jur_Pattern_hasFlag($this, 8)) {
                                    if (jur_Pattern_hasFlag($this, 1)) {
                                        $term = jur_UMultiLineEOLSet__init_($this.$consCount);
                                        break a;
                                    }
                                    $term = jur_MultiLineEOLSet__init_($this.$consCount);
                                    break a;
                                }
                                if (jur_Pattern_hasFlag($this, 1)) {
                                    $term = jur_UEOLSet__init_($this.$consCount);
                                    break a;
                                }
                                $term = jur_EOLSet__init_0($this.$consCount);
                                break a;
                            case -536870866:
                                $this.$lexemes.$next2();
                                if (jur_Pattern_hasFlag($this, 32)) {
                                    $term = jur_DotAllSet__init_();
                                    break a;
                                }
                                $term = jur_DotSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags));
                                break a;
                            case -536870821:
                                $this.$lexemes.$next2();
                                $negative = 0;
                                if ($this.$lexemes.$peek0() == (-536870818)) {
                                    $negative = 1;
                                    $this.$lexemes.$next2();
                                }
                                $term = jur_Pattern_processRange($this, $negative, $last);
                                if ($this.$lexemes.$peek0() != (-536870819))
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                                $this.$lexemes.$setMode(1);
                                $this.$lexemes.$next2();
                                break a;
                            case -536870818:
                                $this.$lexemes.$next2();
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (!jur_Pattern_hasFlag($this, 8)) {
                                    $term = jur_SOLSet__init_();
                                    break a;
                                }
                                $term = jur_MultiLineSOLSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags));
                                break a;
                            case 0:
                                $cc = $this.$lexemes.$peekSpecial();
                                if ($cc !== null)
                                    $term = jur_Pattern_processRangeSet($this, $cc);
                                else {
                                    if ($this.$lexemes.$isEmpty()) {
                                        $term = jur_EmptySet__init_($last);
                                        break a;
                                    }
                                    $term = jur_CharSet__init_($ch & 65535);
                                }
                                $this.$lexemes.$next2();
                                break a;
                            default:
                                break b;
                        }
                        $this.$lexemes.$next2();
                        $term = jur_SOLSet__init_();
                        break a;
                    }
                    $number = ($ch & 2147483647) - 48 | 0;
                    if ($this.$globalGroupIndex < $number)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $this.$lexemes.$next2();
                    $this.$consCount = $this.$consCount + 1 | 0;
                    $term = !jur_Pattern_hasFlag($this, 2) ? jur_BackReferenceSet__init_($number, $this.$consCount) : jur_Pattern_hasFlag($this, 64) ? jur_UCIBackReferenceSet__init_($number, $this.$consCount) : jur_CIBackReferenceSet__init_($number, $this.$consCount);
                    $this.$backRefs.data[$number].$isBackReferenced = 1;
                    $this.$needsBackRefReplacement = 1;
                    break a;
                }
                if ($ch >= 0 && !$this.$lexemes.$isSpecial()) {
                    $term = jur_Pattern_processCharSet($this, $ch);
                    $this.$lexemes.$next2();
                } else if ($ch == (-536870788))
                    $term = jur_EmptySet__init_($last);
                else {
                    if ($ch != (-536870871)) {
                        var$9 = new jur_PatternSyntaxException;
                        var$10 = !$this.$lexemes.$isSpecial() ? jl_Character_toString($ch & 65535) : ($this.$lexemes.$peekSpecial()).$toString();
                        var$11 = $this.$lexemes;
                        jur_PatternSyntaxException__init_0(var$9, var$10, var$11.$toString(), $this.$lexemes.$getIndex());
                        $rt_throw(var$9);
                    }
                    if ($last instanceof jur_FinalSet)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $term = jur_EmptySet__init_($last);
                }
            }
        }
        if ($ch != (-16777176))
            break;
    }
    return $term;
}
function jur_Pattern_processRange($this, $negative, $last) {
    var $res, $rangeSet;
    $res = jur_Pattern_processRangeExpression($this, $negative);
    $rangeSet = jur_Pattern_processRangeSet($this, $res);
    $rangeSet.$setNext($last);
    return $rangeSet;
}
function jur_Pattern_processRangeExpression($this, $alt) {
    var $res, $buffer, $intersection, $notClosed, $firstInClass, var$7, $cur, $negative, $cs, $$je;
    $res = jur_CharClass__init_1($alt, jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    $buffer = (-1);
    $intersection = 0;
    $notClosed = 0;
    $firstInClass = 1;
    a: {
        b: {
            c: while (true) {
                if ($this.$lexemes.$isEmpty())
                    break a;
                $notClosed = $this.$lexemes.$peek0() == (-536870819) && !$firstInClass ? 0 : 1;
                if (!$notClosed)
                    break a;
                d: {
                    switch ($this.$lexemes.$peek0()) {
                        case -536870874:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = $this.$lexemes.$next2();
                            if ($this.$lexemes.$peek0() != (-536870874)) {
                                $buffer = 38;
                                break d;
                            }
                            if ($this.$lexemes.$lookAhead() == (-536870821)) {
                                $this.$lexemes.$next2();
                                $intersection = 1;
                                $buffer = (-1);
                                break d;
                            }
                            $this.$lexemes.$next2();
                            if ($firstInClass) {
                                $res = jur_Pattern_processRangeExpression($this, 0);
                                break d;
                            }
                            if ($this.$lexemes.$peek0() == (-536870819))
                                break d;
                            $res.$intersection(jur_Pattern_processRangeExpression($this, 0));
                            break d;
                        case -536870867:
                            if (!$firstInClass && $this.$lexemes.$lookAhead() != (-536870819)) {
                                var$7 = $this.$lexemes;
                                if (var$7.$lookAhead() != (-536870821) && $buffer >= 0) {
                                    $this.$lexemes.$next2();
                                    $cur = $this.$lexemes.$peek0();
                                    if ($this.$lexemes.$isSpecial())
                                        break c;
                                    if ($cur < 0) {
                                        var$7 = $this.$lexemes;
                                        if (var$7.$lookAhead() != (-536870819)) {
                                            var$7 = $this.$lexemes;
                                            if (var$7.$lookAhead() != (-536870821) && $buffer >= 0)
                                                break c;
                                        }
                                    }
                                    e: {
                                        try {
                                            if (jur_Lexer_isLetter($cur))
                                                break e;
                                            $cur = $cur & 65535;
                                            break e;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_Exception) {
                                                break b;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                    try {
                                        $res.$add0($buffer, $cur);
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                    $this.$lexemes.$next2();
                                    $buffer = (-1);
                                    break d;
                                }
                            }
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 45;
                            $this.$lexemes.$next2();
                            break d;
                        case -536870821:
                            if ($buffer >= 0) {
                                $res.$add($buffer);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next2();
                            $negative = 0;
                            if ($this.$lexemes.$peek0() == (-536870818)) {
                                $this.$lexemes.$next2();
                                $negative = 1;
                            }
                            if (!$intersection)
                                $res.$union(jur_Pattern_processRangeExpression($this, $negative));
                            else
                                $res.$intersection(jur_Pattern_processRangeExpression($this, $negative));
                            $intersection = 0;
                            $this.$lexemes.$next2();
                            break d;
                        case -536870819:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 93;
                            $this.$lexemes.$next2();
                            break d;
                        case -536870818:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 94;
                            $this.$lexemes.$next2();
                            break d;
                        case 0:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $cs = $this.$lexemes.$peekSpecial();
                            if ($cs === null)
                                $buffer = 0;
                            else {
                                $res.$add6($cs);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next2();
                            break d;
                        default:
                    }
                    if ($buffer >= 0)
                        $res.$add($buffer);
                    $buffer = $this.$lexemes.$next2();
                }
                $firstInClass = 0;
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
    }
    if (!$notClosed) {
        if ($buffer >= 0)
            $res.$add($buffer);
        return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), jur_Pattern_pattern($this), $this.$lexemes.$getIndex() - 1 | 0));
}
function jur_Pattern_processCharSet($this, $ch) {
    var $isSupplCodePoint;
    $isSupplCodePoint = jl_Character_isSupplementaryCodePoint($ch);
    if (jur_Pattern_hasFlag($this, 2)) {
        a: {
            if (!($ch >= 97 && $ch <= 122)) {
                if ($ch < 65)
                    break a;
                if ($ch > 90)
                    break a;
            }
            return jur_CICharSet__init_($ch & 65535);
        }
        if (jur_Pattern_hasFlag($this, 64) && $ch > 128) {
            if ($isSupplCodePoint)
                return jur_UCISupplCharSet__init_($ch);
            if (jur_Lexer_isLowSurrogate($ch))
                return jur_LowSurrogateCharSet__init_($ch & 65535);
            if (!jur_Lexer_isHighSurrogate($ch))
                return jur_UCICharSet__init_($ch & 65535);
            return jur_HighSurrogateCharSet__init_($ch & 65535);
        }
    }
    if ($isSupplCodePoint)
        return jur_SupplCharSet__init_($ch);
    if (jur_Lexer_isLowSurrogate($ch))
        return jur_LowSurrogateCharSet__init_($ch & 65535);
    if (!jur_Lexer_isHighSurrogate($ch))
        return jur_CharSet__init_($ch & 65535);
    return jur_HighSurrogateCharSet__init_($ch & 65535);
}
function jur_Pattern_processRangeSet($this, $charClass) {
    var $surrogates, $lowHighSurrRangeSet;
    if (!$charClass.$hasLowHighSurrogates()) {
        if (!$charClass.$mayContainSupplCodepoints2()) {
            if ($charClass.$hasUCI())
                return jur_UCIRangeSet__init_($charClass);
            return jur_RangeSet__init_($charClass);
        }
        if ($charClass.$hasUCI())
            return jur_UCISupplRangeSet__init_($charClass);
        return jur_SupplRangeSet__init_($charClass);
    }
    $surrogates = $charClass.$getSurrogates();
    $lowHighSurrRangeSet = jur_LowHighSurrogateRangeSet__init_($surrogates);
    if (!$charClass.$mayContainSupplCodepoints2()) {
        if ($charClass.$hasUCI())
            return jur_CompositeRangeSet__init_(jur_UCIRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
        return jur_CompositeRangeSet__init_(jur_RangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    }
    if ($charClass.$hasUCI())
        return jur_CompositeRangeSet__init_(jur_UCISupplRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    return jur_CompositeRangeSet__init_(jur_SupplRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
}
function jur_Pattern_compile($pattern) {
    return jur_Pattern_compile0($pattern, 0);
}
function jur_Pattern_finalizeCompile($this) {
    if ($this.$needsBackRefReplacement)
        $this.$start9.$processSecondPass();
}
function jur_Pattern_quote($s) {
    var $sb, $apos, var$4, $apos_0;
    $sb = (jl_StringBuilder__init_()).$append($rt_s(409));
    $apos = 0;
    while (true) {
        var$4 = $s.$indexOf0($rt_s(410), $apos);
        if (var$4 < 0)
            break;
        $apos_0 = var$4 + 2 | 0;
        ($sb.$append($s.$substring($apos, $apos_0))).$append($rt_s(411));
        $apos = $apos_0;
    }
    return (($sb.$append($s.$substring0($apos))).$append($rt_s(410))).$toString();
}
function jur_Pattern_groupCount($this) {
    return $this.$globalGroupIndex;
}
function jur_Pattern_compCount($this) {
    return $this.$compCount + 1 | 0;
}
function jur_Pattern_consCount($this) {
    return $this.$consCount + 1 | 0;
}
function jur_Pattern_getSupplement($ch) {
    if ($ch >= 97 && $ch <= 122)
        $ch = ($ch - 32 | 0) & 65535;
    else if ($ch >= 65 && $ch <= 90)
        $ch = ($ch + 32 | 0) & 65535;
    return $ch;
}
function jur_Pattern_hasFlag($this, $flag) {
    return ($this.$flags & $flag) != $flag ? 0 : 1;
}
function jur_Pattern__init_0($this) {
    jl_Object__init_0($this);
    $this.$backRefs = $rt_createArray(jur_FSet, 10);
    $this.$globalGroupIndex = (-1);
    $this.$compCount = (-1);
    $this.$consCount = (-1);
}
var ji_IOException = $rt_classWithoutFields(jl_Exception);
function ji_IOException__init_() {
    var var_0 = new ji_IOException();
    ji_IOException__init_0(var_0);
    return var_0;
}
function ji_IOException__init_0($this) {
    jl_Exception__init_0($this);
}
var ji_UnsupportedEncodingException = $rt_classWithoutFields(ji_IOException);
function jn_DoubleBufferOverByteBuffer() {
    var a = this; jn_DoubleBufferImpl.call(a);
    a.$byteByffer4 = null;
    a.$byteOrder = null;
    a.$readOnly8 = 0;
    a.$start11 = 0;
}
function jn_DoubleBufferOverByteBuffer__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_DoubleBufferOverByteBuffer();
    jn_DoubleBufferOverByteBuffer__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_DoubleBufferOverByteBuffer__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_DoubleBufferImpl__init_($this, $capacity, $position, $limit);
    jn_ByteOrder_$callClinit();
    $this.$byteOrder = jn_ByteOrder_BIG_ENDIAN;
    $this.$start11 = $start;
    $this.$byteByffer4 = $byteBuffer;
    $this.$readOnly8 = $readOnly;
}
function jn_DoubleBufferOverByteBuffer_getElement($this, $index) {
    var var$2, var$3, var$4, var$5, $value;
    var$2 = $this.$byteOrder;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_BIG_ENDIAN) {
        var$3 = $this.$byteByffer4.$array0.data;
        var$4 = $this.$start11;
        var$5 = $index * 8 | 0;
        $value = Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_fromInt(var$3[var$4 + var$5 | 0] & 255), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$5 | 0) + 1 | 0]), Long_fromInt(255)), 8)), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$5 | 0) + 2 | 0]), Long_fromInt(255)), 16)), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$5 | 0) + 3 | 0]), Long_fromInt(255)), 24)), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11
        + var$5 | 0) + 4 | 0]), Long_fromInt(255)), 32)), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$5 | 0) + 5 | 0]), Long_fromInt(255)), 40)), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$5 | 0) + 6 | 0]), Long_fromInt(255)), 48)), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$5 | 0) + 7 | 0]), Long_fromInt(255)), 56));
    } else {
        var$3 = $this.$byteByffer4.$array0.data;
        var$5 = $this.$start11;
        var$4 = $index * 8 | 0;
        $value = Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_shl(Long_and(Long_fromInt(var$3[var$5 + var$4 | 0]), Long_fromInt(255)), 56), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$4 | 0) + 1 | 0]), Long_fromInt(255)), 48)), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$4 | 0) + 2 | 0]), Long_fromInt(255)), 40)), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$4 | 0) + 3 | 0]),
        Long_fromInt(255)), 32)), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$4 | 0) + 4 | 0]), Long_fromInt(255)), 24)), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$4 | 0) + 5 | 0]), Long_fromInt(255)), 16)), Long_shl(Long_and(Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$4 | 0) + 6 | 0]), Long_fromInt(255)), 8)), Long_fromInt($this.$byteByffer4.$array0.data[($this.$start11 + var$4 | 0) + 7 | 0] & 255));
    }
    return $rt_longBitsToDouble($value);
}
function jn_DoubleBufferOverByteBuffer_putElement($this, $index, $d) {
    var $value, var$4, var$5, var$6, var$7, var$8;
    $value = $rt_doubleToLongBits($d);
    var$4 = $this.$byteOrder;
    jn_ByteOrder_$callClinit();
    if (var$4 !== jn_ByteOrder_BIG_ENDIAN) {
        var$5 = $this.$byteByffer4.$array0.data;
        var$6 = $this.$start11;
        var$7 = $index * 8 | 0;
        var$5[var$6 + var$7 | 0] = Long_lo($value) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$7 | 0) + 1 | 0] = Long_lo(Long_shr($value, 8)) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$7 | 0) + 2 | 0] = Long_lo(Long_shr($value, 16)) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$7 | 0) + 3 | 0] = Long_lo(Long_shr($value, 24)) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$7 | 0) + 4 | 0] = Long_hi($value) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$7 | 0) + 5 | 0] = Long_lo(Long_shr($value, 40)) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$7 | 0) + 6 | 0] = Long_lo(Long_shr($value, 48)) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$7 | 0) + 7 | 0] = Long_lo(Long_shr($value, 56)) << 24 >> 24;
    } else {
        var$5 = $this.$byteByffer4.$array0.data;
        var$8 = $this.$start11;
        var$6 = $index * 8 | 0;
        var$5[var$8 + var$6 | 0] = Long_lo(Long_shr($value, 56)) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$6 | 0) + 1 | 0] = Long_lo(Long_shr($value, 48)) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$6 | 0) + 2 | 0] = Long_lo(Long_shr($value, 40)) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$6 | 0) + 3 | 0] = Long_hi($value) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$6 | 0) + 4 | 0] = Long_lo(Long_shr($value, 24)) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$6 | 0) + 5 | 0] = Long_lo(Long_shr($value, 16)) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$6 | 0) + 6 | 0] = Long_lo(Long_shr($value, 8)) << 24 >> 24;
        $this.$byteByffer4.$array0.data[($this.$start11 + var$6 | 0) + 7 | 0] = Long_lo($value) << 24 >> 24;
    }
}
function jn_DoubleBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly8;
}
var jur_PosAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet);
function jur_PosAltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PosAltGroupQuantifierSet();
    jur_PosAltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PosAltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex <= 0)
        $nextIndex = $stringIndex;
    return $this.$next.$matches($nextIndex, $testString, $matchResult);
}
function jur_PosAltGroupQuantifierSet_setNext($this, $next) {
    $this.$next = $next;
}
var jn_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException);
function jn_BufferOverflowException__init_() {
    var var_0 = new jn_BufferOverflowException();
    jn_BufferOverflowException__init_0(var_0);
    return var_0;
}
function jn_BufferOverflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function cgxgbw_WebApplication() {
    var a = this; jl_Object.call(a);
    a.$graphics = null;
    a.$input = null;
    a.$files = null;
    a.$audio0 = null;
    a.$canvas1 = null;
    a.$config = null;
    a.$appListener = null;
    a.$window = null;
    a.$initState = null;
    a.$lastWidth = 0;
    a.$lastHeight = 0;
    a.$logger = null;
    a.$preloader0 = null;
    a.$prefs = null;
    a.$runnables = null;
    a.$runnablesHelper = null;
    a.$hostPageBaseURL = null;
}
var cgxgbw_WebApplication_agentInfo = null;
function cgxgbw_WebApplication__init_0(var_0, var_1) {
    var var_2 = new cgxgbw_WebApplication();
    cgxgbw_WebApplication__init_(var_2, var_0, var_1);
    return var_2;
}
function cgxgbw_WebApplication_getAgentInfo() {
    return cgxgbw_WebApplication_agentInfo;
}
function cgxgbw_WebApplication__init_($this, $appListener, $config) {
    var $jSHelper;
    jl_Object__init_0($this);
    cgxgbw_WebApplication$AppState_$callClinit();
    $this.$initState = cgxgbw_WebApplication$AppState_IDLE;
    $this.$lastWidth = (-1);
    $this.$lastHeight = 1;
    $this.$prefs = cbgu_ObjectMap__init_();
    $this.$runnables = cbgu_Array__init_();
    $this.$runnablesHelper = cbgu_Array__init_();
    $jSHelper = cgxgbw_WebApplicationConfiguration_JSHelper;
    $this.$window = $jSHelper.$getCurrentWindow();
    $this.$appListener = $appListener;
    $this.$config = $config;
    $this.$canvas1 = cgxgbw_WebApplicationConfiguration_JSHelper.$getCanvas();
    cgxgbw_WebApplication_init($this);
}
function cgxgbw_WebApplication_init($this) {
    var $instance, $assetListener;
    cgxgbw_WebApplication_agentInfo = cgxgbw_WebApplicationConfiguration_JSHelper.$getAgentInfo();
    jl_System_setProperty($rt_s(412), $rt_s(88));
    if ((cgxgbw_WebApplication_agentInfo.windows ? 1 : 0) == 1)
        jl_System_setProperty($rt_s(413), $rt_s(414));
    else if ((cgxgbw_WebApplication_agentInfo.macOS ? 1 : 0) == 1)
        jl_System_setProperty($rt_s(413), $rt_s(415));
    else if ((cgxgbw_WebApplication_agentInfo.linux ? 1 : 0) != 1)
        jl_System_setProperty($rt_s(413), $rt_s(416));
    else
        jl_System_setProperty($rt_s(413), $rt_s(417));
    cgxgbwp_AssetDownloader_setInstance(cgxgbwp_AssetDownloadImpl__init_(cgxgbw_WebApplicationConfiguration_JSHelper));
    $instance = cgxgbwp_AssetDownloader_getInstance();
    $this.$hostPageBaseURL = $instance.$getHostPageBaseURL();
    if ($this.$hostPageBaseURL.$contains1($rt_s(418))) {
        $this.$hostPageBaseURL = $this.$hostPageBaseURL.$replace($rt_s(419), $rt_s(88));
        $this.$hostPageBaseURL = $this.$hostPageBaseURL.$replace($rt_s(420), $rt_s(88));
    }
    $this.$preloader0 = cgxgbwp_Preloader__init_((((jl_StringBuilder__init_()).$append($this.$hostPageBaseURL)).$append($rt_s(421))).$toString());
    $assetListener = cgxgbw_AssetLoaderListener__init_();
    $this.$preloader0.$preload($rt_s(422));
    $this.$graphics = cgxgbw_WebGraphics__init_($this.$config);
    $this.$input = cgxgbw_WebInput__init_($this.$canvas1);
    $this.$files = cgxgbw_WebFiles__init_($this.$preloader0);
    $this.$logger = cgxgbw_WebApplicationLogger__init_();
    cgxgbw_WebApplication_initSound($this);
    cbg_Gdx_app = $this;
    cbg_Gdx_graphics = $this.$graphics;
    cbg_Gdx_gl = $this.$graphics.$getGL20();
    cbg_Gdx_gl20 = $this.$graphics.$getGL20();
    cbg_Gdx_input = $this.$input;
    cbg_Gdx_files = $this.$files;
    $this.$window.$requestAnimationFrame($this);
}
function cgxgbw_WebApplication_run($this) {
    var $state, $t, $$je;
    $state = $this.$initState;
    a: {
        try {
            b: {
                cgxgbw_WebApplication$2_$callClinit();
                switch (cgxgbw_WebApplication$2_$SwitchMap$com$github$xpenatan$gdx$backend$web$WebApplication$AppState.data[jl_Enum_ordinal($state)]) {
                    case 1:
                        if ((cgxgbwp_AssetDownloader_getInstance()).$getQueue())
                            break b;
                        cgxgbw_WebApplication$AppState_$callClinit();
                        $this.$initState = cgxgbw_WebApplication$AppState_QUEUE_ASSETS_LOADED;
                        break b;
                    case 2:
                    case 3:
                        break;
                    case 4:
                        cgxgbw_WebApplication$AppState_$callClinit();
                        $this.$initState = cgxgbw_WebApplication$AppState_APP_CREATE;
                        break b;
                    default:
                        break b;
                }
                cgxgbw_WebApplication_step($this, $this.$appListener);
            }
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $t = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        $this.$window.$requestAnimationFrame($this);
        return;
    }
    $t.$printStackTrace0();
    $rt_throw($t);
}
function cgxgbw_WebApplication_step($this, $appListener) {
    var $width, $height, var$4, $i;
    $this.$graphics.$update1();
    $width = cbg_Gdx_graphics.$getWidth();
    $height = cbg_Gdx_graphics.$getHeight();
    if (!($width == $this.$lastWidth && $height == $this.$lastHeight)) {
        $this.$lastWidth = $width;
        $this.$lastHeight = $height;
        cbg_Gdx_gl.$glViewport(0, 0, $width, $height);
        var$4 = $this.$initState;
        cgxgbw_WebApplication$AppState_$callClinit();
        if (var$4 === cgxgbw_WebApplication$AppState_APP_CREATE) {
            $this.$initState = cgxgbw_WebApplication$AppState_APP_READY;
            $appListener.$create();
        }
        $appListener.$resize1($width, $height);
    }
    $this.$runnablesHelper.$addAll0($this.$runnables);
    $this.$runnables.$clear();
    $i = 0;
    while ($i < $this.$runnablesHelper.$size1) {
        ($this.$runnablesHelper.$get($i)).$run();
        $i = $i + 1 | 0;
    }
    $this.$runnablesHelper.$clear();
    var$4 = $this.$graphics;
    var$4.$frameId = Long_add(var$4.$frameId, Long_fromInt(1));
    $appListener.$render();
    $this.$input.$reset0();
}
function cgxgbw_WebApplication_initSound($this) {
    $this.$preloader0.$loadScript($rt_s(423), cgxgbw_WebApplication$1__init_($this));
}
function cgxgbw_WebApplication_getPreloader($this) {
    return $this.$preloader0;
}
function cgxgbw_WebApplication_log($this, $tag, $message) {
    $this.$logger.$log0($tag, $message);
}
function cgxgbw_WebApplication_getType($this) {
    cbg_Application$ApplicationType_$callClinit();
    return cbg_Application$ApplicationType_WebGL;
}
function cgxgbw_WebApplication_access$000($x0) {
    return $x0.$hostPageBaseURL;
}
function cgxgbw_WebApplication_access$102($x0, $x1) {
    $x0.$audio0 = $x1;
    return $x1;
}
function cgxgbw_WebApplication_access$100($x0) {
    return $x0.$audio0;
}
var ju_Set = $rt_classWithoutFields(0);
var ju_AbstractSet = $rt_classWithoutFields(ju_AbstractCollection);
var cbgm_Shape2D = $rt_classWithoutFields(0);
function cbgm_Rectangle() {
    var a = this; jl_Object.call(a);
    a.$x = 0.0;
    a.$y = 0.0;
    a.$width = 0.0;
    a.$height = 0.0;
}
var cbgm_Rectangle_tmp = null;
var cbgm_Rectangle_tmp2 = null;
function cbgm_Rectangle_$callClinit() {
    cbgm_Rectangle_$callClinit = $rt_eraseClinit(cbgm_Rectangle);
    cbgm_Rectangle__clinit_();
}
function cbgm_Rectangle__init_() {
    var var_0 = new cbgm_Rectangle();
    cbgm_Rectangle__init_0(var_0);
    return var_0;
}
function cbgm_Rectangle__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgm_Rectangle();
    cbgm_Rectangle__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgm_Rectangle__init_0($this) {
    cbgm_Rectangle_$callClinit();
    jl_Object__init_0($this);
}
function cbgm_Rectangle__init_2($this, $x, $y, $width, $height) {
    cbgm_Rectangle_$callClinit();
    jl_Object__init_0($this);
    $this.$x = $x;
    $this.$y = $y;
    $this.$width = $width;
    $this.$height = $height;
}
function cbgm_Rectangle_set($this, $x, $y, $width, $height) {
    $this.$x = $x;
    $this.$y = $y;
    $this.$width = $width;
    $this.$height = $height;
    return $this;
}
function cbgm_Rectangle_getWidth($this) {
    return $this.$width;
}
function cbgm_Rectangle_getHeight($this) {
    return $this.$height;
}
function cbgm_Rectangle_hashCode($this) {
    var var$1;
    var$1 = 31 + cbgu_NumberUtils_floatToRawIntBits($this.$height) | 0;
    var$1 = (31 * var$1 | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$width) | 0;
    var$1 = (31 * var$1 | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$x) | 0;
    var$1 = (31 * var$1 | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$y) | 0;
    return var$1;
}
function cbgm_Rectangle_equals($this, $obj) {
    var $other;
    if ($this === $obj)
        return 1;
    if ($obj === null)
        return 0;
    if (jl_Object_getClass($this) !== jl_Object_getClass($obj))
        return 0;
    $other = $obj;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$height) != cbgu_NumberUtils_floatToRawIntBits($other.$height))
        return 0;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$width) != cbgu_NumberUtils_floatToRawIntBits($other.$width))
        return 0;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$x) != cbgu_NumberUtils_floatToRawIntBits($other.$x))
        return 0;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$y) == cbgu_NumberUtils_floatToRawIntBits($other.$y))
        return 1;
    return 0;
}
function cbgm_Rectangle__clinit_() {
    cbgm_Rectangle_tmp = cbgm_Rectangle__init_();
    cbgm_Rectangle_tmp2 = cbgm_Rectangle__init_();
}
var jur_AbstractCharClass$LazyJavaLetterOrDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetterOrDigit();
    jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function otciu_UnicodeHelper$Range() {
    var a = this; jl_Object.call(a);
    a.$start2 = 0;
    a.$end1 = 0;
    a.$data2 = null;
}
function otciu_UnicodeHelper$Range__init_(var_0, var_1, var_2) {
    var var_3 = new otciu_UnicodeHelper$Range();
    otciu_UnicodeHelper$Range__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function otciu_UnicodeHelper$Range__init_0($this, $start, $end, $data) {
    jl_Object__init_0($this);
    $this.$start2 = $start;
    $this.$end1 = $end;
    $this.$data2 = $data;
}
var jur_AbstractLineTerminator$2 = $rt_classWithoutFields(jur_AbstractLineTerminator);
function jur_AbstractLineTerminator$2__init_() {
    var var_0 = new jur_AbstractLineTerminator$2();
    jur_AbstractLineTerminator$2__init_0(var_0);
    return var_0;
}
function jur_AbstractLineTerminator$2__init_0($this) {
    jur_AbstractLineTerminator__init_($this);
}
function jur_AbstractLineTerminator$2_isLineTerminator($this, $ch) {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
}
function jur_AbstractLineTerminator$2_isAfterLineTerminator($this, $ch, $ch2) {
    var var$3;
    a: {
        b: {
            if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                if ($ch != 13)
                    break b;
                if ($ch2 == 10)
                    break b;
            }
            var$3 = 1;
            break a;
        }
        var$3 = 0;
    }
    return var$3;
}
var jur_AbstractLineTerminator$1 = $rt_classWithoutFields(jur_AbstractLineTerminator);
function jur_AbstractLineTerminator$1__init_() {
    var var_0 = new jur_AbstractLineTerminator$1();
    jur_AbstractLineTerminator$1__init_0(var_0);
    return var_0;
}
function jur_AbstractLineTerminator$1__init_0($this) {
    jur_AbstractLineTerminator__init_($this);
}
function jur_AbstractLineTerminator$1_isLineTerminator($this, $ch) {
    return $ch != 10 ? 0 : 1;
}
function jur_AbstractLineTerminator$1_isAfterLineTerminator($this, $ch, $ch2) {
    return $ch != 10 ? 0 : 1;
}
var jl_NoClassDefFoundError = $rt_classWithoutFields(jl_LinkageError);
var jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var cbgu_Collections = $rt_classWithoutFields();
var cbgu_Collections_allocateIterators = 0;
function otci_CharFlow() {
    var a = this; jl_Object.call(a);
    a.$characters1 = null;
    a.$pointer = 0;
}
function otci_CharFlow__init_(var_0) {
    var var_1 = new otci_CharFlow();
    otci_CharFlow__init_0(var_1, var_0);
    return var_1;
}
function otci_CharFlow__init_0($this, $characters) {
    jl_Object__init_0($this);
    $this.$characters1 = $characters;
}
function jur_RangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars1 = null;
    a.$alt3 = 0;
}
function jur_RangeSet__init_(var_0) {
    var var_1 = new jur_RangeSet();
    jur_RangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_RangeSet__init_0($this, $cc) {
    jur_LeafSet__init_0($this);
    $this.$chars1 = $cc.$getInstance();
    $this.$alt3 = $cc.$alt0;
}
function jur_RangeSet_accepts($this, $strIndex, $testString) {
    return !$this.$chars1.$contains($testString.$charAt($strIndex)) ? (-1) : 1;
}
function jur_RangeSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects($this.$chars1, $set.$getChar0());
    if ($set instanceof jur_RangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars1, $set.$chars1);
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars1, $set.$getChars0());
    if (!($set instanceof jur_SupplCharSet))
        return 1;
    return 0;
}
function jur_RangeSet_getChars($this) {
    return $this.$chars1;
}
function jur_UnicodeCategory() {
    jur_AbstractCharClass.call(this);
    this.$category1 = 0;
}
function jur_UnicodeCategory__init_(var_0) {
    var var_1 = new jur_UnicodeCategory();
    jur_UnicodeCategory__init_0(var_1, var_0);
    return var_1;
}
function jur_UnicodeCategory__init_0($this, $category) {
    jur_AbstractCharClass__init_($this);
    $this.$category1 = $category;
}
function jur_UnicodeCategory_contains($this, $ch) {
    return $this.$alt0 ^ ($this.$category1 != jl_Character_getType0($ch & 65535) ? 0 : 1);
}
var jur_UnicodeCategoryScope = $rt_classWithoutFields(jur_UnicodeCategory);
function jur_UnicodeCategoryScope__init_(var_0) {
    var var_1 = new jur_UnicodeCategoryScope();
    jur_UnicodeCategoryScope__init_0(var_1, var_0);
    return var_1;
}
function jur_UnicodeCategoryScope__init_0($this, $category) {
    jur_UnicodeCategory__init_0($this, $category);
}
function jur_UnicodeCategoryScope_contains($this, $ch) {
    return $this.$alt0 ^ (!($this.$category1 >> jl_Character_getType0($ch & 65535) & 1) ? 0 : 1);
}
function cbggg_SpriteBatch() {
    var a = this; jl_Object.call(a);
    a.$mesh = null;
    a.$vertices = null;
    a.$idx = 0;
    a.$lastTexture = null;
    a.$invTexWidth = 0.0;
    a.$invTexHeight = 0.0;
    a.$drawing = 0;
    a.$transformMatrix = null;
    a.$projectionMatrix = null;
    a.$combinedMatrix = null;
    a.$blendingDisabled = 0;
    a.$blendSrcFunc = 0;
    a.$blendDstFunc = 0;
    a.$blendSrcFuncAlpha = 0;
    a.$blendDstFuncAlpha = 0;
    a.$shader = null;
    a.$customShader = null;
    a.$ownsShader = 0;
    a.$color1 = null;
    a.$colorPacked = 0.0;
    a.$renderCalls = 0;
    a.$totalRenderCalls = 0;
    a.$maxSpritesInBatch = 0;
}
var cbggg_SpriteBatch_defaultVertexDataType = null;
function cbggg_SpriteBatch_$callClinit() {
    cbggg_SpriteBatch_$callClinit = $rt_eraseClinit(cbggg_SpriteBatch);
    cbggg_SpriteBatch__clinit_();
}
function cbggg_SpriteBatch__init_() {
    var var_0 = new cbggg_SpriteBatch();
    cbggg_SpriteBatch__init_0(var_0);
    return var_0;
}
function cbggg_SpriteBatch__init_1(var_0, var_1) {
    var var_2 = new cbggg_SpriteBatch();
    cbggg_SpriteBatch__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbggg_SpriteBatch__init_0($this) {
    cbggg_SpriteBatch_$callClinit();
    cbggg_SpriteBatch__init_2($this, 1000, null);
}
function cbggg_SpriteBatch__init_2($this, $size, $defaultShader) {
    var $vertexDataType, var$4, var$5, var$6, $indices, $j, $i, var$10, var$11, var$12;
    cbggg_SpriteBatch_$callClinit();
    jl_Object__init_0($this);
    $this.$idx = 0;
    $this.$lastTexture = null;
    $this.$invTexWidth = 0.0;
    $this.$invTexHeight = 0.0;
    $this.$drawing = 0;
    $this.$transformMatrix = cbgm_Matrix4__init_();
    $this.$projectionMatrix = cbgm_Matrix4__init_();
    $this.$combinedMatrix = cbgm_Matrix4__init_();
    $this.$blendingDisabled = 0;
    $this.$blendSrcFunc = 770;
    $this.$blendDstFunc = 771;
    $this.$blendSrcFuncAlpha = 770;
    $this.$blendDstFuncAlpha = 771;
    $this.$customShader = null;
    $this.$color1 = cbgg_Color__init_3(1.0, 1.0, 1.0, 1.0);
    $this.$colorPacked = cbgg_Color_WHITE_FLOAT_BITS;
    $this.$renderCalls = 0;
    $this.$totalRenderCalls = 0;
    $this.$maxSpritesInBatch = 0;
    if ($size > 8191)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(424))).$append0($size)).$toString()));
    if (cbg_Gdx_gl30 === null)
        $vertexDataType = cbggg_SpriteBatch_defaultVertexDataType;
    else {
        cbgg_Mesh$VertexDataType_$callClinit();
        $vertexDataType = cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO;
    }
    var$4 = new cbgg_Mesh;
    var$5 = $size * 4 | 0;
    var$6 = $size * 6 | 0;
    cbgg_Mesh__init_(var$4, $vertexDataType, 0, var$5, var$6, $rt_createArrayFromData(cbgg_VertexAttribute, [cbgg_VertexAttribute__init_(1, 2, $rt_s(425)), cbgg_VertexAttribute__init_(4, 4, $rt_s(426)), cbgg_VertexAttribute__init_(16, 2, $rt_s(427))]));
    $this.$mesh = var$4;
    $this.$projectionMatrix.$setToOrtho2D(0.0, 0.0, cbg_Gdx_graphics.$getWidth(), cbg_Gdx_graphics.$getHeight());
    $this.$vertices = $rt_createFloatArray($size * 20 | 0);
    $indices = $rt_createShortArray(var$6);
    $j = 0;
    $i = 0;
    while ($i < var$6) {
        var$10 = $indices.data;
        var$10[$i] = $j;
        var$10[$i + 1 | 0] = ($j + 1 | 0) << 16 >> 16;
        var$11 = $i + 2 | 0;
        var$12 = ($j + 2 | 0) << 16 >> 16;
        var$10[var$11] = var$12;
        var$10[$i + 3 | 0] = var$12;
        var$10[$i + 4 | 0] = ($j + 3 | 0) << 16 >> 16;
        var$10[$i + 5 | 0] = $j;
        $i = $i + 6 | 0;
        $j = ($j + 4 | 0) << 16 >> 16;
    }
    $this.$mesh.$setIndices($indices);
    if ($defaultShader !== null)
        $this.$shader = $defaultShader;
    else {
        $this.$shader = cbggg_SpriteBatch_createDefaultShader();
        $this.$ownsShader = 1;
    }
}
function cbggg_SpriteBatch_createDefaultShader() {
    var $vertexShader, $fragmentShader, $shader;
    cbggg_SpriteBatch_$callClinit();
    $vertexShader = $rt_s(428);
    $fragmentShader = $rt_s(429);
    $shader = cbggg_ShaderProgram__init_($vertexShader, $fragmentShader);
    if ($shader.$isCompiled0())
        return $shader;
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(430))).$append($shader.$getLog())).$toString()));
}
function cbggg_SpriteBatch_begin($this) {
    if ($this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(431)));
    $this.$renderCalls = 0;
    cbg_Gdx_gl.$glDepthMask(0);
    if ($this.$customShader === null)
        $this.$shader.$bind();
    else
        $this.$customShader.$bind();
    $this.$setupMatrices();
    $this.$drawing = 1;
}
function cbggg_SpriteBatch_end($this) {
    var $gl;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(432)));
    if ($this.$idx > 0)
        $this.$flush0();
    $this.$lastTexture = null;
    $this.$drawing = 0;
    $gl = cbg_Gdx_gl;
    $gl.$glDepthMask(1);
    if ($this.$isBlendingEnabled())
        $gl.$glDisable(3042);
}
function cbggg_SpriteBatch_setColor($this, $r, $g, $b, $a) {
    $this.$color1.$set6($r, $g, $b, $a);
    $this.$colorPacked = $this.$color1.$toFloatBits();
}
function cbggg_SpriteBatch_draw($this, $texture, $spriteVertices, $offset, $count) {
    var $verticesLength, var$6, $copyCount;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(433)));
    $verticesLength = $this.$vertices.data.length;
    if ($texture !== $this.$lastTexture) {
        $this.$switchTexture($texture);
        var$6 = $verticesLength;
    } else {
        var$6 = $verticesLength - $this.$idx | 0;
        if (!var$6) {
            $this.$flush0();
            var$6 = $verticesLength;
        }
    }
    $copyCount = jl_Math_min(var$6, $count);
    jl_System_arraycopy($spriteVertices, $offset, $this.$vertices, $this.$idx, $copyCount);
    $this.$idx = $this.$idx + $copyCount | 0;
    var$6 = $count - $copyCount | 0;
    while (var$6 > 0) {
        $offset = $offset + $copyCount | 0;
        $this.$flush0();
        $copyCount = jl_Math_min($verticesLength, var$6);
        jl_System_arraycopy($spriteVertices, $offset, $this.$vertices, 0, $copyCount);
        $this.$idx = $this.$idx + $copyCount | 0;
        var$6 = var$6 - $copyCount | 0;
    }
}
function cbggg_SpriteBatch_draw0($this, $region, $x, $y) {
    $this.$draw1($region, $x, $y, $region.$getRegionWidth(), $region.$getRegionHeight());
}
function cbggg_SpriteBatch_draw1($this, $region, $x, $y, $width, $height) {
    var $vertices, $texture, var$8, $fx2, $fy2, $u, $v, $u2, $v2, $color, $idx;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(433)));
    $vertices = $this.$vertices;
    $texture = $region.$texture0;
    if ($texture !== $this.$lastTexture)
        $this.$switchTexture($texture);
    else {
        var$8 = $vertices.data;
        if ($this.$idx == var$8.length)
            $this.$flush0();
    }
    var$8 = $vertices.data;
    $fx2 = $x + $width;
    $fy2 = $y + $height;
    $u = $region.$u0;
    $v = $region.$v20;
    $u2 = $region.$u20;
    $v2 = $region.$v0;
    $color = $this.$colorPacked;
    $idx = $this.$idx;
    var$8[$idx] = $x;
    var$8[$idx + 1 | 0] = $y;
    var$8[$idx + 2 | 0] = $color;
    var$8[$idx + 3 | 0] = $u;
    var$8[$idx + 4 | 0] = $v;
    var$8[$idx + 5 | 0] = $x;
    var$8[$idx + 6 | 0] = $fy2;
    var$8[$idx + 7 | 0] = $color;
    var$8[$idx + 8 | 0] = $u;
    var$8[$idx + 9 | 0] = $v2;
    var$8[$idx + 10 | 0] = $fx2;
    var$8[$idx + 11 | 0] = $fy2;
    var$8[$idx + 12 | 0] = $color;
    var$8[$idx + 13 | 0] = $u2;
    var$8[$idx + 14 | 0] = $v2;
    var$8[$idx + 15 | 0] = $fx2;
    var$8[$idx + 16 | 0] = $y;
    var$8[$idx + 17 | 0] = $color;
    var$8[$idx + 18 | 0] = $u2;
    var$8[$idx + 19 | 0] = $v;
    $this.$idx = $idx + 20 | 0;
}
function cbggg_SpriteBatch_flush($this) {
    var $spritesInBatch, $count, $mesh;
    if (!$this.$idx)
        return;
    $this.$renderCalls = $this.$renderCalls + 1 | 0;
    $this.$totalRenderCalls = $this.$totalRenderCalls + 1 | 0;
    $spritesInBatch = $this.$idx / 20 | 0;
    if ($spritesInBatch > $this.$maxSpritesInBatch)
        $this.$maxSpritesInBatch = $spritesInBatch;
    $count = $spritesInBatch * 6 | 0;
    $this.$lastTexture.$bind();
    $mesh = $this.$mesh;
    $mesh.$setVertices($this.$vertices, 0, $this.$idx);
    ($mesh.$getIndicesBuffer()).$position2(0);
    ($mesh.$getIndicesBuffer()).$limit0($count);
    if ($this.$blendingDisabled)
        cbg_Gdx_gl.$glDisable(3042);
    else {
        cbg_Gdx_gl.$glEnable(3042);
        if ($this.$blendSrcFunc != (-1))
            cbg_Gdx_gl.$glBlendFuncSeparate($this.$blendSrcFunc, $this.$blendDstFunc, $this.$blendSrcFuncAlpha, $this.$blendDstFuncAlpha);
    }
    $mesh.$render0($this.$customShader === null ? $this.$shader : $this.$customShader, 4, 0, $count);
    $this.$idx = 0;
}
function cbggg_SpriteBatch_setProjectionMatrix($this, $projection) {
    if ($this.$drawing)
        $this.$flush0();
    $this.$projectionMatrix.$set3($projection);
    if ($this.$drawing)
        $this.$setupMatrices();
}
function cbggg_SpriteBatch_setupMatrices($this) {
    ($this.$combinedMatrix.$set3($this.$projectionMatrix)).$mul0($this.$transformMatrix);
    if ($this.$customShader === null) {
        $this.$shader.$setUniformMatrix1($rt_s(434), $this.$combinedMatrix);
        $this.$shader.$setUniformi($rt_s(435), 0);
    } else {
        $this.$customShader.$setUniformMatrix1($rt_s(434), $this.$combinedMatrix);
        $this.$customShader.$setUniformi($rt_s(435), 0);
    }
}
function cbggg_SpriteBatch_switchTexture($this, $texture) {
    $this.$flush0();
    $this.$lastTexture = $texture;
    $this.$invTexWidth = 1.0 / $texture.$getWidth();
    $this.$invTexHeight = 1.0 / $texture.$getHeight();
}
function cbggg_SpriteBatch_isBlendingEnabled($this) {
    return $this.$blendingDisabled ? 0 : 1;
}
function cbggg_SpriteBatch__clinit_() {
    cbgg_Mesh$VertexDataType_$callClinit();
    cbggg_SpriteBatch_defaultVertexDataType = cbgg_Mesh$VertexDataType_VertexArray;
}
var cbgg_Mesh$1 = $rt_classWithoutFields();
var cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = null;
function cbgg_Mesh$1_$callClinit() {
    cbgg_Mesh$1_$callClinit = $rt_eraseClinit(cbgg_Mesh$1);
    cbgg_Mesh$1__clinit_();
}
function cbgg_Mesh$1__clinit_() {
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = $rt_createIntArray((cbgg_Mesh$VertexDataType_values()).data.length);
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexBufferObject)] = 1;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexBufferObjectSubData)] = 2;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO)] = 3;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexArray)] = 4;
}
var otjt_Float32Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var jnc_CharacterCodingException = $rt_classWithoutFields(ji_IOException);
function jnc_CharacterCodingException__init_() {
    var var_0 = new jnc_CharacterCodingException();
    jnc_CharacterCodingException__init_0(var_0);
    return var_0;
}
function jnc_CharacterCodingException__init_0($this) {
    ji_IOException__init_0($this);
}
function jnc_UnmappableCharacterException() {
    jnc_CharacterCodingException.call(this);
    this.$length2 = 0;
}
function jnc_UnmappableCharacterException__init_(var_0) {
    var var_1 = new jnc_UnmappableCharacterException();
    jnc_UnmappableCharacterException__init_0(var_1, var_0);
    return var_1;
}
function jnc_UnmappableCharacterException__init_0($this, $length) {
    jnc_CharacterCodingException__init_0($this);
    $this.$length2 = $length;
}
function jnc_UnmappableCharacterException_getMessage($this) {
    return (((jl_StringBuilder__init_()).$append($rt_s(436))).$append0($this.$length2)).$toString();
}
function jur_CharClass() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$ci = 0;
    a.$uci = 0;
    a.$hasUCI0 = 0;
    a.$invertedSurrogates = 0;
    a.$inverted = 0;
    a.$hideBits = 0;
    a.$bits = null;
    a.$nonBitSet = null;
}
function jur_CharClass__init_() {
    var var_0 = new jur_CharClass();
    jur_CharClass__init_2(var_0);
    return var_0;
}
function jur_CharClass__init_0(var_0, var_1) {
    var var_2 = new jur_CharClass();
    jur_CharClass__init_3(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass__init_1(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass();
    jur_CharClass__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass__init_2($this) {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_0();
}
function jur_CharClass__init_3($this, $ci, $uci) {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_0();
    $this.$ci = $ci;
    $this.$uci = $uci;
}
function jur_CharClass__init_4($this, $negative, $ci, $uci) {
    jur_CharClass__init_3($this, $ci, $uci);
    $this.$setNegative($negative);
}
function jur_CharClass_add($this, $ch) {
    a: {
        if ($this.$ci) {
            b: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break b;
                    if ($ch > 90)
                        break b;
                }
                if ($this.$inverted) {
                    $this.$bits.$clear6(jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                $this.$bits.$set7(jur_Pattern_getSupplement($ch & 65535));
                break a;
            }
            if ($this.$uci && $ch > 128) {
                $this.$hasUCI0 = 1;
                $ch = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
            }
        }
    }
    if (!(!jur_Lexer_isHighSurrogate($ch) && !jur_Lexer_isLowSurrogate($ch))) {
        if ($this.$invertedSurrogates)
            $this.$lowHighSurrogates.$clear6($ch - 55296 | 0);
        else
            $this.$lowHighSurrogates.$set7($ch - 55296 | 0);
    }
    if ($this.$inverted)
        $this.$bits.$clear6($ch);
    else
        $this.$bits.$set7($ch);
    if (!$this.$mayContainSupplCodepoints && jl_Character_isSupplementaryCodePoint($ch))
        $this.$mayContainSupplCodepoints = 1;
    return $this;
}
function jur_CharClass_add0($this, $cc) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $cc.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($this.$invertedSurrogates) {
        if (!$cc.$altSurrogates)
            $this.$lowHighSurrogates.$andNot($cc.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
    } else if (!$cc.$altSurrogates)
        $this.$lowHighSurrogates.$or($cc.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($cc.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        $this.$invertedSurrogates = 1;
    }
    if (!$this.$hideBits && $cc.$getBits() !== null) {
        if ($this.$inverted) {
            if (!$cc.$isNegative())
                $this.$bits.$andNot($cc.$getBits());
            else
                $this.$bits.$and($cc.$getBits());
        } else if (!$cc.$isNegative())
            $this.$bits.$or($cc.$getBits());
        else {
            $this.$bits.$xor($cc.$getBits());
            $this.$bits.$and($cc.$getBits());
            $this.$alt0 = $this.$alt0 ? 0 : 1;
            $this.$inverted = 1;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$5__init_($this, $curAlt, $nb, $cc);
            else
                $this.$nonBitSet = jur_CharClass$4__init_($this, $curAlt, $nb, $cc);
        } else {
            if ($curAlt && !$this.$inverted && $this.$bits.$isEmpty())
                $this.$nonBitSet = jur_CharClass$1__init_($this, $cc);
            else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$3__init_($this, $curAlt, $cc);
            else
                $this.$nonBitSet = jur_CharClass$2__init_($this, $curAlt, $cc);
            $this.$hideBits = 1;
        }
    }
    return $this;
}
function jur_CharClass_add1($this, $i, $end) {
    if ($i > $end)
        $rt_throw(jl_IllegalArgumentException__init_0());
    a: {
        b: {
            if (!$this.$ci) {
                if ($end < 55296)
                    break b;
                if ($i > 57343)
                    break b;
            }
            while (true) {
                if ($i >= ($end + 1 | 0))
                    break a;
                $this.$add($i);
                $i = $i + 1 | 0;
            }
        }
        if ($this.$inverted)
            $this.$bits.$clear7($i, $end + 1 | 0);
        else
            $this.$bits.$set($i, $end + 1 | 0);
    }
    return $this;
}
function jur_CharClass_union($this, $clazz) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($clazz.$hasUCI())
        $this.$hasUCI0 = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
    } else if ($this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 1;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt0 ^ $clazz.$isNegative())) {
            if (!$this.$alt0)
                $this.$bits.$or($clazz.$getBits());
            else
                $this.$bits.$and($clazz.$getBits());
        } else if ($this.$alt0)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt0 = 1;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$11__init_($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$10__init_($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$7__init_($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$6__init_($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$9__init_($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$8__init_($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_intersection($this, $clazz) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($clazz.$hasUCI())
        $this.$hasUCI0 = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
    } else if (!$this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 0;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt0 ^ $clazz.$isNegative())) {
            if (!$this.$alt0)
                $this.$bits.$and($clazz.$getBits());
            else
                $this.$bits.$or($clazz.$getBits());
        } else if (!$this.$alt0)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt0 = 0;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$17__init_($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$16__init_($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$13__init_($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$12__init_($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$15__init_($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$14__init_($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_contains($this, $ch) {
    if ($this.$nonBitSet !== null)
        return $this.$alt0 ^ $this.$nonBitSet.$contains($ch);
    return $this.$alt0 ^ $this.$bits.$get8($ch);
}
function jur_CharClass_getBits($this) {
    if (!$this.$hideBits)
        return $this.$bits;
    return null;
}
function jur_CharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_CharClass_getInstance($this) {
    var $bs, $res;
    if ($this.$nonBitSet !== null)
        return $this;
    $bs = $this.$getBits();
    $res = jur_CharClass$18__init_($this, $bs);
    return $res.$setNegative($this.$isNegative());
}
function jur_CharClass_toString($this) {
    var $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$bits.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append7(jl_Character_toChars($i));
        $temp.$append8(124);
        $i = $this.$bits.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
}
function jur_CharClass_hasUCI($this) {
    return $this.$hasUCI0;
}
var jn_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException);
function jn_BufferUnderflowException__init_() {
    var var_0 = new jn_BufferUnderflowException();
    jn_BufferUnderflowException__init_0(var_0);
    return var_0;
}
function jn_BufferUnderflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function cbgggf_FreeTypeFontGenerator() {
    var a = this; jl_Object.call(a);
    a.$library0 = null;
    a.$face = null;
    a.$name6 = null;
    a.$bitmapped = 0;
    a.$pixelWidth = 0;
    a.$pixelHeight = 0;
}
var cbgggf_FreeTypeFontGenerator_maxTextureSize = 0;
function cbgggf_FreeTypeFontGenerator_$callClinit() {
    cbgggf_FreeTypeFontGenerator_$callClinit = $rt_eraseClinit(cbgggf_FreeTypeFontGenerator);
    cbgggf_FreeTypeFontGenerator__clinit_();
}
function cbgggf_FreeTypeFontGenerator__init_(var_0) {
    var var_1 = new cbgggf_FreeTypeFontGenerator();
    cbgggf_FreeTypeFontGenerator__init_0(var_1, var_0);
    return var_1;
}
function cbgggf_FreeTypeFontGenerator__init_1(var_0, var_1) {
    var var_2 = new cbgggf_FreeTypeFontGenerator();
    cbgggf_FreeTypeFontGenerator__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgggf_FreeTypeFontGenerator__init_0($this, $fontFile) {
    cbgggf_FreeTypeFontGenerator_$callClinit();
    cbgggf_FreeTypeFontGenerator__init_2($this, $fontFile, 0);
}
function cbgggf_FreeTypeFontGenerator__init_2($this, $fontFile, $faceIndex) {
    cbgggf_FreeTypeFontGenerator_$callClinit();
    jl_Object__init_0($this);
    $this.$bitmapped = 0;
    $this.$name6 = $fontFile.$nameWithoutExtension();
    $this.$library0 = cbgggf_FreeType_initFreeType();
    $this.$face = $this.$library0.$newFace($fontFile, $faceIndex);
    if (cbgggf_FreeTypeFontGenerator_checkForBitmapFont($this))
        return;
    $this.$setPixelSizes(0, 15);
}
function cbgggf_FreeTypeFontGenerator_getLoadingFlags($this, $parameter) {
    var $loadingFlags;
    a: {
        cbgggf_FreeType_$callClinit();
        $loadingFlags = cbgggf_FreeType_FT_LOAD_DEFAULT;
        cbgggf_FreeTypeFontGenerator$1_$callClinit();
        switch (cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting.data[jl_Enum_ordinal($parameter.$hinting)]) {
            case 1:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_NO_HINTING;
                break a;
            case 2:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_TARGET_LIGHT;
                break a;
            case 3:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_TARGET_NORMAL;
                break a;
            case 4:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_TARGET_MONO;
                break a;
            case 5:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT | cbgggf_FreeType_FT_LOAD_TARGET_LIGHT;
                break a;
            case 6:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT | cbgggf_FreeType_FT_LOAD_TARGET_NORMAL;
                break a;
            case 7:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT | cbgggf_FreeType_FT_LOAD_TARGET_MONO;
                break a;
            default:
        }
    }
    return $loadingFlags;
}
function cbgggf_FreeTypeFontGenerator_loadChar($this, $c) {
    cbgggf_FreeType_$callClinit();
    return cbgggf_FreeTypeFontGenerator_loadChar0($this, $c, cbgggf_FreeType_FT_LOAD_DEFAULT | cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT);
}
function cbgggf_FreeTypeFontGenerator_loadChar0($this, $c, $flags) {
    return $this.$face.$loadChar($c, $flags);
}
function cbgggf_FreeTypeFontGenerator_checkForBitmapFont($this) {
    var $faceFlags, $slot;
    $faceFlags = $this.$face.$getFaceFlags();
    cbgggf_FreeType_$callClinit();
    if (($faceFlags & cbgggf_FreeType_FT_FACE_FLAG_FIXED_SIZES) == cbgggf_FreeType_FT_FACE_FLAG_FIXED_SIZES && ($faceFlags & cbgggf_FreeType_FT_FACE_FLAG_HORIZONTAL) == cbgggf_FreeType_FT_FACE_FLAG_HORIZONTAL && cbgggf_FreeTypeFontGenerator_loadChar($this, 32)) {
        $slot = $this.$face.$getGlyph();
        if ($slot.$getFormat0() == 1651078259)
            $this.$bitmapped = 1;
    }
    return $this.$bitmapped;
}
function cbgggf_FreeTypeFontGenerator_generateData($this, $parameter) {
    return $this.$generateData0($parameter, cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData__init_());
}
function cbgggf_FreeTypeFontGenerator_setPixelSizes($this, $pixelWidth, $pixelHeight) {
    $this.$pixelWidth = $pixelWidth;
    $this.$pixelHeight = $pixelHeight;
    if (!$this.$bitmapped && !$this.$face.$setPixelSizes0($pixelWidth, $pixelHeight))
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(437)));
}
function cbgggf_FreeTypeFontGenerator_generateData0($this, $parameter, $data) {
    var $characters, var$4, $charactersLength, $incremental, $flags, $fontMetrics, $baseLine, $c, $lh, var$12, var$13, var$14, var$15, $xChar, $capChar, $ownsAtlas, $packer, $size, $packStrategy, $maxGlyphHeight, $stroker, $heights, $i, $height, $missingGlyph, $heightsCount, $best, $maxHeight, $glyph, $tmpChar, $firstChar, $first, $firstIndex, $ii, $secondChar, $second, $secondIndex, $kerning, $spaceGlyph;
    $data.$name7 = ((((jl_StringBuilder__init_()).$append($this.$name6)).$append($rt_s(438))).$append0($parameter.$size5)).$toString();
    if ($parameter === null)
        $parameter = cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter__init_();
    a: {
        $characters = $parameter.$characters0.$toCharArray();
        var$4 = $characters.data;
        $charactersLength = var$4.length;
        $incremental = $parameter.$incremental;
        $flags = cbgggf_FreeTypeFontGenerator_getLoadingFlags($this, $parameter);
        $this.$setPixelSizes(0, $parameter.$size5);
        $fontMetrics = ($this.$face.$getSize()).$getMetrics();
        $data.$flipped = $parameter.$flip1;
        $data.$ascent = cbgggf_FreeType_toInt($fontMetrics.$getAscender());
        $data.$descent = cbgggf_FreeType_toInt($fontMetrics.$getDescender());
        $data.$lineHeight = cbgggf_FreeType_toInt($fontMetrics.$getHeight());
        $baseLine = $data.$ascent;
        if ($this.$bitmapped && $data.$lineHeight === 0.0) {
            $c = 32;
            while (true) {
                if ($c >= (32 + $this.$face.$getNumGlyphs() | 0))
                    break a;
                if (cbgggf_FreeTypeFontGenerator_loadChar0($this, $c, $flags)) {
                    $lh = cbgggf_FreeType_toInt((($this.$face.$getGlyph()).$getMetrics0()).$getHeight());
                    var$12 = $lh;
                    if (var$12 <= $data.$lineHeight)
                        var$12 = $data.$lineHeight;
                    $data.$lineHeight = var$12;
                }
                $c = $c + 1 | 0;
            }
        }
    }
    $data.$lineHeight = $data.$lineHeight + $parameter.$spaceY;
    if (!cbgggf_FreeTypeFontGenerator_loadChar0($this, 32, $flags) && !cbgggf_FreeTypeFontGenerator_loadChar0($this, 108, $flags))
        $data.$spaceXadvance = $this.$face.$getMaxAdvanceWidth();
    else
        $data.$spaceXadvance = cbgggf_FreeType_toInt((($this.$face.$getGlyph()).$getMetrics0()).$getHoriAdvance());
    var$13 = $data.$xChars.data;
    var$14 = var$13.length;
    var$15 = 0;
    b: {
        while (true) {
            if (var$15 >= var$14)
                break b;
            $xChar = var$13[var$15];
            if (cbgggf_FreeTypeFontGenerator_loadChar0($this, $xChar, $flags))
                break;
            var$15 = var$15 + 1 | 0;
        }
        $data.$xHeight = cbgggf_FreeType_toInt((($this.$face.$getGlyph()).$getMetrics0()).$getHeight());
    }
    if ($data.$xHeight === 0.0)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(439)));
    var$13 = $data.$capChars.data;
    var$14 = var$13.length;
    var$15 = 0;
    c: {
        while (true) {
            if (var$15 >= var$14)
                break c;
            $capChar = var$13[var$15];
            if (cbgggf_FreeTypeFontGenerator_loadChar0($this, $capChar, $flags))
                break;
            var$15 = var$15 + 1 | 0;
        }
        $data.$capHeight = cbgggf_FreeType_toInt((($this.$face.$getGlyph()).$getMetrics0()).$getHeight()) + jl_Math_abs0($parameter.$shadowOffsetY) | 0;
    }
    if (!$this.$bitmapped && $data.$capHeight === 1.0)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(440)));
    $data.$ascent = $data.$ascent - $data.$capHeight;
    $data.$down =  -$data.$lineHeight;
    if ($parameter.$flip1) {
        $data.$ascent =  -$data.$ascent;
        $data.$down =  -$data.$down;
    }
    $ownsAtlas = 0;
    $packer = $parameter.$packer;
    if ($packer === null) {
        if ($incremental) {
            $size = cbgggf_FreeTypeFontGenerator_maxTextureSize;
            $packStrategy = cbggg_PixmapPacker$GuillotineStrategy__init_();
        } else {
            $maxGlyphHeight = jl_Math_ceil($data.$lineHeight) | 0;
            $size = cbgm_MathUtils_nextPowerOfTwo(jl_Math_sqrt($rt_imul($rt_imul($maxGlyphHeight, $maxGlyphHeight), $charactersLength)) | 0);
            if (cbgggf_FreeTypeFontGenerator_maxTextureSize > 0)
                $size = jl_Math_min($size, cbgggf_FreeTypeFontGenerator_maxTextureSize);
            $packStrategy = cbggg_PixmapPacker$SkylineStrategy__init_();
        }
        $ownsAtlas = 1;
        $packer = new cbggg_PixmapPacker;
        cbgg_Pixmap$Format_$callClinit();
        cbggg_PixmapPacker__init_0($packer, $size, $size, cbgg_Pixmap$Format_RGBA8888, 1, 0, $packStrategy);
        $packer.$setTransparentColor($parameter.$color0);
        ($packer.$getTransparentColor()).$a0 = 0.0;
        if ($parameter.$borderWidth > 0.0) {
            $packer.$setTransparentColor($parameter.$borderColor);
            ($packer.$getTransparentColor()).$a0 = 0.0;
        }
    }
    if ($incremental)
        $data.$glyphs = cbgu_Array__init_1($charactersLength + 32 | 0);
    $stroker = null;
    if ($parameter.$borderWidth > 0.0) {
        $stroker = $this.$library0.$createStroker();
        $stroker.$set8($parameter.$borderWidth * 64.0 | 0, !$parameter.$borderStraight ? cbgggf_FreeType_FT_STROKER_LINECAP_ROUND : cbgggf_FreeType_FT_STROKER_LINECAP_BUTT, !$parameter.$borderStraight ? cbgggf_FreeType_FT_STROKER_LINEJOIN_ROUND : cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER_FIXED, 0);
    }
    $heights = $rt_createIntArray($charactersLength);
    $i = 0;
    while ($i < $charactersLength) {
        $c = var$4[$i];
        $height = !cbgggf_FreeTypeFontGenerator_loadChar0($this, $c, $flags) ? 0 : cbgggf_FreeType_toInt((($this.$face.$getGlyph()).$getMetrics0()).$getHeight());
        $heights.data[$i] = $height;
        if (!$c) {
            $missingGlyph = $this.$createGlyph(0, $data, $parameter, $stroker, $baseLine, $packer);
            if ($missingGlyph !== null && $missingGlyph.$width2 && $missingGlyph.$height2) {
                $data.$setGlyph(0, $missingGlyph);
                $data.$missingGlyph = $missingGlyph;
                if ($incremental)
                    $data.$glyphs.$add3($missingGlyph);
            }
        }
        $i = $i + 1 | 0;
    }
    var$13 = $heights.data;
    $heightsCount = var$13.length;
    while ($heightsCount > 0) {
        $best = 0;
        $maxHeight = var$13[0];
        $i = 1;
        while ($i < $heightsCount) {
            $height = var$13[$i];
            if ($height > $maxHeight) {
                $best = $i;
                $maxHeight = $height;
            }
            $i = $i + 1 | 0;
        }
        $c = var$4[$best];
        if ($data.$getGlyph0($c) === null) {
            $glyph = $this.$createGlyph($c, $data, $parameter, $stroker, $baseLine, $packer);
            if ($glyph !== null) {
                $data.$setGlyph($c, $glyph);
                if ($incremental)
                    $data.$glyphs.$add3($glyph);
            }
        }
        $heightsCount = $heightsCount + (-1) | 0;
        var$13[$best] = var$13[$heightsCount];
        $tmpChar = var$4[$best];
        var$4[$best] = var$4[$heightsCount];
        var$4[$heightsCount] = $tmpChar;
    }
    if ($stroker !== null && !$incremental)
        $stroker.$dispose();
    if ($incremental) {
        $data.$generator = $this;
        $data.$parameter = $parameter;
        $data.$stroker = $stroker;
        $data.$packer0 = $packer;
    }
    d: {
        $parameter.$kerning0 = $parameter.$kerning0 & $this.$face.$hasKerning();
        if ($parameter.$kerning0) {
            $i = 0;
            while (true) {
                if ($i >= $charactersLength)
                    break d;
                e: {
                    $firstChar = var$4[$i];
                    $first = $data.$getGlyph0($firstChar);
                    if ($first !== null) {
                        $firstIndex = $this.$face.$getCharIndex($firstChar);
                        $ii = $i;
                        while (true) {
                            if ($ii >= $charactersLength)
                                break e;
                            $secondChar = var$4[$ii];
                            $second = $data.$getGlyph0($secondChar);
                            if ($second !== null) {
                                $secondIndex = $this.$face.$getCharIndex($secondChar);
                                $kerning = $this.$face.$getKerning($firstIndex, $secondIndex, 0);
                                if ($kerning)
                                    $first.$setKerning($secondChar, cbgggf_FreeType_toInt($kerning));
                                var$14 = $this.$face.$getKerning($secondIndex, $firstIndex, 0);
                                if (var$14)
                                    $second.$setKerning($firstChar, cbgggf_FreeType_toInt(var$14));
                            }
                            $ii = $ii + 1 | 0;
                        }
                    }
                }
                $i = $i + 1 | 0;
            }
        }
    }
    if ($ownsAtlas) {
        $data.$regions0 = cbgu_Array__init_();
        $packer.$updateTextureRegions($data.$regions0, $parameter.$minFilter0, $parameter.$magFilter0, $parameter.$genMipMaps);
    }
    $spaceGlyph = $data.$getGlyph0(32);
    if ($spaceGlyph === null) {
        $spaceGlyph = cbggg_BitmapFont$Glyph__init_();
        $spaceGlyph.$xadvance = ($data.$spaceXadvance | 0) + $parameter.$spaceX | 0;
        $spaceGlyph.$id1 = 32;
        $data.$setGlyph(32, $spaceGlyph);
    }
    if (!$spaceGlyph.$width2)
        $spaceGlyph.$width2 = $spaceGlyph.$xadvance + $data.$padRight0 | 0;
    return $data;
}
function cbgggf_FreeTypeFontGenerator_createGlyph($this, $c, $data, $parameter, $stroker, $baseLine, $packer) {
    var $missing, $slot, $mainGlyph, var$10, $mainBitmap, $padPixmap, $borderGlyph, $borderPixmap, $top, $left, var$17, $borderBitmap, $i, $n, $shadowPixmap, $mainW, $mainH, $shadowOffsetX, $shadowOffsetY, $shadowW, $shadowH, $shadowColor, $a, $r, $g, $b, $mainPixels, var$34, $shadowPixels, $y, $shadowRow, $x, $mainPixel, $mainA, $shadowPixel, $metrics, $glyph, $buf, $whiteIntBits, $clearIntBits, $h, $idx, $w, $bit, $rect, $$je;
    $missing = !$this.$face.$getCharIndex($c) && $c ? 1 : 0;
    if ($missing)
        return null;
    if (!cbgggf_FreeTypeFontGenerator_loadChar0($this, $c, cbgggf_FreeTypeFontGenerator_getLoadingFlags($this, $parameter)))
        return null;
    $slot = $this.$face.$getGlyph();
    $mainGlyph = $slot.$getGlyph1();
    a: {
        try {
            if (!$parameter.$mono) {
                cbgggf_FreeType_$callClinit();
                var$10 = cbgggf_FreeType_FT_RENDER_MODE_NORMAL;
            } else {
                cbgggf_FreeType_$callClinit();
                var$10 = cbgggf_FreeType_FT_RENDER_MODE_MONO;
            }
            $mainGlyph.$toBitmap(var$10);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof cbgu_GdxRuntimeException) {
            } else {
                throw $$e;
            }
        }
        $mainGlyph.$dispose();
        cbg_Gdx_app.$log0($rt_s(441), (((jl_StringBuilder__init_()).$append($rt_s(442))).$append8($c)).$toString());
        return null;
    }
    $mainBitmap = $mainGlyph.$getBitmap();
    cbgg_Pixmap$Format_$callClinit();
    $padPixmap = $mainBitmap.$getPixmap(cbgg_Pixmap$Format_RGBA8888, $parameter.$color0, $parameter.$gamma);
    if (!$mainBitmap.$getWidth())
        $borderGlyph = $mainGlyph;
    else if (!$mainBitmap.$getRows())
        $borderGlyph = $mainGlyph;
    else {
        if ($parameter.$borderWidth <= 0.0) {
            $borderPixmap = $padPixmap;
            $borderGlyph = $mainGlyph;
        } else {
            $top = $mainGlyph.$getTop();
            $left = $mainGlyph.$getLeft();
            $borderGlyph = $slot.$getGlyph1();
            $borderGlyph.$strokeBorder($stroker, 0);
            if (!$parameter.$mono) {
                cbgggf_FreeType_$callClinit();
                var$10 = cbgggf_FreeType_FT_RENDER_MODE_NORMAL;
            } else {
                cbgggf_FreeType_$callClinit();
                var$10 = cbgggf_FreeType_FT_RENDER_MODE_MONO;
            }
            $borderGlyph.$toBitmap(var$10);
            var$17 = $left - $borderGlyph.$getLeft() | 0;
            var$10 =  -($top - $borderGlyph.$getTop() | 0) | 0;
            $borderBitmap = $borderGlyph.$getBitmap();
            $borderPixmap = $borderBitmap.$getPixmap(cbgg_Pixmap$Format_RGBA8888, $parameter.$borderColor, $parameter.$borderGamma);
            $i = 0;
            $n = $parameter.$renderCount;
            while ($i < $n) {
                $borderPixmap.$drawPixmap0($padPixmap, var$17, var$10);
                $i = $i + 1 | 0;
            }
            $padPixmap.$dispose();
            $mainGlyph.$dispose();
        }
        if (!$parameter.$shadowOffsetX && !$parameter.$shadowOffsetY) {
            if ($parameter.$borderWidth !== 0.0)
                $shadowPixmap = $borderPixmap;
            else {
                $i = 0;
                $n = $parameter.$renderCount - 1 | 0;
                while ($i < $n) {
                    $borderPixmap.$drawPixmap0($borderPixmap, 0, 0);
                    $i = $i + 1 | 0;
                }
                $shadowPixmap = $borderPixmap;
            }
        } else {
            $mainW = $borderPixmap.$getWidth();
            $mainH = $borderPixmap.$getHeight();
            $shadowOffsetX = jl_Math_max($parameter.$shadowOffsetX, 0);
            $shadowOffsetY = jl_Math_max($parameter.$shadowOffsetY, 0);
            $shadowW = $mainW + jl_Math_abs0($parameter.$shadowOffsetX) | 0;
            $shadowH = $mainH + jl_Math_abs0($parameter.$shadowOffsetY) | 0;
            $shadowPixmap = cbgg_Pixmap__init_($shadowW, $shadowH, $borderPixmap.$getFormat());
            $shadowColor = $parameter.$shadowColor;
            $a = $shadowColor.$a0;
            if ($a !== 0.0) {
                $r = ($shadowColor.$r0 * 255.0 | 0) << 24 >> 24;
                $g = ($shadowColor.$g0 * 255.0 | 0) << 24 >> 24;
                $b = ($shadowColor.$b0 * 255.0 | 0) << 24 >> 24;
                $mainPixels = $borderPixmap.$getRealPixels();
                var$34 = $shadowPixmap;
                $shadowPixels = var$34.$getRealPixels();
                $y = 0;
                while ($y < $mainH) {
                    $shadowRow = $rt_imul($shadowW, $y + $shadowOffsetY | 0) + $shadowOffsetX | 0;
                    $x = 0;
                    while ($x < $mainW) {
                        $mainPixel = ($rt_imul($mainW, $y) + $x | 0) * 4 | 0;
                        $mainA = $mainPixels.$get11($mainPixel + 3 | 0);
                        if ($mainA) {
                            $shadowPixel = ($shadowRow + $x | 0) * 4 | 0;
                            $shadowPixels.$put11($shadowPixel, $r);
                            $shadowPixels.$put11($shadowPixel + 1 | 0, $g);
                            $shadowPixels.$put11($shadowPixel + 2 | 0, $b);
                            $shadowPixels.$put11($shadowPixel + 3 | 0, (($mainA & 255) * $a | 0) << 24 >> 24);
                        }
                        $x = $x + 1 | 0;
                    }
                    $y = $y + 1 | 0;
                }
                var$34.$putPixelsBack($shadowPixels);
            }
            $i = 0;
            $n = $parameter.$renderCount;
            while ($i < $n) {
                $shadowPixmap.$drawPixmap0($borderPixmap, jl_Math_max( -$parameter.$shadowOffsetX | 0, 0), jl_Math_max( -$parameter.$shadowOffsetY | 0, 0));
                $i = $i + 1 | 0;
            }
            $borderPixmap.$dispose();
        }
        if ($parameter.$padTop <= 0 && $parameter.$padLeft <= 0 && $parameter.$padBottom <= 0 && $parameter.$padRight <= 0)
            $padPixmap = $shadowPixmap;
        else {
            $padPixmap = new cbgg_Pixmap;
            var$10 = ($shadowPixmap.$getWidth() + $parameter.$padLeft | 0) + $parameter.$padRight | 0;
            cbgg_Pixmap__init_2($padPixmap, var$10, ($shadowPixmap.$getHeight() + $parameter.$padTop | 0) + $parameter.$padBottom | 0, $shadowPixmap.$getFormat());
            cbgg_Pixmap$Blending_$callClinit();
            $padPixmap.$setBlending(cbgg_Pixmap$Blending_None);
            $padPixmap.$drawPixmap0($shadowPixmap, $parameter.$padLeft, $parameter.$padTop);
            $shadowPixmap.$dispose();
        }
    }
    $metrics = $slot.$getMetrics0();
    $glyph = cbggg_BitmapFont$Glyph__init_();
    $glyph.$id1 = $c;
    $glyph.$width2 = $padPixmap.$getWidth();
    $glyph.$height2 = $padPixmap.$getHeight();
    $glyph.$xoffset = $borderGlyph.$getLeft();
    if ($parameter.$flip1)
        $glyph.$yoffset = ( -$borderGlyph.$getTop() | 0) + ($baseLine | 0) | 0;
    else
        $glyph.$yoffset = ( -($glyph.$height2 - $borderGlyph.$getTop() | 0) | 0) - ($baseLine | 0) | 0;
    b: {
        $glyph.$xadvance = (cbgggf_FreeType_toInt($metrics.$getHoriAdvance()) + ($parameter.$borderWidth | 0) | 0) + $parameter.$spaceX | 0;
        if ($this.$bitmapped) {
            cbgg_Color_$callClinit();
            $padPixmap.$setColor(cbgg_Color_CLEAR);
            $padPixmap.$fill();
            $buf = $mainBitmap.$getBuffer();
            $whiteIntBits = cbgg_Color_WHITE.$toIntBits();
            $clearIntBits = cbgg_Color_CLEAR.$toIntBits();
            $h = 0;
            while (true) {
                if ($h >= $glyph.$height2)
                    break b;
                $idx = $rt_imul($h, $mainBitmap.$getPitch());
                $w = 0;
                while ($w < ($glyph.$width2 + $glyph.$xoffset | 0)) {
                    $bit = $buf.$get11($idx + ($w / 8 | 0) | 0) >>> (7 - ($w % 8 | 0) | 0) & 1;
                    $padPixmap.$drawPixel0($w, $h, $bit != 1 ? $clearIntBits : $whiteIntBits);
                    $w = $w + 1 | 0;
                }
                $h = $h + 1 | 0;
            }
        }
    }
    $rect = $packer.$pack($padPixmap);
    $glyph.$page = ($packer.$getPages()).$size1 - 1 | 0;
    $glyph.$srcX = $rect.$x | 0;
    $glyph.$srcY = $rect.$y | 0;
    if ($parameter.$incremental && $data.$regions0 !== null && $data.$regions0.$size1 <= $glyph.$page)
        $packer.$updateTextureRegions($data.$regions0, $parameter.$minFilter0, $parameter.$magFilter0, $parameter.$genMipMaps);
    $padPixmap.$dispose();
    $borderGlyph.$dispose();
    return $glyph;
}
function cbgggf_FreeTypeFontGenerator_dispose($this) {
    $this.$face.$dispose();
    $this.$library0.$dispose();
}
function cbgggf_FreeTypeFontGenerator__clinit_() {
    cbgggf_FreeTypeFontGenerator_maxTextureSize = 1024;
}
function otcit_FloatAnalyzer$Result() {
    var a = this; jl_Object.call(a);
    a.$mantissa = 0;
    a.$exponent = 0;
    a.$sign = 0;
}
function otcit_FloatAnalyzer$Result__init_() {
    var var_0 = new otcit_FloatAnalyzer$Result();
    otcit_FloatAnalyzer$Result__init_0(var_0);
    return var_0;
}
function otcit_FloatAnalyzer$Result__init_0($this) {
    jl_Object__init_0($this);
}
var jur_UCIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet);
function jur_UCIDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_UCIDecomposedCharSet();
    jur_UCIDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_UCIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
    jur_DecomposedCharSet__init_0($this, $decomp, $decomposedCharLength);
}
var jn_FloatBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_FloatBufferOverByteBuffer);
function jn_FloatBufferOverByteBufferLittleEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_FloatBufferOverByteBufferLittleEndian();
    jn_FloatBufferOverByteBufferLittleEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_FloatBufferOverByteBufferLittleEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_FloatBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_FloatBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer3.$array0.data;
    var$3 = $this.$start6;
    var$4 = $index * 4 | 0;
    $value = (var$2[var$3 + var$4 | 0] & 255) << 24 | ($this.$byteByffer3.$array0.data[($this.$start6 + var$4 | 0) + 1 | 0] & 255) << 16 | ($this.$byteByffer3.$array0.data[($this.$start6 + var$4 | 0) + 2 | 0] & 255) << 8 | $this.$byteByffer3.$array0.data[($this.$start6 + var$4 | 0) + 3 | 0] & 255;
    return $rt_intBitsToFloat($value);
}
function jn_FloatBufferOverByteBufferLittleEndian_putElement($this, $index, $f) {
    var $value, var$4, var$5, var$6;
    $value = $rt_floatToIntBits($f);
    var$4 = $this.$byteByffer3.$array0.data;
    var$5 = $this.$start6;
    var$6 = $index * 4 | 0;
    var$4[var$5 + var$6 | 0] = $value >> 24 << 24 >> 24;
    $this.$byteByffer3.$array0.data[($this.$start6 + var$6 | 0) + 1 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer3.$array0.data[($this.$start6 + var$6 | 0) + 2 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer3.$array0.data[($this.$start6 + var$6 | 0) + 3 | 0] = $value << 24 >> 24;
}
function jur_AbstractCharClass$LazyJavaWhitespace$1() {
    jur_AbstractCharClass.call(this);
    this.$this$021 = null;
}
function jur_AbstractCharClass$LazyJavaWhitespace$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaWhitespace$1();
    jur_AbstractCharClass$LazyJavaWhitespace$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaWhitespace$1__init_0($this, $this$0) {
    $this.$this$021 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaWhitespace$1_contains($this, $ch) {
    return jl_Character_isWhitespace0($ch);
}
function jnc_MalformedInputException() {
    jnc_CharacterCodingException.call(this);
    this.$length3 = 0;
}
function jnc_MalformedInputException__init_(var_0) {
    var var_1 = new jnc_MalformedInputException();
    jnc_MalformedInputException__init_0(var_1, var_0);
    return var_1;
}
function jnc_MalformedInputException__init_0($this, $length) {
    jnc_CharacterCodingException__init_0($this);
    $this.$length3 = $length;
}
function jnc_MalformedInputException_getMessage($this) {
    return (((jl_StringBuilder__init_()).$append($rt_s(443))).$append0($this.$length3)).$toString();
}
var jur_AbstractCharClass$LazyJavaJavaIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var cbgg_Pixmap$Blending = $rt_classWithoutFields(jl_Enum);
var cbgg_Pixmap$Blending_None = null;
var cbgg_Pixmap$Blending_SourceOver = null;
var cbgg_Pixmap$Blending_$VALUES = null;
function cbgg_Pixmap$Blending_$callClinit() {
    cbgg_Pixmap$Blending_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Blending);
    cbgg_Pixmap$Blending__clinit_();
}
function cbgg_Pixmap$Blending__init_(var_0, var_1) {
    var var_2 = new cbgg_Pixmap$Blending();
    cbgg_Pixmap$Blending__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_Pixmap$Blending_values() {
    cbgg_Pixmap$Blending_$callClinit();
    return cbgg_Pixmap$Blending_$VALUES.$clone();
}
function cbgg_Pixmap$Blending__init_0($this, var$1, var$2) {
    cbgg_Pixmap$Blending_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_Pixmap$Blending__clinit_() {
    cbgg_Pixmap$Blending_None = cbgg_Pixmap$Blending__init_($rt_s(444), 0);
    cbgg_Pixmap$Blending_SourceOver = cbgg_Pixmap$Blending__init_($rt_s(445), 1);
    cbgg_Pixmap$Blending_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Blending, [cbgg_Pixmap$Blending_None, cbgg_Pixmap$Blending_SourceOver]);
}
var cbgg_Pixmap$Filter = $rt_classWithoutFields(jl_Enum);
var cbgg_Pixmap$Filter_NearestNeighbour = null;
var cbgg_Pixmap$Filter_BiLinear = null;
var cbgg_Pixmap$Filter_$VALUES = null;
function cbgg_Pixmap$Filter_$callClinit() {
    cbgg_Pixmap$Filter_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Filter);
    cbgg_Pixmap$Filter__clinit_();
}
function cbgg_Pixmap$Filter__init_(var_0, var_1) {
    var var_2 = new cbgg_Pixmap$Filter();
    cbgg_Pixmap$Filter__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_Pixmap$Filter_values() {
    cbgg_Pixmap$Filter_$callClinit();
    return cbgg_Pixmap$Filter_$VALUES.$clone();
}
function cbgg_Pixmap$Filter__init_0($this, var$1, var$2) {
    cbgg_Pixmap$Filter_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_Pixmap$Filter__clinit_() {
    cbgg_Pixmap$Filter_NearestNeighbour = cbgg_Pixmap$Filter__init_($rt_s(446), 0);
    cbgg_Pixmap$Filter_BiLinear = cbgg_Pixmap$Filter__init_($rt_s(447), 1);
    cbgg_Pixmap$Filter_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Filter, [cbgg_Pixmap$Filter_NearestNeighbour, cbgg_Pixmap$Filter_BiLinear]);
}
var cgxgbws_SoundManagerCallbackWrapper = $rt_classWithoutFields(0);
var jl_CloneNotSupportedException = $rt_classWithoutFields(jl_Exception);
function jl_CloneNotSupportedException__init_() {
    var var_0 = new jl_CloneNotSupportedException();
    jl_CloneNotSupportedException__init_0(var_0);
    return var_0;
}
function jl_CloneNotSupportedException__init_0($this) {
    jl_Exception__init_0($this);
}
var cbgu_ScreenUtils = $rt_classWithoutFields();
function cbgu_ScreenUtils_clear($r, $g, $b, $a) {
    cbgu_ScreenUtils_clear0($r, $g, $b, $a, 0);
}
function cbgu_ScreenUtils_clear0($r, $g, $b, $a, $clearDepth) {
    var $mask;
    cbg_Gdx_gl.$glClearColor($r, $g, $b, $a);
    $mask = 16384;
    if ($clearDepth)
        $mask = 16640;
    cbg_Gdx_gl.$glClear($mask);
}
var otjt_Uint8Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var jl_Long = $rt_classWithoutFields(jl_Number);
var jl_Long_TYPE = null;
function jl_Long_$callClinit() {
    jl_Long_$callClinit = $rt_eraseClinit(jl_Long);
    jl_Long__clinit_();
}
function jl_Long_parseLong0($s, $radix) {
    var $negative, $index, $value, var$6, $digit;
    jl_Long_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        if ($s !== null && !$s.$isEmpty()) {
            a: {
                $negative = 0;
                $index = 0;
                switch ($s.$charAt(0)) {
                    case 43:
                        $index = 1;
                        break a;
                    case 45:
                        $negative = 1;
                        $index = 1;
                        break a;
                    default:
                }
            }
            $value = Long_ZERO;
            while ($index < $s.$length()) {
                var$6 = $index + 1 | 0;
                $digit = jl_Character_getNumericValue($s.$charAt($index));
                if ($digit < 0)
                    $rt_throw(jl_NumberFormatException__init_0((((jl_StringBuilder__init_()).$append($rt_s(7))).$append($s)).$toString()));
                if ($digit >= $radix)
                    $rt_throw(jl_NumberFormatException__init_0((((((jl_StringBuilder__init_()).$append($rt_s(8))).$append0($radix)).$append($rt_s(9))).$append($s)).$toString()));
                $value = Long_add(Long_mul(Long_fromInt($radix), $value), Long_fromInt($digit));
                if (Long_lt($value, Long_ZERO)) {
                    if (var$6 == $s.$length() && Long_eq($value, Long_create(0, 2147483648)) && $negative)
                        return Long_create(0, 2147483648);
                    $rt_throw(jl_NumberFormatException__init_0((((jl_StringBuilder__init_()).$append($rt_s(10))).$append($s)).$toString()));
                }
                $index = var$6;
            }
            if ($negative)
                $value = Long_neg($value);
            return $value;
        }
        $rt_throw(jl_NumberFormatException__init_0($rt_s(11)));
    }
    $rt_throw(jl_NumberFormatException__init_0((((jl_StringBuilder__init_()).$append($rt_s(12))).$append0($radix)).$toString()));
}
function jl_Long_parseLong($s) {
    jl_Long_$callClinit();
    return jl_Long_parseLong0($s, 10);
}
function jl_Long_numberOfLeadingZeros($i) {
    var $n, var$3, var$4;
    jl_Long_$callClinit();
    if (Long_eq($i, Long_ZERO))
        return 64;
    $n = 0;
    var$3 = Long_shru($i, 32);
    if (Long_ne(var$3, Long_ZERO))
        $n = 32;
    else
        var$3 = $i;
    var$4 = Long_shru(var$3, 16);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 16;
    var$3 = Long_shru(var$4, 8);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 8;
    var$4 = Long_shru(var$3, 4);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 4;
    var$3 = Long_shru(var$4, 2);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 2;
    if (Long_ne(Long_shru(var$3, 1), Long_ZERO))
        $n = $n | 1;
    return (64 - $n | 0) - 1 | 0;
}
function jl_Long__clinit_() {
    jl_Long_TYPE = $rt_cls($rt_longcls());
}
var cgxgbwdt_TypedArrays = $rt_classWithoutFields();
var cgxgbwdt_TypedArrays_instance = null;
function cgxgbwdt_TypedArrays__init_($this) {
    jl_Object__init_0($this);
}
function cgxgbwdt_TypedArrays_getInstance() {
    return cgxgbwdt_TypedArrays_instance;
}
function cgxgbwdt_TypedArrays_setInstance($instance) {
    cgxgbwdt_TypedArrays_instance = $instance;
}
var cgxgbws_SoundManagerWrapper = $rt_classWithoutFields(0);
function cgxgbtdi_TeaSoundManager() {
    jl_Object.call(this);
    this.$soundManagerJS = null;
}
function cgxgbtdi_TeaSoundManager__init_() {
    var var_0 = new cgxgbtdi_TeaSoundManager();
    cgxgbtdi_TeaSoundManager__init_0(var_0);
    return var_0;
}
function cgxgbtdi_TeaSoundManager__init_0($this) {
    jl_Object__init_0($this);
    $this.$soundManagerJS = cgxgbtdi_TeaSoundManager_createSM$js_body$_0();
}
function cgxgbtdi_TeaSoundManager_setup($this, $url, $callback) {
    cgxgbtdi_TeaSoundManager_setupJS$js_body$_1($this.$soundManagerJS, $rt_ustr($url), $callback);
}
function cgxgbtdi_TeaSoundManager_createSM$js_body$_0() {
    var soundManager = new SoundManager();
    soundManager.debugMode = false;
    return soundManager;
}
function cgxgbtdi_TeaSoundManager_setupJS$js_body$_1(var$1, var$2, var$3) {
    var$1.setup({ url : var$2, onready : function() {
        var$3.onready();
    }, ontimeout : function(status) {
        var$3.ontimeout();
    } });
}
var cbgggf_FreeType = $rt_classWithoutFields();
var cbgggf_FreeType_FT_PIXEL_MODE_NONE = 0;
var cbgggf_FreeType_FT_PIXEL_MODE_MONO = 0;
var cbgggf_FreeType_FT_PIXEL_MODE_GRAY = 0;
var cbgggf_FreeType_FT_PIXEL_MODE_GRAY2 = 0;
var cbgggf_FreeType_FT_PIXEL_MODE_GRAY4 = 0;
var cbgggf_FreeType_FT_PIXEL_MODE_LCD = 0;
var cbgggf_FreeType_FT_PIXEL_MODE_LCD_V = 0;
var cbgggf_FreeType_FT_ENCODING_NONE = 0;
var cbgggf_FreeType_FT_ENCODING_MS_SYMBOL = 0;
var cbgggf_FreeType_FT_ENCODING_UNICODE = 0;
var cbgggf_FreeType_FT_ENCODING_SJIS = 0;
var cbgggf_FreeType_FT_ENCODING_GB2312 = 0;
var cbgggf_FreeType_FT_ENCODING_BIG5 = 0;
var cbgggf_FreeType_FT_ENCODING_WANSUNG = 0;
var cbgggf_FreeType_FT_ENCODING_JOHAB = 0;
var cbgggf_FreeType_FT_ENCODING_ADOBE_STANDARD = 0;
var cbgggf_FreeType_FT_ENCODING_ADOBE_EXPERT = 0;
var cbgggf_FreeType_FT_ENCODING_ADOBE_CUSTOM = 0;
var cbgggf_FreeType_FT_ENCODING_ADOBE_LATIN_1 = 0;
var cbgggf_FreeType_FT_ENCODING_OLD_LATIN_2 = 0;
var cbgggf_FreeType_FT_ENCODING_APPLE_ROMAN = 0;
var cbgggf_FreeType_FT_FACE_FLAG_SCALABLE = 0;
var cbgggf_FreeType_FT_FACE_FLAG_FIXED_SIZES = 0;
var cbgggf_FreeType_FT_FACE_FLAG_FIXED_WIDTH = 0;
var cbgggf_FreeType_FT_FACE_FLAG_SFNT = 0;
var cbgggf_FreeType_FT_FACE_FLAG_HORIZONTAL = 0;
var cbgggf_FreeType_FT_FACE_FLAG_VERTICAL = 0;
var cbgggf_FreeType_FT_FACE_FLAG_KERNING = 0;
var cbgggf_FreeType_FT_FACE_FLAG_FAST_GLYPHS = 0;
var cbgggf_FreeType_FT_FACE_FLAG_MULTIPLE_MASTERS = 0;
var cbgggf_FreeType_FT_FACE_FLAG_GLYPH_NAMES = 0;
var cbgggf_FreeType_FT_FACE_FLAG_EXTERNAL_STREAM = 0;
var cbgggf_FreeType_FT_FACE_FLAG_HINTER = 0;
var cbgggf_FreeType_FT_FACE_FLAG_CID_KEYED = 0;
var cbgggf_FreeType_FT_FACE_FLAG_TRICKY = 0;
var cbgggf_FreeType_FT_STYLE_FLAG_ITALIC = 0;
var cbgggf_FreeType_FT_STYLE_FLAG_BOLD = 0;
var cbgggf_FreeType_FT_LOAD_DEFAULT = 0;
var cbgggf_FreeType_FT_LOAD_NO_SCALE = 0;
var cbgggf_FreeType_FT_LOAD_NO_HINTING = 0;
var cbgggf_FreeType_FT_LOAD_RENDER = 0;
var cbgggf_FreeType_FT_LOAD_NO_BITMAP = 0;
var cbgggf_FreeType_FT_LOAD_VERTICAL_LAYOUT = 0;
var cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT = 0;
var cbgggf_FreeType_FT_LOAD_CROP_BITMAP = 0;
var cbgggf_FreeType_FT_LOAD_PEDANTIC = 0;
var cbgggf_FreeType_FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH = 0;
var cbgggf_FreeType_FT_LOAD_NO_RECURSE = 0;
var cbgggf_FreeType_FT_LOAD_IGNORE_TRANSFORM = 0;
var cbgggf_FreeType_FT_LOAD_MONOCHROME = 0;
var cbgggf_FreeType_FT_LOAD_LINEAR_DESIGN = 0;
var cbgggf_FreeType_FT_LOAD_NO_AUTOHINT = 0;
var cbgggf_FreeType_FT_LOAD_TARGET_NORMAL = 0;
var cbgggf_FreeType_FT_LOAD_TARGET_LIGHT = 0;
var cbgggf_FreeType_FT_LOAD_TARGET_MONO = 0;
var cbgggf_FreeType_FT_LOAD_TARGET_LCD = 0;
var cbgggf_FreeType_FT_LOAD_TARGET_LCD_V = 0;
var cbgggf_FreeType_FT_RENDER_MODE_NORMAL = 0;
var cbgggf_FreeType_FT_RENDER_MODE_LIGHT = 0;
var cbgggf_FreeType_FT_RENDER_MODE_MONO = 0;
var cbgggf_FreeType_FT_RENDER_MODE_LCD = 0;
var cbgggf_FreeType_FT_RENDER_MODE_LCD_V = 0;
var cbgggf_FreeType_FT_RENDER_MODE_MAX = 0;
var cbgggf_FreeType_FT_KERNING_DEFAULT = 0;
var cbgggf_FreeType_FT_KERNING_UNFITTED = 0;
var cbgggf_FreeType_FT_KERNING_UNSCALED = 0;
var cbgggf_FreeType_FT_STROKER_LINECAP_BUTT = 0;
var cbgggf_FreeType_FT_STROKER_LINECAP_ROUND = 0;
var cbgggf_FreeType_FT_STROKER_LINECAP_SQUARE = 0;
var cbgggf_FreeType_FT_STROKER_LINEJOIN_ROUND = 0;
var cbgggf_FreeType_FT_STROKER_LINEJOIN_BEVEL = 0;
var cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER_VARIABLE = 0;
var cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER = 0;
var cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER_FIXED = 0;
var cbgggf_FreeType_freeTypeInit = 0;
function cbgggf_FreeType_$callClinit() {
    cbgggf_FreeType_$callClinit = $rt_eraseClinit(cbgggf_FreeType);
    cbgggf_FreeType__clinit_();
}
function cbgggf_FreeType_encode($a, $b, $c, $d) {
    cbgggf_FreeType_$callClinit();
    return $a << 24 | $b << 16 | $c << 8 | $d;
}
function cbgggf_FreeType_initFreeType() {
    var $app, $preloader, $address;
    cbgggf_FreeType_$callClinit();
    if (!cbgggf_FreeType_freeTypeInit) {
        $app = cbg_Gdx_app;
        $preloader = $app.$getPreloader();
        $preloader.$loadScript($rt_s(448), cbgggf_FreeType$1__init_());
    }
    $address = Module._c_FreeType_initFreeTypeJni();
    if ($address)
        return cbgggf_FreeType$Library__init_($address);
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(449)));
}
function cbgggf_FreeType_toInt($value) {
    cbgggf_FreeType_$callClinit();
    return (($value + 63 | 0) & (-64)) >> 6;
}
function cbgggf_FreeType_access$000($x0) {
    cbgggf_FreeType_$callClinit();
    Module._free($x0);
}
function cbgggf_FreeType_access$102($x0) {
    cbgggf_FreeType_$callClinit();
    cbgggf_FreeType_freeTypeInit = $x0;
    return $x0;
}
function cbgggf_FreeType__clinit_() {
    cbgggf_FreeType_FT_PIXEL_MODE_NONE = 0;
    cbgggf_FreeType_FT_PIXEL_MODE_MONO = 1;
    cbgggf_FreeType_FT_PIXEL_MODE_GRAY = 2;
    cbgggf_FreeType_FT_PIXEL_MODE_GRAY2 = 3;
    cbgggf_FreeType_FT_PIXEL_MODE_GRAY4 = 4;
    cbgggf_FreeType_FT_PIXEL_MODE_LCD = 5;
    cbgggf_FreeType_FT_PIXEL_MODE_LCD_V = 6;
    cbgggf_FreeType_FT_ENCODING_NONE = 0;
    cbgggf_FreeType_FT_ENCODING_MS_SYMBOL = cbgggf_FreeType_encode(115, 121, 109, 98);
    cbgggf_FreeType_FT_ENCODING_UNICODE = cbgggf_FreeType_encode(117, 110, 105, 99);
    cbgggf_FreeType_FT_ENCODING_SJIS = cbgggf_FreeType_encode(115, 106, 105, 115);
    cbgggf_FreeType_FT_ENCODING_GB2312 = cbgggf_FreeType_encode(103, 98, 32, 32);
    cbgggf_FreeType_FT_ENCODING_BIG5 = cbgggf_FreeType_encode(98, 105, 103, 53);
    cbgggf_FreeType_FT_ENCODING_WANSUNG = cbgggf_FreeType_encode(119, 97, 110, 115);
    cbgggf_FreeType_FT_ENCODING_JOHAB = cbgggf_FreeType_encode(106, 111, 104, 97);
    cbgggf_FreeType_FT_ENCODING_ADOBE_STANDARD = cbgggf_FreeType_encode(65, 68, 79, 66);
    cbgggf_FreeType_FT_ENCODING_ADOBE_EXPERT = cbgggf_FreeType_encode(65, 68, 66, 69);
    cbgggf_FreeType_FT_ENCODING_ADOBE_CUSTOM = cbgggf_FreeType_encode(65, 68, 66, 67);
    cbgggf_FreeType_FT_ENCODING_ADOBE_LATIN_1 = cbgggf_FreeType_encode(108, 97, 116, 49);
    cbgggf_FreeType_FT_ENCODING_OLD_LATIN_2 = cbgggf_FreeType_encode(108, 97, 116, 50);
    cbgggf_FreeType_FT_ENCODING_APPLE_ROMAN = cbgggf_FreeType_encode(97, 114, 109, 110);
    cbgggf_FreeType_FT_FACE_FLAG_SCALABLE = 1;
    cbgggf_FreeType_FT_FACE_FLAG_FIXED_SIZES = 2;
    cbgggf_FreeType_FT_FACE_FLAG_FIXED_WIDTH = 4;
    cbgggf_FreeType_FT_FACE_FLAG_SFNT = 8;
    cbgggf_FreeType_FT_FACE_FLAG_HORIZONTAL = 16;
    cbgggf_FreeType_FT_FACE_FLAG_VERTICAL = 32;
    cbgggf_FreeType_FT_FACE_FLAG_KERNING = 64;
    cbgggf_FreeType_FT_FACE_FLAG_FAST_GLYPHS = 128;
    cbgggf_FreeType_FT_FACE_FLAG_MULTIPLE_MASTERS = 256;
    cbgggf_FreeType_FT_FACE_FLAG_GLYPH_NAMES = 512;
    cbgggf_FreeType_FT_FACE_FLAG_EXTERNAL_STREAM = 1024;
    cbgggf_FreeType_FT_FACE_FLAG_HINTER = 2048;
    cbgggf_FreeType_FT_FACE_FLAG_CID_KEYED = 4096;
    cbgggf_FreeType_FT_FACE_FLAG_TRICKY = 8192;
    cbgggf_FreeType_FT_STYLE_FLAG_ITALIC = 1;
    cbgggf_FreeType_FT_STYLE_FLAG_BOLD = 2;
    cbgggf_FreeType_FT_LOAD_DEFAULT = 0;
    cbgggf_FreeType_FT_LOAD_NO_SCALE = 1;
    cbgggf_FreeType_FT_LOAD_NO_HINTING = 2;
    cbgggf_FreeType_FT_LOAD_RENDER = 4;
    cbgggf_FreeType_FT_LOAD_NO_BITMAP = 8;
    cbgggf_FreeType_FT_LOAD_VERTICAL_LAYOUT = 16;
    cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT = 32;
    cbgggf_FreeType_FT_LOAD_CROP_BITMAP = 64;
    cbgggf_FreeType_FT_LOAD_PEDANTIC = 128;
    cbgggf_FreeType_FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH = 512;
    cbgggf_FreeType_FT_LOAD_NO_RECURSE = 1024;
    cbgggf_FreeType_FT_LOAD_IGNORE_TRANSFORM = 2048;
    cbgggf_FreeType_FT_LOAD_MONOCHROME = 4096;
    cbgggf_FreeType_FT_LOAD_LINEAR_DESIGN = 8192;
    cbgggf_FreeType_FT_LOAD_NO_AUTOHINT = 32768;
    cbgggf_FreeType_FT_LOAD_TARGET_NORMAL = 0;
    cbgggf_FreeType_FT_LOAD_TARGET_LIGHT = 65536;
    cbgggf_FreeType_FT_LOAD_TARGET_MONO = 131072;
    cbgggf_FreeType_FT_LOAD_TARGET_LCD = 196608;
    cbgggf_FreeType_FT_LOAD_TARGET_LCD_V = 262144;
    cbgggf_FreeType_FT_RENDER_MODE_NORMAL = 0;
    cbgggf_FreeType_FT_RENDER_MODE_LIGHT = 1;
    cbgggf_FreeType_FT_RENDER_MODE_MONO = 2;
    cbgggf_FreeType_FT_RENDER_MODE_LCD = 3;
    cbgggf_FreeType_FT_RENDER_MODE_LCD_V = 4;
    cbgggf_FreeType_FT_RENDER_MODE_MAX = 5;
    cbgggf_FreeType_FT_KERNING_DEFAULT = 0;
    cbgggf_FreeType_FT_KERNING_UNFITTED = 1;
    cbgggf_FreeType_FT_KERNING_UNSCALED = 2;
    cbgggf_FreeType_FT_STROKER_LINECAP_BUTT = 0;
    cbgggf_FreeType_FT_STROKER_LINECAP_ROUND = 1;
    cbgggf_FreeType_FT_STROKER_LINECAP_SQUARE = 2;
    cbgggf_FreeType_FT_STROKER_LINEJOIN_ROUND = 0;
    cbgggf_FreeType_FT_STROKER_LINEJOIN_BEVEL = 1;
    cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER_VARIABLE = 2;
    cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER = cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER_VARIABLE;
    cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER_FIXED = 3;
}
function jur_SequenceSet$IntHash() {
    var a = this; jl_Object.call(a);
    a.$table = null;
    a.$values6 = null;
    a.$mask3 = 0;
    a.$size10 = 0;
}
function jur_SequenceSet$IntHash__init_(var_0) {
    var var_1 = new jur_SequenceSet$IntHash();
    jur_SequenceSet$IntHash__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet$IntHash__init_0($this, $size) {
    jl_Object__init_0($this);
    while ($size >= $this.$mask3) {
        $this.$mask3 = $this.$mask3 << 1 | 1;
    }
    $this.$mask3 = $this.$mask3 << 1 | 1;
    $this.$table = $rt_createIntArray($this.$mask3 + 1 | 0);
    $this.$values6 = $rt_createIntArray($this.$mask3 + 1 | 0);
    $this.$size10 = $size;
}
function jur_SequenceSet$IntHash_put($this, $key, $value) {
    var $i, $hashCode, var$5;
    $i = 0;
    $hashCode = $key & $this.$mask3;
    while ($this.$table.data[$hashCode] && $this.$table.data[$hashCode] != $key) {
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask3;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask3;
    }
    $this.$table.data[$hashCode] = $key;
    $this.$values6.data[$hashCode] = $value;
}
function jur_SequenceSet$IntHash_get($this, $key) {
    var $hashCode, $i, $storedKey, var$5;
    $hashCode = $key & $this.$mask3;
    $i = 0;
    while (true) {
        $storedKey = $this.$table.data[$hashCode];
        if (!$storedKey)
            break;
        if ($storedKey == $key)
            return $this.$values6.data[$hashCode];
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask3;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask3;
    }
    return $this.$size10;
}
var otjc_JSArrayReader = $rt_classWithoutFields(0);
var otjc_JSArray = $rt_classWithoutFields();
function otjc_JSArray_get$exported$0(var$0, var$1) {
    return var$0.$get12(var$1);
}
function otjc_JSArray_getLength$exported$1(var$0) {
    return var$0.$getLength();
}
function cbggg_TextureRegion() {
    var a = this; jl_Object.call(a);
    a.$texture0 = null;
    a.$u0 = 0.0;
    a.$v0 = 0.0;
    a.$u20 = 0.0;
    a.$v20 = 0.0;
    a.$regionWidth = 0;
    a.$regionHeight = 0;
}
function cbggg_TextureRegion__init_(var_0) {
    var var_1 = new cbggg_TextureRegion();
    cbggg_TextureRegion__init_0(var_1, var_0);
    return var_1;
}
function cbggg_TextureRegion__init_0($this, $texture) {
    jl_Object__init_0($this);
    if ($texture === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(450)));
    $this.$texture0 = $texture;
    $this.$setRegion(0, 0, $texture.$getWidth(), $texture.$getHeight());
}
function cbggg_TextureRegion_setRegion($this, $x, $y, $width, $height) {
    var $invTexWidth, $invTexHeight;
    $invTexWidth = 1.0 / $this.$texture0.$getWidth();
    $invTexHeight = 1.0 / $this.$texture0.$getHeight();
    $this.$setRegion0($x * $invTexWidth, $y * $invTexHeight, ($x + $width | 0) * $invTexWidth, ($y + $height | 0) * $invTexHeight);
    $this.$regionWidth = jl_Math_abs0($width);
    $this.$regionHeight = jl_Math_abs0($height);
}
function cbggg_TextureRegion_setRegion0($this, $u, $v, $u2, $v2) {
    var $texWidth, $texHeight, var$7, var$8, var$9, $adjustX, $adjustY;
    $texWidth = $this.$texture0.$getWidth();
    $texHeight = $this.$texture0.$getHeight();
    var$7 = jl_Math_abs($u2 - $u);
    var$8 = $texWidth;
    $this.$regionWidth = jl_Math_round(var$7 * var$8);
    var$7 = jl_Math_abs($v2 - $v);
    var$9 = $texHeight;
    $this.$regionHeight = jl_Math_round(var$7 * var$9);
    if ($this.$regionWidth == 1 && $this.$regionHeight == 1) {
        $adjustX = 0.25 / var$8;
        $u = $u + $adjustX;
        $u2 = $u2 - $adjustX;
        $adjustY = 0.25 / var$9;
        $v = $v + $adjustY;
        $v2 = $v2 - $adjustY;
    }
    $this.$u0 = $u;
    $this.$v0 = $v;
    $this.$u20 = $u2;
    $this.$v20 = $v2;
}
function cbggg_TextureRegion_getTexture($this) {
    return $this.$texture0;
}
function cbggg_TextureRegion_getRegionWidth($this) {
    return $this.$regionWidth;
}
function cbggg_TextureRegion_getRegionHeight($this) {
    return $this.$regionHeight;
}
var jur_AbstractCharClass$LazyNonDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyDigit);
function jur_AbstractCharClass$LazyNonDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonDigit();
    jur_AbstractCharClass$LazyNonDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonDigit__init_0($this) {
    jur_AbstractCharClass$LazyDigit__init_0($this);
}
function jur_AbstractCharClass$LazyNonDigit_computeValue($this) {
    var $chCl;
    $chCl = (jur_AbstractCharClass$LazyDigit_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function cbggg_BitmapFont() {
    var a = this; jl_Object.call(a);
    a.$data3 = null;
    a.$regions1 = null;
    a.$cache = null;
    a.$flipped0 = 0;
    a.$integer = 0;
    a.$ownsTexture = 0;
}
function cbggg_BitmapFont__init_(var_0, var_1, var_2) {
    var var_3 = new cbggg_BitmapFont();
    cbggg_BitmapFont__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_BitmapFont__init_0($this, $data, $pageRegions, $integer) {
    var $n, $i, $file;
    jl_Object__init_0($this);
    $this.$flipped0 = $data.$flipped;
    $this.$data3 = $data;
    $this.$integer = $integer;
    if ($pageRegions !== null && $pageRegions.$size1) {
        $this.$regions1 = $pageRegions;
        $this.$ownsTexture = 0;
    } else {
        if ($data.$imagePaths === null)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(451)));
        $n = $data.$imagePaths.data.length;
        $this.$regions1 = cbgu_Array__init_1($n);
        $i = 0;
        while ($i < $n) {
            $file = $data.$fontFile === null ? cbg_Gdx_files.$internal($data.$imagePaths.data[$i]) : cbg_Gdx_files.$getFileHandle($data.$imagePaths.data[$i], $data.$fontFile.$type3());
            $this.$regions1.$add3(cbggg_TextureRegion__init_(cbgg_Texture__init_($file, 0)));
            $i = $i + 1 | 0;
        }
        $this.$ownsTexture = 1;
    }
    $this.$cache = $this.$newFontCache();
    $this.$load1($data);
}
function cbggg_BitmapFont_load($this, $data) {
    var var$2, var$3, var$4, $page, var$6, var$7, var$8, $glyph;
    var$2 = $data.$glyphs0.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        a: {
            $page = var$2[var$4];
            if ($page !== null) {
                var$6 = $page.data;
                var$7 = var$6.length;
                var$8 = 0;
                while (true) {
                    if (var$8 >= var$7)
                        break a;
                    $glyph = var$6[var$8];
                    if ($glyph !== null)
                        $data.$setGlyphRegion($glyph, $this.$regions1.$get($glyph.$page));
                    var$8 = var$8 + 1 | 0;
                }
            }
        }
        var$4 = var$4 + 1 | 0;
    }
    if ($data.$missingGlyph !== null)
        $data.$setGlyphRegion($data.$missingGlyph, $this.$regions1.$get($data.$missingGlyph.$page));
}
function cbggg_BitmapFont_draw($this, $batch, $str, $x, $y) {
    var $layout;
    $this.$cache.$clear();
    $layout = $this.$cache.$addText($str, $x, $y);
    $this.$cache.$draw2($batch);
    return $layout;
}
function cbggg_BitmapFont_getRegions($this) {
    return $this.$regions1;
}
function cbggg_BitmapFont_getLineHeight($this) {
    return $this.$data3.$lineHeight;
}
function cbggg_BitmapFont_getCapHeight($this) {
    return $this.$data3.$capHeight;
}
function cbggg_BitmapFont_newFontCache($this) {
    return cbggg_BitmapFontCache__init_($this, $this.$integer);
}
var ju_EnumSet = $rt_classWithoutFields(ju_AbstractSet);
function jur_AbstractCharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS = null;
    a.$this$022 = null;
}
function jur_AbstractCharClass$1__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$1();
    jur_AbstractCharClass$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$1__init_0($this, $this$0, var$2) {
    $this.$this$022 = $this$0;
    $this.$val$lHS = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$1_contains($this, $ch) {
    var $index;
    $index = $ch - 55296 | 0;
    return $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ $this.$val$lHS.$get8($index) : 0;
}
function jur_AbstractCharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS0 = null;
    a.$val$thisClass = null;
    a.$this$023 = null;
}
function jur_AbstractCharClass$2__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$2();
    jur_AbstractCharClass$2__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$2__init_0($this, $this$0, var$2, var$3) {
    $this.$this$023 = $this$0;
    $this.$val$lHS0 = var$2;
    $this.$val$thisClass = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$2_contains($this, $ch) {
    var $index, $containslHS;
    $index = $ch - 55296 | 0;
    $containslHS = $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ $this.$val$lHS0.$get8($index) : 0;
    return $this.$val$thisClass.$contains($ch) && !$containslHS ? 1 : 0;
}
var cbgg_Pixmap$Format = $rt_classWithoutFields(jl_Enum);
var cbgg_Pixmap$Format_Alpha = null;
var cbgg_Pixmap$Format_Intensity = null;
var cbgg_Pixmap$Format_LuminanceAlpha = null;
var cbgg_Pixmap$Format_RGB565 = null;
var cbgg_Pixmap$Format_RGBA4444 = null;
var cbgg_Pixmap$Format_RGB888 = null;
var cbgg_Pixmap$Format_RGBA8888 = null;
var cbgg_Pixmap$Format_$VALUES = null;
function cbgg_Pixmap$Format_$callClinit() {
    cbgg_Pixmap$Format_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Format);
    cbgg_Pixmap$Format__clinit_();
}
function cbgg_Pixmap$Format__init_(var_0, var_1) {
    var var_2 = new cbgg_Pixmap$Format();
    cbgg_Pixmap$Format__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_Pixmap$Format_values() {
    cbgg_Pixmap$Format_$callClinit();
    return cbgg_Pixmap$Format_$VALUES.$clone();
}
function cbgg_Pixmap$Format__init_0($this, var$1, var$2) {
    cbgg_Pixmap$Format_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_Pixmap$Format__clinit_() {
    cbgg_Pixmap$Format_Alpha = cbgg_Pixmap$Format__init_($rt_s(92), 0);
    cbgg_Pixmap$Format_Intensity = cbgg_Pixmap$Format__init_($rt_s(452), 1);
    cbgg_Pixmap$Format_LuminanceAlpha = cbgg_Pixmap$Format__init_($rt_s(453), 2);
    cbgg_Pixmap$Format_RGB565 = cbgg_Pixmap$Format__init_($rt_s(454), 3);
    cbgg_Pixmap$Format_RGBA4444 = cbgg_Pixmap$Format__init_($rt_s(455), 4);
    cbgg_Pixmap$Format_RGB888 = cbgg_Pixmap$Format__init_($rt_s(456), 5);
    cbgg_Pixmap$Format_RGBA8888 = cbgg_Pixmap$Format__init_($rt_s(457), 6);
    cbgg_Pixmap$Format_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Format, [cbgg_Pixmap$Format_Alpha, cbgg_Pixmap$Format_Intensity, cbgg_Pixmap$Format_LuminanceAlpha, cbgg_Pixmap$Format_RGB565, cbgg_Pixmap$Format_RGBA4444, cbgg_Pixmap$Format_RGB888, cbgg_Pixmap$Format_RGBA8888]);
}
var jur_AbstractCharClass$LazyJavaLowerCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaLowerCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLowerCase();
    jur_AbstractCharClass$LazyJavaLowerCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLowerCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLowerCase_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLowerCase$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var otjde_GamepadEventTarget = $rt_classWithoutFields(0);
var jur_PossessiveCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet);
function jur_PossessiveCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_PossessiveCompositeQuantifierSet();
    jur_PossessiveCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_PossessiveCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type);
}
function jur_PossessiveCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, $shift;
    $min = $this.$quantifier0.$min1();
    $max = $this.$quantifier0.$max1();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function cgxgbw_WebApplicationConfiguration() {
    var a = this; jl_Object.call(a);
    a.$stencil = 0;
    a.$antialiasing = 0;
    a.$alpha = 0;
    a.$premultipliedAlpha = 0;
    a.$preserveDrawingBuffer = 0;
    a.$useDebugGL = 0;
    a.$preferFlash = 0;
}
var cgxgbw_WebApplicationConfiguration_JSHelper = null;
function cgxgbw_WebApplicationConfiguration__init_() {
    var var_0 = new cgxgbw_WebApplicationConfiguration();
    cgxgbw_WebApplicationConfiguration__init_0(var_0);
    return var_0;
}
function cgxgbw_WebApplicationConfiguration__init_0($this) {
    jl_Object__init_0($this);
    $this.$stencil = 0;
    $this.$antialiasing = 0;
    $this.$alpha = 0;
    $this.$premultipliedAlpha = 0;
    $this.$preserveDrawingBuffer = 0;
    $this.$useDebugGL = 0;
    $this.$preferFlash = 0;
}
var cgxgbt_TeaApplicationConfiguration = $rt_classWithoutFields(cgxgbw_WebApplicationConfiguration);
function cgxgbt_TeaApplicationConfiguration__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplicationConfiguration();
    cgxgbt_TeaApplicationConfiguration__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplicationConfiguration__init_0($this, $canvasID) {
    var $window, $document, $agentInfo, $elementID;
    cgxgbw_WebApplicationConfiguration__init_0($this);
    $window = cgxgbtdi_TeaWindow__init_();
    $document = $window.$getDocument();
    $agentInfo = cgxgbtd_TeaWebAgent_computeAgentInfo();
    $elementID = $document.getElementById($rt_ustr($canvasID));
    cgxgbw_WebApplicationConfiguration_JSHelper = cgxgbtd_TeaJSHelper__init_($agentInfo, $elementID);
    cgxgbtd_TeaTypedArrays__init_(new cgxgbtd_TeaTypedArrays);
}
var otjde_LoadEventTarget = $rt_classWithoutFields(0);
var cbg_Graphics = $rt_classWithoutFields(0);
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$024 = null;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1();
    jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0($this, $this$0) {
    $this.$this$024 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains($this, $ch) {
    return jl_Character_isLetterOrDigit0($ch);
}
function jur_CharClass$18() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$bs = null;
    a.$this$025 = null;
}
function jur_CharClass$18__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$18();
    jur_CharClass$18__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$18__init_0($this, $this$0, var$2) {
    $this.$this$025 = $this$0;
    $this.$val$bs = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$18_contains($this, $ch) {
    return $this.$alt0 ^ $this.$val$bs.$get8($ch);
}
function jur_CharClass$18_toString($this) {
    var $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$val$bs.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append7(jl_Character_toChars($i));
        $temp.$append8(124);
        $i = $this.$val$bs.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
}
var jur_PossessiveGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_PossessiveGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveGroupQuantifierSet();
    jur_PossessiveGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PossessiveGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $stringIndex_0;
    while (true) {
        $stringIndex_0 = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($stringIndex_0 <= 0)
            break;
        $stringIndex = $stringIndex_0;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function cbggg_BitmapFontCache() {
    var a = this; jl_Object.call(a);
    a.$font = null;
    a.$integer0 = 0;
    a.$layouts = null;
    a.$pooledLayouts = null;
    a.$glyphCount = 0;
    a.$x1 = 0.0;
    a.$y1 = 0.0;
    a.$color2 = null;
    a.$currentTint = 0.0;
    a.$pageVertices = null;
    a.$idx0 = null;
    a.$pageGlyphIndices = null;
    a.$tempGlyphCount = null;
}
var cbggg_BitmapFontCache_tempColor = null;
function cbggg_BitmapFontCache_$callClinit() {
    cbggg_BitmapFontCache_$callClinit = $rt_eraseClinit(cbggg_BitmapFontCache);
    cbggg_BitmapFontCache__clinit_();
}
function cbggg_BitmapFontCache__init_(var_0, var_1) {
    var var_2 = new cbggg_BitmapFontCache();
    cbggg_BitmapFontCache__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_BitmapFontCache__init_0($this, $font, $integer) {
    var $pageCount, $i, $n;
    cbggg_BitmapFontCache_$callClinit();
    jl_Object__init_0($this);
    $this.$layouts = cbgu_Array__init_();
    $this.$pooledLayouts = cbgu_Array__init_();
    $this.$color2 = cbgg_Color__init_3(1.0, 1.0, 1.0, 1.0);
    $this.$font = $font;
    $this.$integer0 = $integer;
    $pageCount = $font.$regions1.$size1;
    if (!$pageCount)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(458)));
    a: {
        $this.$pageVertices = $rt_createArray($rt_arraycls($rt_floatcls()), $pageCount);
        $this.$idx0 = $rt_createIntArray($pageCount);
        if ($pageCount > 1) {
            $this.$pageGlyphIndices = $rt_createArray(cbgu_IntArray, $pageCount);
            $i = 0;
            $n = $this.$pageGlyphIndices.data.length;
            while (true) {
                if ($i >= $n)
                    break a;
                $this.$pageGlyphIndices.data[$i] = cbgu_IntArray__init_();
                $i = $i + 1 | 0;
            }
        }
    }
    $this.$tempGlyphCount = $rt_createIntArray($pageCount);
}
function cbggg_BitmapFontCache_draw($this, $spriteBatch) {
    var $regions, $j, $n, $vertices;
    $regions = $this.$font.$getRegions();
    $j = 0;
    $n = $this.$pageVertices.data.length;
    while ($j < $n) {
        if ($this.$idx0.data[$j] > 0) {
            $vertices = $this.$pageVertices.data[$j];
            $spriteBatch.$draw3(($regions.$get($j)).$getTexture(), $vertices, 0, $this.$idx0.data[$j]);
        }
        $j = $j + 1 | 0;
    }
}
function cbggg_BitmapFontCache_clear($this) {
    var $i, $n;
    $this.$x1 = 0.0;
    $this.$y1 = 0.0;
    cbgu_Pools_freeAll($this.$pooledLayouts, 1);
    $this.$pooledLayouts.$clear();
    $this.$layouts.$clear();
    $i = 0;
    $n = $this.$idx0.data.length;
    while ($i < $n) {
        if ($this.$pageGlyphIndices !== null)
            $this.$pageGlyphIndices.data[$i].$clear();
        $this.$idx0.data[$i] = 0;
        $i = $i + 1 | 0;
    }
}
function cbggg_BitmapFontCache_requireGlyphs($this, $layout) {
    var $newGlyphCount, $i, $n, $tempGlyphCount, var$6, $n_0, $glyphs, $ii, $nn, var$11;
    a: {
        if ($this.$pageVertices.data.length == 1) {
            $newGlyphCount = 0;
            $i = 0;
            $n = $layout.$runs.$size1;
            while ($i < $n) {
                $newGlyphCount = $newGlyphCount + ($layout.$runs.$get($i)).$glyphs1.$size1 | 0;
                $i = $i + 1 | 0;
            }
            cbggg_BitmapFontCache_requirePageGlyphs($this, 0, $newGlyphCount);
        } else {
            $tempGlyphCount = $this.$tempGlyphCount;
            var$6 = $tempGlyphCount.data;
            $i = 0;
            $n = var$6.length;
            while ($i < $n) {
                var$6[$i] = 0;
                $i = $i + 1 | 0;
            }
            $i = 0;
            $n_0 = $layout.$runs.$size1;
            while ($i < $n_0) {
                $glyphs = ($layout.$runs.$get($i)).$glyphs1;
                $ii = 0;
                $nn = $glyphs.$size1;
                while ($ii < $nn) {
                    var$11 = ($glyphs.$get($ii)).$page;
                    var$6[var$11] = var$6[var$11] + 1 | 0;
                    $ii = $ii + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
            $i = 0;
            while (true) {
                if ($i >= $n)
                    break a;
                cbggg_BitmapFontCache_requirePageGlyphs($this, $i, var$6[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbggg_BitmapFontCache_requirePageGlyphs($this, $page, $glyphCount) {
    var $vertexCount, $vertices, $newVertices;
    if ($this.$pageGlyphIndices !== null && $glyphCount > $this.$pageGlyphIndices.data[$page].$items0.data.length)
        $this.$pageGlyphIndices.data[$page].$ensureCapacity0($glyphCount - $this.$pageGlyphIndices.data[$page].$size11 | 0);
    $vertexCount = $this.$idx0.data[$page] + ($glyphCount * 20 | 0) | 0;
    $vertices = $this.$pageVertices.data[$page];
    if ($vertices === null)
        $this.$pageVertices.data[$page] = $rt_createFloatArray($vertexCount);
    else if ($vertices.data.length < $vertexCount) {
        $newVertices = $rt_createFloatArray($vertexCount);
        jl_System_arraycopy($vertices, 0, $newVertices, 0, $this.$idx0.data[$page]);
        $this.$pageVertices.data[$page] = $newVertices;
    }
}
function cbggg_BitmapFontCache_addToCache($this, $layout, $x, $y) {
    var $pageCount, $newPageVertices, $newIdx, $newPageGlyphIndices, $i, $n, $run, $glyphs, $xAdvances, $color, $gx, $gy, $ii, $nn, $glyph;
    $pageCount = $this.$font.$regions1.$size1;
    if ($this.$pageVertices.data.length < $pageCount) {
        $newPageVertices = $rt_createArray($rt_arraycls($rt_floatcls()), $pageCount);
        jl_System_arraycopy($this.$pageVertices, 0, $newPageVertices, 0, $this.$pageVertices.data.length);
        $this.$pageVertices = $newPageVertices;
        $newIdx = $rt_createIntArray($pageCount);
        jl_System_arraycopy($this.$idx0, 0, $newIdx, 0, $this.$idx0.data.length);
        $this.$idx0 = $newIdx;
        $newPageGlyphIndices = $rt_createArray(cbgu_IntArray, $pageCount);
        $i = 0;
        if ($this.$pageGlyphIndices !== null) {
            $i = $this.$pageGlyphIndices.data.length;
            jl_System_arraycopy($this.$pageGlyphIndices, 0, $newPageGlyphIndices, 0, $this.$pageGlyphIndices.data.length);
        }
        while ($i < $pageCount) {
            $newPageGlyphIndices.data[$i] = cbgu_IntArray__init_();
            $i = $i + 1 | 0;
        }
        $this.$pageGlyphIndices = $newPageGlyphIndices;
        $this.$tempGlyphCount = $rt_createIntArray($pageCount);
    }
    $this.$layouts.$add3($layout);
    cbggg_BitmapFontCache_requireGlyphs($this, $layout);
    $i = 0;
    $n = $layout.$runs.$size1;
    while ($i < $n) {
        $run = $layout.$runs.$get($i);
        $glyphs = $run.$glyphs1;
        $xAdvances = $run.$xAdvances;
        $color = $run.$color3.$toFloatBits();
        $gx = $x + $run.$x2;
        $gy = $y + $run.$y2;
        $ii = 0;
        $nn = $glyphs.$size1;
        while ($ii < $nn) {
            $glyph = $glyphs.$get($ii);
            $gx = $gx + $xAdvances.$get5($ii);
            cbggg_BitmapFontCache_addGlyph($this, $glyph, $gx, $gy, $color);
            $ii = $ii + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    cbgg_Color_$callClinit();
    $this.$currentTint = cbgg_Color_WHITE_FLOAT_BITS;
}
function cbggg_BitmapFontCache_addGlyph($this, $glyph, $x, $y, $color) {
    var $scaleX, $scaleY, var$7, var$8, $width, $height, $u, $u2, $v, $v2, $x2, $y2, $page, $idx, var$19, var$20, var$21, $vertices, var$23, var$24;
    $scaleX = $this.$font.$data3.$scaleX;
    $scaleY = $this.$font.$data3.$scaleY;
    var$7 = $x + $glyph.$xoffset * $scaleX;
    var$8 = $y + $glyph.$yoffset * $scaleY;
    $width = $glyph.$width2 * $scaleX;
    $height = $glyph.$height2 * $scaleY;
    $u = $glyph.$u;
    $u2 = $glyph.$u2;
    $v = $glyph.$v;
    $v2 = $glyph.$v2;
    if ($this.$integer0) {
        var$7 = jl_Math_round(var$7);
        var$8 = jl_Math_round(var$8);
        $width = jl_Math_round($width);
        $height = jl_Math_round($height);
    }
    $x2 = var$7 + $width;
    $y2 = var$8 + $height;
    $page = $glyph.$page;
    $idx = $this.$idx0.data[$page];
    var$19 = $this.$idx0.data;
    var$19[$page] = var$19[$page] + 20 | 0;
    if ($this.$pageGlyphIndices !== null) {
        var$20 = $this.$pageGlyphIndices.data[$page];
        var$21 = $this.$glyphCount;
        $this.$glyphCount = var$21 + 1 | 0;
        var$20.$add7(var$21);
    }
    $vertices = $this.$pageVertices.data[$page];
    var$19 = $vertices.data;
    var$23 = $idx + 1 | 0;
    var$19[$idx] = var$7;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = var$8;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $color;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $u;
    var$24 = var$21 + 1 | 0;
    var$19[var$21] = $v;
    var$23 = var$24 + 1 | 0;
    var$19[var$24] = var$7;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $y2;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $color;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $u;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $v2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $x2;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $y2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $color;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $u2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $v2;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $x2;
    var$24 = var$23 + 1 | 0;
    var$19[var$23] = var$8;
    var$21 = var$24 + 1 | 0;
    var$19[var$24] = $color;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $u2;
    var$19[var$23] = $v;
}
function cbggg_BitmapFontCache_addText($this, $str, $x, $y) {
    return $this.$addText0($str, $x, $y, 0, $str.$length(), 0.0, 8, 0, null);
}
function cbggg_BitmapFontCache_addText0($this, $str, $x, $y, $start, $end, $targetWidth, $halign, $wrap, $truncate) {
    var $layout;
    $layout = cbgu_Pools_obtain($rt_cls(cbggg_GlyphLayout));
    $this.$pooledLayouts.$add3($layout);
    $layout.$setText($this.$font, $str, $start, $end, $this.$color2, $targetWidth, $halign, $wrap, $truncate);
    $this.$addText1($layout, $x, $y);
    return $layout;
}
function cbggg_BitmapFontCache_addText1($this, $layout, $x, $y) {
    cbggg_BitmapFontCache_addToCache($this, $layout, $x, $y + $this.$font.$data3.$ascent);
}
function cbggg_BitmapFontCache__clinit_() {
    cbggg_BitmapFontCache_tempColor = cbgg_Color__init_3(1.0, 1.0, 1.0, 1.0);
}
function jur_CharClass$13() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz3 = null;
    a.$this$026 = null;
}
function jur_CharClass$13__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$13();
    jur_CharClass$13__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$13__init_0($this, $this$0, var$2) {
    $this.$this$026 = $this$0;
    $this.$val$clazz3 = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$13_contains($this, $ch) {
    return $this.$val$clazz3.$contains($ch);
}
function cbggg_PixmapPacker() {
    var a = this; jl_Object.call(a);
    a.$packToTexture = 0;
    a.$disposed = 0;
    a.$pageWidth = 0;
    a.$pageHeight = 0;
    a.$pageFormat = null;
    a.$padding = 0;
    a.$duplicateBorder = 0;
    a.$stripWhitespaceX = 0;
    a.$stripWhitespaceY = 0;
    a.$alphaThreshold = 0;
    a.$transparentColor = null;
    a.$pages = null;
    a.$packStrategy = null;
    a.$c = null;
}
var cbggg_PixmapPacker_indexPattern = null;
function cbggg_PixmapPacker_$callClinit() {
    cbggg_PixmapPacker_$callClinit = $rt_eraseClinit(cbggg_PixmapPacker);
    cbggg_PixmapPacker__clinit_();
}
function cbggg_PixmapPacker__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cbggg_PixmapPacker();
    cbggg_PixmapPacker__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cbggg_PixmapPacker__init_2(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new cbggg_PixmapPacker();
    cbggg_PixmapPacker__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function cbggg_PixmapPacker__init_3(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new cbggg_PixmapPacker();
    cbggg_PixmapPacker__init_4(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function cbggg_PixmapPacker__init_($this, $pageWidth, $pageHeight, $pageFormat, $padding, $duplicateBorder) {
    cbggg_PixmapPacker_$callClinit();
    cbggg_PixmapPacker__init_4($this, $pageWidth, $pageHeight, $pageFormat, $padding, $duplicateBorder, 0, 0, cbggg_PixmapPacker$GuillotineStrategy__init_());
}
function cbggg_PixmapPacker__init_0($this, $pageWidth, $pageHeight, $pageFormat, $padding, $duplicateBorder, $packStrategy) {
    cbggg_PixmapPacker_$callClinit();
    cbggg_PixmapPacker__init_4($this, $pageWidth, $pageHeight, $pageFormat, $padding, $duplicateBorder, 0, 0, $packStrategy);
}
function cbggg_PixmapPacker__init_4($this, $pageWidth, $pageHeight, $pageFormat, $padding, $duplicateBorder, $stripWhitespaceX, $stripWhitespaceY, $packStrategy) {
    cbggg_PixmapPacker_$callClinit();
    jl_Object__init_0($this);
    $this.$transparentColor = cbgg_Color__init_3(0.0, 0.0, 0.0, 0.0);
    $this.$pages = cbgu_Array__init_();
    $this.$c = cbgg_Color__init_();
    $this.$pageWidth = $pageWidth;
    $this.$pageHeight = $pageHeight;
    $this.$pageFormat = $pageFormat;
    $this.$padding = $padding;
    $this.$duplicateBorder = $duplicateBorder;
    $this.$stripWhitespaceX = $stripWhitespaceX;
    $this.$stripWhitespaceY = $stripWhitespaceY;
    $this.$packStrategy = $packStrategy;
}
function cbggg_PixmapPacker_pack($this, $image) {
    jl_Object_monitorEnterSync($this);
    try {
        return $this.$pack0(null, $image);
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function cbggg_PixmapPacker_pack0($this, $name, $image) {
    var $pixmapToDispose, $rect, var$5, $originalWidth, $originalHeight, $top, $bottom, $y, $x, $pixel, $alpha, $left, $right, $newWidth, $newHeight, $page, $rectX, $rectY, $rectWidth, $rectHeight, var$23, var$24, var$25, var$26, var$27, $imageWidth, $imageHeight, var$30, var$31, var$32, var$33;
    jl_Object_monitorEnterSync($this);
    try {
        if ($this.$disposed)
            return null;
        if ($name !== null && $this.$getRect($name) !== null)
            $rt_throw(cbgu_GdxRuntimeException__init_((((jl_StringBuilder__init_()).$append($rt_s(459))).$append($name)).$toString()));
        $pixmapToDispose = null;
        if ($name !== null && $name.$endsWith($rt_s(460))) {
            $rect = cbggg_PixmapPacker$PixmapPackerRectangle__init_(0, 0, $image.$getWidth() - 2 | 0, $image.$getHeight() - 2 | 0);
            var$5 = cbgg_Pixmap__init_($image.$getWidth() - 2 | 0, $image.$getHeight() - 2 | 0, $image.$getFormat());
            cbgg_Pixmap$Blending_$callClinit();
            var$5.$setBlending(cbgg_Pixmap$Blending_None);
            $rect.$splits = cbggg_PixmapPacker_getSplits($this, $image);
            $rect.$pads = cbggg_PixmapPacker_getPads($this, $image, $rect.$splits);
            var$5.$drawPixmap($image, 0, 0, 1, 1, $image.$getWidth() - 1 | 0, $image.$getHeight() - 1 | 0);
            $name = ($name.$split0($rt_s(461))).data[0];
            $pixmapToDispose = var$5;
        } else if (!$this.$stripWhitespaceX && !$this.$stripWhitespaceY) {
            $rect = cbggg_PixmapPacker$PixmapPackerRectangle__init_(0, 0, $image.$getWidth(), $image.$getHeight());
            var$5 = $image;
        } else {
            a: {
                $originalWidth = $image.$getWidth();
                $originalHeight = $image.$getHeight();
                $top = 0;
                $bottom = $image.$getHeight();
                if ($this.$stripWhitespaceY) {
                    $y = 0;
                    b: {
                        c: while (true) {
                            if ($y >= $image.$getHeight())
                                break b;
                            $x = 0;
                            while ($x < $image.$getWidth()) {
                                $pixel = $image.$getPixel($x, $y);
                                $alpha = $pixel & 255;
                                if ($alpha > $this.$alphaThreshold)
                                    break c;
                                $x = $x + 1 | 0;
                            }
                            $top = $top + 1 | 0;
                            $y = $y + 1 | 0;
                        }
                    }
                    $y = $image.$getHeight();
                    while (true) {
                        $y = $y + (-1) | 0;
                        if ($y < $top)
                            break;
                        $x = 0;
                        while ($x < $image.$getWidth()) {
                            $pixel = $image.$getPixel($x, $y);
                            $alpha = $pixel & 255;
                            if ($alpha > $this.$alphaThreshold)
                                break a;
                            $x = $x + 1 | 0;
                        }
                        $bottom = $bottom + (-1) | 0;
                    }
                }
            }
            d: {
                $left = 0;
                $right = $image.$getWidth();
                if ($this.$stripWhitespaceX) {
                    $x = 0;
                    e: {
                        f: while (true) {
                            if ($x >= $image.$getWidth())
                                break e;
                            $y = $top;
                            while ($y < $bottom) {
                                $pixel = $image.$getPixel($x, $y);
                                $alpha = $pixel & 255;
                                if ($alpha > $this.$alphaThreshold)
                                    break f;
                                $y = $y + 1 | 0;
                            }
                            $left = $left + 1 | 0;
                            $x = $x + 1 | 0;
                        }
                    }
                    $x = $image.$getWidth();
                    while (true) {
                        $x = $x + (-1) | 0;
                        if ($x < $left)
                            break;
                        $y = $top;
                        while ($y < $bottom) {
                            $pixel = $image.$getPixel($x, $y);
                            $alpha = $pixel & 255;
                            if ($alpha > $this.$alphaThreshold)
                                break d;
                            $y = $y + 1 | 0;
                        }
                        $right = $right + (-1) | 0;
                    }
                }
            }
            $newWidth = $right - $left | 0;
            $newHeight = $bottom - $top | 0;
            var$5 = cbgg_Pixmap__init_($newWidth, $newHeight, $image.$getFormat());
            cbgg_Pixmap$Blending_$callClinit();
            var$5.$setBlending(cbgg_Pixmap$Blending_None);
            var$5.$drawPixmap($image, 0, 0, $left, $top, $newWidth, $newHeight);
            $rect = cbggg_PixmapPacker$PixmapPackerRectangle__init_0(0, 0, $newWidth, $newHeight, $left, $top, $originalWidth, $originalHeight);
            $pixmapToDispose = var$5;
        }
        if ($rect.$getWidth0() <= $this.$pageWidth && $rect.$getHeight0() <= $this.$pageHeight) {
            $page = $this.$packStrategy.$pack1($this, $name, $rect);
            if ($name !== null) {
                $page.$rects.$put1($name, $rect);
                $page.$addedRects.$add3($name);
            }
            $rectX = $rect.$x | 0;
            $rectY = $rect.$y | 0;
            $rectWidth = $rect.$width | 0;
            $rectHeight = $rect.$height | 0;
            if ($this.$packToTexture && !$this.$duplicateBorder && $page.$texture !== null && !$page.$dirty) {
                $page.$texture.$bind();
                var$23 = cbg_Gdx_gl;
                var$24 = $page.$texture.$glTarget;
                var$25 = var$5.$getGLFormat();
                var$26 = var$5.$getGLType();
                var$27 = var$5.$getPixels();
                var$23.$glTexSubImage2D(var$24, 0, $rectX, $rectY, $rectWidth, $rectHeight, var$25, var$26, var$27);
            } else
                $page.$dirty = 1;
            $page.$image.$drawPixmap0(var$5, $rectX, $rectY);
            if ($this.$duplicateBorder) {
                $imageWidth = var$5.$getWidth();
                $imageHeight = var$5.$getHeight();
                var$23 = $page.$image;
                var$30 = $rectX - 1 | 0;
                var$31 = $rectY - 1 | 0;
                var$23.$drawPixmap1(var$5, 0, 0, 1, 1, var$30, var$31, 1, 1);
                var$23 = $page.$image;
                var$24 = $imageWidth - 1 | 0;
                var$32 = $rectX + $rectWidth | 0;
                var$23.$drawPixmap1(var$5, var$24, 0, 1, 1, var$32, var$31, 1, 1);
                var$23 = $page.$image;
                var$25 = $imageHeight - 1 | 0;
                var$33 = $rectY + $rectHeight | 0;
                var$23.$drawPixmap1(var$5, 0, var$25, 1, 1, var$30, var$33, 1, 1);
                $page.$image.$drawPixmap1(var$5, var$24, var$25, 1, 1, var$32, var$33, 1, 1);
                $page.$image.$drawPixmap1(var$5, 0, 0, $imageWidth, 1, $rectX, var$31, $rectWidth, 1);
                $page.$image.$drawPixmap1(var$5, 0, var$25, $imageWidth, 1, $rectX, var$33, $rectWidth, 1);
                $page.$image.$drawPixmap1(var$5, 0, 0, 1, $imageHeight, var$30, $rectY, 1, $rectHeight);
                $page.$image.$drawPixmap1(var$5, var$24, 0, 1, $imageHeight, var$32, $rectY, 1, $rectHeight);
            }
            if ($pixmapToDispose !== null)
                $pixmapToDispose.$dispose();
            return $rect;
        }
        if ($name === null)
            $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(462)));
        $rt_throw(cbgu_GdxRuntimeException__init_((((jl_StringBuilder__init_()).$append($rt_s(463))).$append($name)).$toString()));
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function cbggg_PixmapPacker_getPages($this) {
    return $this.$pages;
}
function cbggg_PixmapPacker_getRect($this, $name) {
    var var$2, $page, $rect;
    jl_Object_monitorEnterSync($this);
    try {
        var$2 = $this.$pages.$iterator0();
        while (true) {
            if (!var$2.$hasNext())
                return null;
            $page = var$2.$next0();
            $rect = $page.$rects.$get1($name);
            if ($rect !== null)
                break;
        }
        return $rect;
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function cbggg_PixmapPacker_dispose($this) {
    var var$1, $page;
    jl_Object_monitorEnterSync($this);
    try {
        var$1 = $this.$pages.$iterator0();
        while (var$1.$hasNext()) {
            $page = var$1.$next0();
            if ($page.$texture === null)
                $page.$image.$dispose();
        }
        $this.$disposed = 1;
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function cbggg_PixmapPacker_updateTextureRegions($this, $regions, $minFilter, $magFilter, $useMipMaps) {
    jl_Object_monitorEnterSync($this);
    try {
        $this.$updatePageTextures($minFilter, $magFilter, $useMipMaps);
        while ($regions.$size1 < $this.$pages.$size1) {
            $regions.$add3(cbggg_TextureRegion__init_(($this.$pages.$get($regions.$size1)).$texture));
        }
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function cbggg_PixmapPacker_updatePageTextures($this, $minFilter, $magFilter, $useMipMaps) {
    var var$4, $page;
    jl_Object_monitorEnterSync($this);
    try {
        var$4 = $this.$pages.$iterator0();
        while (var$4.$hasNext()) {
            $page = var$4.$next0();
            $page.$updateTexture($minFilter, $magFilter, $useMipMaps);
        }
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function cbggg_PixmapPacker_setPackToTexture($this, $packToTexture) {
    $this.$packToTexture = $packToTexture;
}
function cbggg_PixmapPacker_getTransparentColor($this) {
    return $this.$transparentColor;
}
function cbggg_PixmapPacker_setTransparentColor($this, $color) {
    $this.$transparentColor.$set1($color);
}
function cbggg_PixmapPacker_getSplits($this, $raster) {
    var $startX, $endX, $startY, $endY, var$6, var$7;
    $startX = cbggg_PixmapPacker_getSplitPoint($this, $raster, 1, 0, 1, 1);
    $endX = cbggg_PixmapPacker_getSplitPoint($this, $raster, $startX, 0, 0, 1);
    $startY = cbggg_PixmapPacker_getSplitPoint($this, $raster, 0, 1, 1, 0);
    $endY = cbggg_PixmapPacker_getSplitPoint($this, $raster, 0, $startY, 0, 0);
    cbggg_PixmapPacker_getSplitPoint($this, $raster, $endX + 1 | 0, 0, 1, 1);
    cbggg_PixmapPacker_getSplitPoint($this, $raster, 0, $endY + 1 | 0, 1, 0);
    if (!$startX && !$endX && !$startY && !$endY)
        return null;
    if (!$startX)
        var$6 = $raster.$getWidth() - 2 | 0;
    else {
        $startX = $startX + (-1) | 0;
        var$6 = ($raster.$getWidth() - 2 | 0) - ($endX - 1 | 0) | 0;
    }
    if (!$startY)
        var$7 = $raster.$getHeight() - 2 | 0;
    else {
        $startY = $startY + (-1) | 0;
        var$7 = ($raster.$getHeight() - 2 | 0) - ($endY - 1 | 0) | 0;
    }
    return $rt_createIntArrayFromData([$startX, var$6, $startY, var$7]);
}
function cbggg_PixmapPacker_getPads($this, $raster, $splits) {
    var $bottom, $right, $startX, $startY, $endX, $endY, var$9, var$10, $pads;
    $bottom = $raster.$getHeight() - 1 | 0;
    $right = $raster.$getWidth() - 1 | 0;
    $startX = cbggg_PixmapPacker_getSplitPoint($this, $raster, 1, $bottom, 1, 1);
    $startY = cbggg_PixmapPacker_getSplitPoint($this, $raster, $right, 1, 1, 0);
    $endX = 0;
    $endY = 0;
    if ($startX)
        $endX = cbggg_PixmapPacker_getSplitPoint($this, $raster, $startX + 1 | 0, $bottom, 0, 1);
    if ($startY)
        $endY = cbggg_PixmapPacker_getSplitPoint($this, $raster, $right, $startY + 1 | 0, 0, 0);
    cbggg_PixmapPacker_getSplitPoint($this, $raster, $endX + 1 | 0, $bottom, 1, 1);
    cbggg_PixmapPacker_getSplitPoint($this, $raster, $right, $endY + 1 | 0, 1, 0);
    if (!$startX && !$endX && !$startY && !$endY)
        return null;
    if (!$startX && !$endX) {
        $startX = (-1);
        var$9 = (-1);
    } else if ($startX <= 0)
        var$9 = $raster.$getWidth() - 2 | 0;
    else {
        $startX = $startX + (-1) | 0;
        var$9 = ($raster.$getWidth() - 2 | 0) - ($endX - 1 | 0) | 0;
    }
    if (!$startY && !$endY) {
        $startY = (-1);
        var$10 = (-1);
    } else if ($startY <= 0)
        var$10 = $raster.$getHeight() - 2 | 0;
    else {
        $startY = $startY + (-1) | 0;
        var$10 = ($raster.$getHeight() - 2 | 0) - ($endY - 1 | 0) | 0;
    }
    $pads = $rt_createIntArrayFromData([$startX, var$9, $startY, var$10]);
    if ($splits !== null && ju_Arrays_equals0($pads, $splits))
        return null;
    return $pads;
}
function cbggg_PixmapPacker_getSplitPoint($this, $raster, $startX, $y, $startPoint, $xAxis) {
    var $rgba, $next, $end, $breakA, var$10, $colint;
    $rgba = $rt_createIntArray(4);
    $next = !$xAxis ? $y : $startX;
    $end = !$xAxis ? $raster.$getHeight() : $raster.$getWidth();
    $breakA = !$startPoint ? 0 : 255;
    while (true) {
        if ($next == $end)
            return 0;
        if (!$xAxis)
            $y = $next;
        else
            $startX = $next;
        var$10 = $rgba.data;
        $colint = $raster.$getPixel($startX, $y);
        $this.$c.$set9($colint);
        var$10[0] = $this.$c.$r0 * 255.0 | 0;
        var$10[1] = $this.$c.$g0 * 255.0 | 0;
        var$10[2] = $this.$c.$b0 * 255.0 | 0;
        var$10[3] = $this.$c.$a0 * 255.0 | 0;
        if (var$10[3] == $breakA)
            break;
        if (!$startPoint && !(!var$10[0] && !var$10[1] && !var$10[2] && var$10[3] == 255))
            (jl_System_out()).$println1((((((((jl_StringBuilder__init_()).$append0($startX)).$append($rt_s(464))).$append0($y)).$append($rt_s(382))).$append9($rgba)).$append($rt_s(382))).$toString());
        $next = $next + 1 | 0;
    }
    return $next;
}
function cbggg_PixmapPacker__clinit_() {
    cbggg_PixmapPacker_indexPattern = jur_Pattern_compile($rt_s(465));
}
function jur_CharClass$12() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz4 = null;
    a.$this$027 = null;
}
function jur_CharClass$12__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$12();
    jur_CharClass$12__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$12__init_0($this, $this$0, var$2) {
    $this.$this$027 = $this$0;
    $this.$val$clazz4 = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$12_contains($this, $ch) {
    return $this.$val$clazz4.$contains($ch) ? 0 : 1;
}
function jur_CharClass$11() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt5 = 0;
    a.$val$nb1 = null;
    a.$val$clazz5 = null;
    a.$this$028 = null;
}
function jur_CharClass$11__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$11();
    jur_CharClass$11__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$11__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$028 = $this$0;
    $this.$val$curAlt5 = var$2;
    $this.$val$nb1 = var$3;
    $this.$val$clazz5 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$11_contains($this, $ch) {
    return !($this.$val$curAlt5 ^ $this.$val$nb1.$contains($ch)) && !$this.$val$clazz5.$contains($ch) ? 0 : 1;
}
var otci_Base46 = $rt_classWithoutFields();
function otci_Base46_decodeUnsigned($seq) {
    var $number, $pos, var$4, var$5, $digit, $hasMore;
    $number = 0;
    $pos = 1;
    while (true) {
        var$4 = $seq.$characters1.data;
        var$5 = $seq.$pointer;
        $seq.$pointer = var$5 + 1 | 0;
        $digit = otci_Base46_decodeDigit(var$4[var$5]);
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
        $pos = $pos * 46 | 0;
        if (!$hasMore)
            break;
    }
    return $number;
}
function otci_Base46_decode($seq) {
    var $number, $result;
    $number = otci_Base46_decodeUnsigned($seq);
    $result = $number / 2 | 0;
    if ($number % 2 | 0)
        $result =  -$result | 0;
    return $result;
}
function otci_Base46_decodeDigit($c) {
    if ($c < 34)
        return $c - 32 | 0;
    if ($c >= 92)
        return ($c - 32 | 0) - 2 | 0;
    return ($c - 32 | 0) - 1 | 0;
}
function jur_CharClass$10() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt6 = 0;
    a.$val$nb2 = null;
    a.$val$clazz6 = null;
    a.$this$029 = null;
}
function jur_CharClass$10__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$10();
    jur_CharClass$10__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$10__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$029 = $this$0;
    $this.$val$curAlt6 = var$2;
    $this.$val$nb2 = var$3;
    $this.$val$clazz6 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$10_contains($this, $ch) {
    return !($this.$val$curAlt6 ^ $this.$val$nb2.$contains($ch)) && !$this.$val$clazz6.$contains($ch) ? 1 : 0;
}
var ju_GenericEnumSet = $rt_classWithoutFields(ju_EnumSet);
function ju_GenericEnumSet_getConstants($cls) {
    return otp_Platform_getEnumConstants($cls.$getPlatformClass());
}
function jur_CharClass$17() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt7 = 0;
    a.$val$nb3 = null;
    a.$val$clazz7 = null;
    a.$this$030 = null;
}
function jur_CharClass$17__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$17();
    jur_CharClass$17__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$17__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$030 = $this$0;
    $this.$val$curAlt7 = var$2;
    $this.$val$nb3 = var$3;
    $this.$val$clazz7 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$17_contains($this, $ch) {
    return $this.$val$curAlt7 ^ $this.$val$nb3.$contains($ch) && $this.$val$clazz7.$contains($ch) ? 1 : 0;
}
function jur_UCISequenceSet() {
    jur_LeafSet.call(this);
    this.$string2 = null;
}
function jur_UCISequenceSet__init_(var_0) {
    var var_1 = new jur_UCISequenceSet();
    jur_UCISequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISequenceSet__init_0($this, $substring) {
    var $res, $i;
    jur_LeafSet__init_0($this);
    $res = jl_StringBuilder__init_();
    $i = 0;
    while ($i < $substring.$length()) {
        $res.$append8(jl_Character_toLowerCase(jl_Character_toUpperCase($substring.$charAt($i))));
        $i = $i + 1 | 0;
    }
    $this.$string2 = $res.$toString();
    $this.$charCount = $res.$length();
}
function jur_UCISequenceSet_accepts($this, $strIndex, $testString) {
    var $i;
    $i = 0;
    while (true) {
        if ($i >= $this.$string2.$length())
            return $this.$string2.$length();
        if ($this.$string2.$charAt($i) != jl_Character_toLowerCase(jl_Character_toUpperCase($testString.$charAt($strIndex + $i | 0))))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_CharClass$16() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt8 = 0;
    a.$val$nb4 = null;
    a.$val$clazz8 = null;
    a.$this$031 = null;
}
function jur_CharClass$16__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$16();
    jur_CharClass$16__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$16__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$031 = $this$0;
    $this.$val$curAlt8 = var$2;
    $this.$val$nb4 = var$3;
    $this.$val$clazz8 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$16_contains($this, $ch) {
    return $this.$val$curAlt8 ^ $this.$val$nb4.$contains($ch) && $this.$val$clazz8.$contains($ch) ? 0 : 1;
}
function jur_CharClass$15() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz9 = null;
    a.$val$curAlt9 = 0;
    a.$this$032 = null;
}
function jur_CharClass$15__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$15();
    jur_CharClass$15__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$15__init_0($this, $this$0, var$2, var$3) {
    $this.$this$032 = $this$0;
    $this.$val$clazz9 = var$2;
    $this.$val$curAlt9 = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$15_contains($this, $ch) {
    return $this.$val$clazz9.$contains($ch) && $this.$val$curAlt9 ^ $this.$this$032.$bits.$get8($ch) ? 1 : 0;
}
function jur_AbstractCharClass$LazyJavaDefined$1() {
    jur_AbstractCharClass.call(this);
    this.$this$033 = null;
}
function jur_AbstractCharClass$LazyJavaDefined$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaDefined$1();
    jur_AbstractCharClass$LazyJavaDefined$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaDefined$1__init_0($this, $this$0) {
    $this.$this$033 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaDefined$1_contains($this, $ch) {
    return jl_Character_isDefined($ch);
}
function jur_CharClass$14() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz10 = null;
    a.$val$curAlt10 = 0;
    a.$this$034 = null;
}
function jur_CharClass$14__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$14();
    jur_CharClass$14__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$14__init_0($this, $this$0, var$2, var$3) {
    $this.$this$034 = $this$0;
    $this.$val$clazz10 = var$2;
    $this.$val$curAlt10 = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$14_contains($this, $ch) {
    return $this.$val$clazz10.$contains($ch) && $this.$val$curAlt10 ^ $this.$this$034.$bits.$get8($ch) ? 0 : 1;
}
var otjt_Int8Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var jl_StringBuilder = $rt_classWithoutFields(jl_AbstractStringBuilder);
function jl_StringBuilder__init_0(var_0) {
    var var_1 = new jl_StringBuilder();
    jl_StringBuilder__init_1(var_1, var_0);
    return var_1;
}
function jl_StringBuilder__init_() {
    var var_0 = new jl_StringBuilder();
    jl_StringBuilder__init_2(var_0);
    return var_0;
}
function jl_StringBuilder__init_1($this, $capacity) {
    jl_AbstractStringBuilder__init_2($this, $capacity);
}
function jl_StringBuilder__init_2($this) {
    jl_AbstractStringBuilder__init_1($this);
}
function jl_StringBuilder_append($this, $obj) {
    jl_AbstractStringBuilder_append($this, $obj);
    return $this;
}
function jl_StringBuilder_append0($this, $string) {
    jl_AbstractStringBuilder_append0($this, $string);
    return $this;
}
function jl_StringBuilder_append1($this, $value) {
    jl_AbstractStringBuilder_append1($this, $value);
    return $this;
}
function jl_StringBuilder_append2($this, $value) {
    jl_AbstractStringBuilder_append3($this, $value);
    return $this;
}
function jl_StringBuilder_append3($this, $value) {
    jl_AbstractStringBuilder_append4($this, $value);
    return $this;
}
function jl_StringBuilder_append4($this, $c) {
    jl_AbstractStringBuilder_append5($this, $c);
    return $this;
}
function jl_StringBuilder_append5($this, $chars, $offset, $len) {
    jl_AbstractStringBuilder_append6($this, $chars, $offset, $len);
    return $this;
}
function jl_StringBuilder_append6($this, $chars) {
    jl_AbstractStringBuilder_append7($this, $chars);
    return $this;
}
function jl_StringBuilder_insert($this, $target, $value) {
    jl_AbstractStringBuilder_insert1($this, $target, $value);
    return $this;
}
function jl_StringBuilder_insert0($this, $target, $value) {
    jl_AbstractStringBuilder_insert3($this, $target, $value);
    return $this;
}
function jl_StringBuilder_insert1($this, $index, $chars, $offset, $len) {
    jl_AbstractStringBuilder_insert6($this, $index, $chars, $offset, $len);
    return $this;
}
function jl_StringBuilder_insert2($this, $index, $obj) {
    jl_AbstractStringBuilder_insert5($this, $index, $obj);
    return $this;
}
function jl_StringBuilder_insert3($this, $index, $c) {
    jl_AbstractStringBuilder_insert4($this, $index, $c);
    return $this;
}
function jl_StringBuilder_delete($this, $start, $end) {
    jl_AbstractStringBuilder_delete($this, $start, $end);
    return $this;
}
function jl_StringBuilder_deleteCharAt($this, $index) {
    jl_AbstractStringBuilder_deleteCharAt($this, $index);
    return $this;
}
function jl_StringBuilder_insert4($this, $index, $string) {
    jl_AbstractStringBuilder_insert($this, $index, $string);
    return $this;
}
function jl_StringBuilder_setLength($this, var$1) {
    jl_AbstractStringBuilder_setLength($this, var$1);
}
function jl_StringBuilder_getChars($this, var$1, var$2, var$3, var$4) {
    jl_AbstractStringBuilder_getChars($this, var$1, var$2, var$3, var$4);
}
function jl_StringBuilder_insert5($this, var$1, var$2, var$3, var$4) {
    return $this.$insert10(var$1, var$2, var$3, var$4);
}
function jl_StringBuilder_append7($this, var$1, var$2, var$3) {
    return $this.$append18(var$1, var$2, var$3);
}
function jl_StringBuilder_length($this) {
    return jl_AbstractStringBuilder_length($this);
}
function jl_StringBuilder_toString($this) {
    return jl_AbstractStringBuilder_toString($this);
}
function jl_StringBuilder_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuilder_insert6($this, var$1, var$2) {
    return $this.$insert11(var$1, var$2);
}
function jl_StringBuilder_insert7($this, var$1, var$2) {
    return $this.$insert12(var$1, var$2);
}
function jl_StringBuilder_insert8($this, var$1, var$2) {
    return $this.$insert13(var$1, var$2);
}
function jl_StringBuilder_insert9($this, var$1, var$2) {
    return $this.$insert14(var$1, var$2);
}
function jl_StringBuilder_insert10($this, var$1, var$2) {
    return $this.$insert15(var$1, var$2);
}
var cbgf_FileHandle = $rt_classWithoutFields();
function cbgf_FileHandle__init_() {
    var var_0 = new cbgf_FileHandle();
    cbgf_FileHandle__init_0(var_0);
    return var_0;
}
function cbgf_FileHandle__init_0($this) {
    jl_Object__init_0($this);
}
function cgxgbw_WebFileHandle() {
    var a = this; cbgf_FileHandle.call(a);
    a.$preloader = null;
    a.$file0 = null;
    a.$type4 = null;
}
function cgxgbw_WebFileHandle__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgbw_WebFileHandle();
    cgxgbw_WebFileHandle__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgbw_WebFileHandle__init_0($this, $preloader, $fileName, $type) {
    cbgf_FileHandle__init_0($this);
    cbg_Files$FileType_$callClinit();
    if ($type !== cbg_Files$FileType_Internal && $type !== cbg_Files$FileType_Classpath)
        $rt_throw(cbgu_GdxRuntimeException__init_(((((jl_StringBuilder__init_()).$append($rt_s(466))).$append9($type)).$append($rt_s(467))).$toString()));
    $this.$preloader = $preloader;
    $this.$file0 = cgxgbw_WebFileHandle_fixSlashes($fileName);
    $this.$type4 = $type;
}
function cgxgbw_WebFileHandle_path($this) {
    return $this.$file0;
}
function cgxgbw_WebFileHandle_name($this) {
    var $index;
    $index = $this.$file0.$lastIndexOf2(47);
    if ($index < 0)
        return $this.$file0;
    return $this.$file0.$substring0($index + 1 | 0);
}
function cgxgbw_WebFileHandle_nameWithoutExtension($this) {
    var $name, $dotIndex;
    $name = $this.$name5();
    $dotIndex = $name.$lastIndexOf2(46);
    if ($dotIndex == (-1))
        return $name;
    return $name.$substring(0, $dotIndex);
}
function cgxgbw_WebFileHandle_read($this) {
    var $in;
    $in = $this.$preloader.$read3($this.$file0);
    if ($in !== null)
        return $in;
    $rt_throw(cbgu_GdxRuntimeException__init_((((jl_StringBuilder__init_()).$append($this.$file0)).$append($rt_s(468))).$toString()));
}
function cgxgbw_WebFileHandle_length($this) {
    return $this.$preloader.$length4($this.$file0);
}
function cgxgbw_WebFileHandle_fixSlashes($path) {
    var var$2;
    var$2 = $path.$replace($rt_s(469), $rt_s(470));
    if (var$2.$endsWith($rt_s(470)))
        var$2 = var$2.$substring(0, var$2.$length() - 1 | 0);
    return var$2;
}
function jur_CompositeRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$withoutSurrogates = null;
    a.$withSurrogates = null;
}
function jur_CompositeRangeSet__init_(var_0, var_1) {
    var var_2 = new jur_CompositeRangeSet();
    jur_CompositeRangeSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CompositeRangeSet__init_0($this, $withoutSurrogates, $withSurrogates) {
    jur_JointSet__init_0($this);
    $this.$withoutSurrogates = $withoutSurrogates;
    $this.$withSurrogates = $withSurrogates;
}
function jur_CompositeRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$withoutSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$withSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return (-1);
}
function jur_CompositeRangeSet_setNext($this, $next) {
    $this.$next = $next;
    $this.$withSurrogates.$setNext($next);
    $this.$withoutSurrogates.$setNext($next);
}
function jur_CompositeRangeSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CompositeRangeSet_first($this, $set) {
    return 1;
}
var ju_ConcurrentModificationException = $rt_classWithoutFields(jl_RuntimeException);
function ju_ConcurrentModificationException__init_() {
    var var_0 = new ju_ConcurrentModificationException();
    ju_ConcurrentModificationException__init_0(var_0);
    return var_0;
}
function ju_ConcurrentModificationException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
var ju_Hashtable$1 = $rt_classWithoutFields();
function ju_Hashtable$1__init_() {
    var var_0 = new ju_Hashtable$1();
    ju_Hashtable$1__init_0(var_0);
    return var_0;
}
function ju_Hashtable$1__init_0($this) {
    jl_Object__init_0($this);
}
var ju_Hashtable$2 = $rt_classWithoutFields();
function ju_Hashtable$2__init_() {
    var var_0 = new ju_Hashtable$2();
    ju_Hashtable$2__init_0(var_0);
    return var_0;
}
function ju_Hashtable$2__init_0($this) {
    jl_Object__init_0($this);
}
var ju_Map$Entry = $rt_classWithoutFields(0);
function ju_MapEntry() {
    var a = this; jl_Object.call(a);
    a.$key0 = null;
    a.$value3 = null;
}
function ju_MapEntry__init_(var_0, var_1) {
    var var_2 = new ju_MapEntry();
    ju_MapEntry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_MapEntry__init_0($this, $theKey, $theValue) {
    jl_Object__init_0($this);
    $this.$key0 = $theKey;
    $this.$value3 = $theValue;
}
function ju_Hashtable$Entry() {
    var a = this; ju_MapEntry.call(a);
    a.$next1 = null;
    a.$hashcode = 0;
}
function ju_Hashtable$Entry__init_(var_0, var_1) {
    var var_2 = new ju_Hashtable$Entry();
    ju_Hashtable$Entry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_Hashtable$Entry__init_0($this, $theKey, $theValue) {
    ju_MapEntry__init_0($this, $theKey, $theValue);
    $this.$hashcode = $theKey.$hashCode0();
}
function ju_Hashtable$Entry_getKeyHash($this) {
    return $this.$key0.$hashCode0();
}
function ju_Hashtable$Entry_equalsKey($this, $aKey, $hash) {
    return $this.$hashcode == $aKey.$hashCode0() && $this.$key0.$equals($aKey) ? 1 : 0;
}
var jur_FinalSet = $rt_classWithoutFields(jur_FSet);
function jur_FinalSet__init_() {
    var var_0 = new jur_FinalSet();
    jur_FinalSet__init_0(var_0);
    return var_0;
}
function jur_FinalSet__init_0($this) {
    jur_FSet__init_0($this, 0);
}
function jur_FinalSet_matches($this, $stringIndex, $testString, $matchResult) {
    if ($matchResult.$mode0() != 1 && $stringIndex != $matchResult.$getRightBound())
        return (-1);
    $matchResult.$setValid();
    $matchResult.$setEnd(0, $stringIndex);
    return $stringIndex;
}
var jur_EmptySet = $rt_classWithoutFields(jur_LeafSet);
function jur_EmptySet__init_(var_0) {
    var var_1 = new jur_EmptySet();
    jur_EmptySet__init_0(var_1, var_0);
    return var_1;
}
function jur_EmptySet__init_0($this, $next) {
    jur_LeafSet__init_($this, $next);
    $this.$charCount = 0;
}
function jur_EmptySet_accepts($this, $stringIndex, $testString) {
    return 0;
}
function jur_EmptySet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startStr, var$6, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        var$6 = $rt_compare($stringIndex, $strLength);
        if (var$6 > 0)
            return (-1);
        if (var$6 < 0) {
            $low = $testString.$charAt($stringIndex);
            if (jl_Character_isLowSurrogate($low) && $stringIndex > $startStr) {
                $high = $testString.$charAt($stringIndex - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $stringIndex = $stringIndex + 1 | 0;
                    continue;
                }
            }
        }
        if ($this.$next.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
}
function jur_EmptySet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $strLength, $startStr, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($startSearch < $strLength) {
            $low = $testString.$charAt($startSearch);
            if (jl_Character_isLowSurrogate($low) && $startSearch > $startStr) {
                $high = $testString.$charAt($startSearch - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $startSearch = $startSearch + (-1) | 0;
                    continue;
                }
            }
        }
        if ($this.$next.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
}
function jur_EmptySet_hasConsumed($this, $mr) {
    return 0;
}
function cgxgetf_FreeTypePackTest$FontStyle() {
    jl_Enum.call(this);
    this.$path0 = null;
}
var cgxgetf_FreeTypePackTest$FontStyle_Regular = null;
var cgxgetf_FreeTypePackTest$FontStyle_Italic = null;
var cgxgetf_FreeTypePackTest$FontStyle_$VALUES = null;
function cgxgetf_FreeTypePackTest$FontStyle_$callClinit() {
    cgxgetf_FreeTypePackTest$FontStyle_$callClinit = $rt_eraseClinit(cgxgetf_FreeTypePackTest$FontStyle);
    cgxgetf_FreeTypePackTest$FontStyle__clinit_();
}
function cgxgetf_FreeTypePackTest$FontStyle__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgetf_FreeTypePackTest$FontStyle();
    cgxgetf_FreeTypePackTest$FontStyle__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgetf_FreeTypePackTest$FontStyle_values() {
    cgxgetf_FreeTypePackTest$FontStyle_$callClinit();
    return cgxgetf_FreeTypePackTest$FontStyle_$VALUES.$clone();
}
function cgxgetf_FreeTypePackTest$FontStyle__init_0($this, var$1, var$2, $path) {
    cgxgetf_FreeTypePackTest$FontStyle_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$path0 = $path;
}
function cgxgetf_FreeTypePackTest$FontStyle__clinit_() {
    cgxgetf_FreeTypePackTest$FontStyle_Regular = cgxgetf_FreeTypePackTest$FontStyle__init_($rt_s(471), 0, $rt_s(472));
    cgxgetf_FreeTypePackTest$FontStyle_Italic = cgxgetf_FreeTypePackTest$FontStyle__init_($rt_s(473), 1, $rt_s(474));
    cgxgetf_FreeTypePackTest$FontStyle_$VALUES = $rt_createArrayFromData(cgxgetf_FreeTypePackTest$FontStyle, [cgxgetf_FreeTypePackTest$FontStyle_Regular, cgxgetf_FreeTypePackTest$FontStyle_Italic]);
}
function cbgg_VertexAttributes() {
    var a = this; jl_Object.call(a);
    a.$attributes1 = null;
    a.$vertexSize = 0;
    a.$mask4 = Long_ZERO;
}
function cbgg_VertexAttributes__init_(var_0) {
    var var_1 = new cbgg_VertexAttributes();
    cbgg_VertexAttributes__init_0(var_1, var_0);
    return var_1;
}
function cbgg_VertexAttributes__init_0($this, $attributes) {
    var var$2, var$3, $list, $i;
    var$2 = $attributes.data;
    jl_Object__init_0($this);
    $this.$mask4 = Long_fromInt(-1);
    var$3 = var$2.length;
    if (!var$3)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(475)));
    $list = $rt_createArray(cbgg_VertexAttribute, var$3);
    $i = 0;
    while ($i < var$3) {
        $list.data[$i] = var$2[$i];
        $i = $i + 1 | 0;
    }
    $this.$attributes1 = $list;
    $this.$vertexSize = cbgg_VertexAttributes_calculateOffsets($this);
}
function cbgg_VertexAttributes_calculateOffsets($this) {
    var $count, $i, $attribute;
    $count = 0;
    $i = 0;
    while ($i < $this.$attributes1.data.length) {
        $attribute = $this.$attributes1.data[$i];
        $attribute.$offset = $count;
        $count = $count + cbgg_VertexAttribute_getSizeInBytes($attribute) | 0;
        $i = $i + 1 | 0;
    }
    return $count;
}
function cbgg_VertexAttributes_size($this) {
    return $this.$attributes1.data.length;
}
function cbgg_VertexAttributes_get($this, $index) {
    return $this.$attributes1.data[$index];
}
function cbggg_TextureAtlas$AtlasRegion() {
    var a = this; cbggg_TextureRegion.call(a);
    a.$offsetX = 0.0;
    a.$offsetY = 0.0;
    a.$packedHeight = 0;
    a.$originalHeight = 0;
}
var jn_FloatBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_FloatBufferOverByteBuffer);
function jn_FloatBufferOverByteBufferBigEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_FloatBufferOverByteBufferBigEndian();
    jn_FloatBufferOverByteBufferBigEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_FloatBufferOverByteBufferBigEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_FloatBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_FloatBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer3.$array0.data;
    var$3 = $this.$start6;
    var$4 = $index * 4 | 0;
    $value = var$2[var$3 + var$4 | 0] & 255 | ($this.$byteByffer3.$array0.data[($this.$start6 + var$4 | 0) + 1 | 0] & 255) << 8 | ($this.$byteByffer3.$array0.data[($this.$start6 + var$4 | 0) + 2 | 0] & 255) << 16 | ($this.$byteByffer3.$array0.data[($this.$start6 + var$4 | 0) + 3 | 0] & 255) << 24;
    return $rt_intBitsToFloat($value);
}
function jn_FloatBufferOverByteBufferBigEndian_putElement($this, $index, $f) {
    var $value, var$4, var$5, var$6;
    $value = $rt_floatToIntBits($f);
    var$4 = $this.$byteByffer3.$array0.data;
    var$5 = $this.$start6;
    var$6 = $index * 4 | 0;
    var$4[var$5 + var$6 | 0] = $value << 24 >> 24;
    $this.$byteByffer3.$array0.data[($this.$start6 + var$6 | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer3.$array0.data[($this.$start6 + var$6 | 0) + 2 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer3.$array0.data[($this.$start6 + var$6 | 0) + 3 | 0] = $value >> 24 << 24 >> 24;
}
function cbggg_BitmapFont$BitmapFontData() {
    var a = this; jl_Object.call(a);
    a.$name7 = null;
    a.$imagePaths = null;
    a.$fontFile = null;
    a.$flipped = 0;
    a.$padRight0 = 0.0;
    a.$padLeft0 = 0.0;
    a.$lineHeight = 0.0;
    a.$capHeight = 0.0;
    a.$ascent = 0.0;
    a.$descent = 0.0;
    a.$down = 0.0;
    a.$blankLineScale = 0.0;
    a.$scaleX = 0.0;
    a.$scaleY = 0.0;
    a.$markupEnabled = 0;
    a.$glyphs0 = null;
    a.$missingGlyph = null;
    a.$spaceXadvance = 0.0;
    a.$xHeight = 0.0;
    a.$breakChars = null;
    a.$xChars = null;
    a.$capChars = null;
}
function cbggg_BitmapFont$BitmapFontData__init_() {
    var var_0 = new cbggg_BitmapFont$BitmapFontData();
    cbggg_BitmapFont$BitmapFontData__init_0(var_0);
    return var_0;
}
function cbggg_BitmapFont$BitmapFontData__init_0($this) {
    jl_Object__init_0($this);
    $this.$capHeight = 1.0;
    $this.$blankLineScale = 1.0;
    $this.$scaleX = 1.0;
    $this.$scaleY = 1.0;
    $this.$glyphs0 = $rt_createArray($rt_arraycls(cbggg_BitmapFont$Glyph), 128);
    $this.$xHeight = 1.0;
    $this.$xChars = $rt_createCharArrayFromData([120, 101, 97, 111, 110, 115, 114, 99, 117, 109, 118, 119, 122]);
    $this.$capChars = $rt_createCharArrayFromData([77, 78, 66, 68, 67, 69, 70, 75, 65, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]);
}
function cbggg_BitmapFont$BitmapFontData_setGlyphRegion($this, $glyph, $region) {
    var $texture, $invTexWidth, $invTexHeight, $offsetX, $offsetY, $u, $v, $regionWidth, $regionHeight, $atlasRegion, $x, $x2, $y, $y2, var$17, $amount;
    $texture = $region.$getTexture();
    $invTexWidth = 1.0 / $texture.$getWidth();
    $invTexHeight = 1.0 / $texture.$getHeight();
    $offsetX = 0.0;
    $offsetY = 0.0;
    $u = $region.$u0;
    $v = $region.$v0;
    $regionWidth = $region.$getRegionWidth();
    $regionHeight = $region.$getRegionHeight();
    if ($region instanceof cbggg_TextureAtlas$AtlasRegion) {
        $atlasRegion = $region;
        $offsetX = $atlasRegion.$offsetX;
        $offsetY = ($atlasRegion.$originalHeight - $atlasRegion.$packedHeight | 0) - $atlasRegion.$offsetY;
    }
    $x = $glyph.$srcX;
    $x2 = $glyph.$srcX + $glyph.$width2 | 0;
    $y = $glyph.$srcY;
    $y2 = $glyph.$srcY + $glyph.$height2 | 0;
    if ($offsetX <= 0.0)
        $regionWidth = $x2;
    else {
        $x = $x - $offsetX;
        if ($x < 0.0) {
            $glyph.$width2 = $glyph.$width2 + $x | 0;
            $glyph.$xoffset = $glyph.$xoffset - $x | 0;
            $x = 0.0;
        }
        var$17 = $x2 - $offsetX;
        if (var$17 <= $regionWidth)
            $regionWidth = var$17;
        else
            $glyph.$width2 = $glyph.$width2 - (var$17 - $regionWidth) | 0;
    }
    if ($offsetY <= 0.0)
        $regionHeight = $y2;
    else {
        $y = $y - $offsetY;
        if ($y < 0.0) {
            $glyph.$height2 = $glyph.$height2 + $y | 0;
            if ($glyph.$height2 < 0)
                $glyph.$height2 = 0;
            $y = 0.0;
        }
        var$17 = $y2 - $offsetY;
        if (var$17 <= $regionHeight)
            $regionHeight = var$17;
        else {
            $amount = var$17 - $regionHeight;
            $glyph.$height2 = $glyph.$height2 - $amount | 0;
            $glyph.$yoffset = $glyph.$yoffset + $amount | 0;
        }
    }
    $glyph.$u = $u + $x * $invTexWidth;
    $glyph.$u2 = $u + $regionWidth * $invTexWidth;
    if (!$this.$flipped) {
        $glyph.$v2 = $v + $y * $invTexHeight;
        $glyph.$v = $v + $regionHeight * $invTexHeight;
    } else {
        $glyph.$v = $v + $y * $invTexHeight;
        $glyph.$v2 = $v + $regionHeight * $invTexHeight;
    }
}
function cbggg_BitmapFont$BitmapFontData_setGlyph($this, $ch, $glyph) {
    var var$3, var$4, $page;
    var$3 = $this.$glyphs0.data;
    var$4 = $ch / 512 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        var$3 = $this.$glyphs0.data;
        $page = $rt_createArray(cbggg_BitmapFont$Glyph, 512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $glyph;
}
function cbggg_BitmapFont$BitmapFontData_getGlyph($this, $ch) {
    var $page;
    $page = $this.$glyphs0.data[$ch / 512 | 0];
    if ($page === null)
        return null;
    return $page.data[$ch & 511];
}
function cbggg_BitmapFont$BitmapFontData_getGlyphs($this, $run, $str, $start, $end, $lastGlyph) {
    var $max, $markupEnabled, $scaleX, $glyphs, $xAdvances, var$11, $ch, $glyph, var$14, var$15, $lastGlyphWidth;
    $max = $end - $start | 0;
    if (!$max)
        return;
    $markupEnabled = $this.$markupEnabled;
    $scaleX = $this.$scaleX;
    $glyphs = $run.$glyphs1;
    $xAdvances = $run.$xAdvances;
    $glyphs.$ensureCapacity1($max);
    $run.$xAdvances.$ensureCapacity2($max + 1 | 0);
    while (true) {
        a: {
            var$11 = $start + 1 | 0;
            $ch = $str.$charAt($start);
            if ($ch != 13) {
                $glyph = $this.$getGlyph0($ch);
                if ($glyph === null) {
                    if ($this.$missingGlyph === null)
                        break a;
                    $glyph = $this.$missingGlyph;
                }
                $glyphs.$add3($glyph);
                if ($lastGlyph !== null) {
                    var$14 = $lastGlyph.$xadvance;
                    var$15 = (var$14 + $lastGlyph.$getKerning0($ch) | 0) * $scaleX;
                } else
                    var$15 = $glyph.$fixedWidth ? 0.0 : ( -$glyph.$xoffset | 0) * $scaleX - $this.$padLeft0;
                $xAdvances.$add8(var$15);
                if (!$markupEnabled)
                    $lastGlyph = $glyph;
                else if ($ch != 91)
                    $lastGlyph = $glyph;
                else if (var$11 >= $end)
                    $lastGlyph = $glyph;
                else if ($str.$charAt(var$11) != 91)
                    $lastGlyph = $glyph;
                else {
                    var$11 = var$11 + 1 | 0;
                    $lastGlyph = $glyph;
                }
            }
        }
        if (var$11 >= $end)
            break;
        $start = var$11;
    }
    if ($lastGlyph !== null) {
        $lastGlyphWidth = $lastGlyph.$fixedWidth ? $lastGlyph.$xadvance * $scaleX : ($lastGlyph.$width2 + $lastGlyph.$xoffset | 0) * $scaleX - $this.$padRight0;
        $xAdvances.$add8($lastGlyphWidth);
    }
}
function cbggg_BitmapFont$BitmapFontData_getWrapIndex($this, $glyphs, $start) {
    var $i, $glyphsItems, var$5, $ch, var$7;
    $i = $start - 1 | 0;
    $glyphsItems = $glyphs.$items;
    var$5 = $glyphsItems.data;
    $ch = var$5[$i].$id1 & 65535;
    if ($this.$isWhitespace0($ch))
        return $i;
    if ($this.$isBreakChar($ch))
        $i = $i + (-1) | 0;
    a: {
        while ($i > 0) {
            var$7 = var$5[$i].$id1 & 65535;
            if ($this.$isWhitespace0(var$7))
                break a;
            if ($this.$isBreakChar(var$7))
                break a;
            $i = $i + (-1) | 0;
        }
        return 0;
    }
    return $i + 1 | 0;
}
function cbggg_BitmapFont$BitmapFontData_isBreakChar($this, $c) {
    var var$2, var$3, var$4, $br;
    if ($this.$breakChars === null)
        return 0;
    var$2 = $this.$breakChars.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $br = var$2[var$4];
        if ($c == $br)
            return 1;
        var$4 = var$4 + 1 | 0;
    }
    return 0;
}
function cbggg_BitmapFont$BitmapFontData_isWhitespace($this, $c) {
    switch ($c) {
        case 9:
        case 10:
        case 13:
        case 32:
            break;
        default:
            return 0;
    }
    return 1;
}
function cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData() {
    var a = this; cbggg_BitmapFont$BitmapFontData.call(a);
    a.$regions0 = null;
    a.$generator = null;
    a.$parameter = null;
    a.$stroker = null;
    a.$packer0 = null;
    a.$glyphs = null;
    a.$dirty0 = 0;
}
function cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData__init_() {
    var var_0 = new cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData();
    cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData__init_0(var_0);
    return var_0;
}
function cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData__init_0($this) {
    cbggg_BitmapFont$BitmapFontData__init_0($this);
}
function cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyph($this, $ch) {
    var $glyph, var$3, $baseline, $face, $glyphIndex, $i, $n, $other, $otherIndex, $kerning, var$12;
    $glyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $ch);
    if ($glyph === null && $this.$generator !== null) {
        $this.$generator.$setPixelSizes(0, $this.$parameter.$size5);
        var$3 = !$this.$flipped ? $this.$ascent :  -$this.$ascent;
        $baseline = (var$3 + $this.$capHeight) / $this.$scaleY;
        $glyph = $this.$generator.$createGlyph($ch, $this, $this.$parameter, $this.$stroker, $baseline, $this.$packer0);
        if ($glyph === null)
            return $this.$missingGlyph;
        $this.$setGlyphRegion($glyph, $this.$regions0.$get($glyph.$page));
        $this.$setGlyph($ch, $glyph);
        $this.$glyphs.$add3($glyph);
        $this.$dirty0 = 1;
        $face = $this.$generator.$face;
        if ($this.$parameter.$kerning0) {
            $glyphIndex = $face.$getCharIndex($ch);
            $i = 0;
            $n = $this.$glyphs.$size1;
            while ($i < $n) {
                $other = $this.$glyphs.$get($i);
                $otherIndex = $face.$getCharIndex($other.$id1);
                $kerning = $face.$getKerning($glyphIndex, $otherIndex, 0);
                if ($kerning)
                    $glyph.$setKerning($other.$id1, cbgggf_FreeType_toInt($kerning));
                var$12 = $face.$getKerning($otherIndex, $glyphIndex, 0);
                if (var$12)
                    $other.$setKerning($ch, cbgggf_FreeType_toInt(var$12));
                $i = $i + 1 | 0;
            }
        }
    }
    return $glyph;
}
function cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyphs($this, $run, $str, $start, $end, $lastGlyph) {
    if ($this.$packer0 !== null)
        $this.$packer0.$setPackToTexture(1);
    cbggg_BitmapFont$BitmapFontData_getGlyphs($this, $run, $str, $start, $end, $lastGlyph);
    if ($this.$dirty0) {
        $this.$dirty0 = 0;
        $this.$packer0.$updateTextureRegions($this.$regions0, $this.$parameter.$minFilter0, $this.$parameter.$magFilter0, $this.$parameter.$genMipMaps);
    }
}
var jl_NoSuchMethodError = $rt_classWithoutFields(jl_IncompatibleClassChangeError);
function jl_NoSuchMethodError__init_(var_0) {
    var var_1 = new jl_NoSuchMethodError();
    jl_NoSuchMethodError__init_0(var_1, var_0);
    return var_1;
}
function jl_NoSuchMethodError__init_0($this, $message) {
    jl_IncompatibleClassChangeError__init_0($this, $message);
}
var jur_AbstractCharClass$LazyASCII = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyASCII__init_() {
    var var_0 = new jur_AbstractCharClass$LazyASCII();
    jur_AbstractCharClass$LazyASCII__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyASCII__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyASCII_computeValue($this) {
    return (jur_CharClass__init_()).$add0(0, 127);
}
function cbggg_GlyphLayout() {
    var a = this; jl_Object.call(a);
    a.$runs = null;
    a.$width3 = 0.0;
    a.$height3 = 0.0;
}
var cbggg_GlyphLayout_glyphRunPool = null;
var cbggg_GlyphLayout_colorPool = null;
var cbggg_GlyphLayout_colorStack = null;
function cbggg_GlyphLayout_$callClinit() {
    cbggg_GlyphLayout_$callClinit = $rt_eraseClinit(cbggg_GlyphLayout);
    cbggg_GlyphLayout__clinit_();
}
function cbggg_GlyphLayout__init_3() {
    var var_0 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_(var_0);
    return var_0;
}
function cbggg_GlyphLayout__init_4(var_0, var_1) {
    var var_2 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_GlyphLayout__init_5(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_1(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function cbggg_GlyphLayout__init_6(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_2(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function cbggg_GlyphLayout__init_($this) {
    cbggg_GlyphLayout_$callClinit();
    jl_Object__init_0($this);
    $this.$runs = cbgu_Array__init_1(1);
}
function cbggg_GlyphLayout__init_0($this, $font, $str) {
    cbggg_GlyphLayout_$callClinit();
    jl_Object__init_0($this);
    $this.$runs = cbgu_Array__init_1(1);
    $this.$setText0($font, $str);
}
function cbggg_GlyphLayout__init_1($this, $font, $str, $color, $targetWidth, $halign, $wrap) {
    cbggg_GlyphLayout_$callClinit();
    jl_Object__init_0($this);
    $this.$runs = cbgu_Array__init_1(1);
    $this.$setText1($font, $str, $color, $targetWidth, $halign, $wrap);
}
function cbggg_GlyphLayout__init_2($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) {
    cbggg_GlyphLayout_$callClinit();
    jl_Object__init_0($this);
    $this.$runs = cbgu_Array__init_1(1);
    $this.$setText($font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate);
}
function cbggg_GlyphLayout_setText($this, $font, $str) {
    $this.$setText($font, $str, 0, $str.$length(), $font.$getColor(), 0.0, 8, 0, null);
}
function cbggg_GlyphLayout_setText0($this, $font, $str, $color, $targetWidth, $halign, $wrap) {
    $this.$setText($font, $str, 0, $str.$length(), $color, $targetWidth, $halign, $wrap, null);
}
function cbggg_GlyphLayout_setText1($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) {
    var $runs, $fontData, $markupEnabled, $i, $n, $x, $y, $down, $lastGlyph, $runStart, var$20, $runEnd, $newline, var$23, $length, var$25, $next, $xAdvances, var$28, var$29, var$30, $glyph, $glyphWidth, $wrapIndex, $glyphCount, $previous, $lastIndex, $width, $runsItems, $runsSize, $run, $runWidth, $max, $glyphs, $ii, $nn, $center, $lineWidth, $lineY, $lineStart, $shift;
    $runs = $this.$runs;
    cbggg_GlyphLayout_$callClinit();
    cbggg_GlyphLayout_glyphRunPool.$freeAll0($runs);
    $runs.$clear();
    $fontData = $font.$data3;
    if ($start == $end) {
        $this.$width3 = 0.0;
        $this.$height3 = $fontData.$capHeight;
        return;
    }
    if ($truncate !== null)
        $wrap = 1;
    else if ($targetWidth <= $fontData.$spaceXadvance * 3.0)
        $wrap = 0;
    $markupEnabled = $fontData.$markupEnabled;
    if ($markupEnabled) {
        $i = 1;
        $n = cbggg_GlyphLayout_colorStack.$size1;
        while ($i < $n) {
            cbggg_GlyphLayout_colorPool.$free(cbggg_GlyphLayout_colorStack.$get($i));
            $i = $i + 1 | 0;
        }
        cbggg_GlyphLayout_colorStack.$clear();
        cbggg_GlyphLayout_colorStack.$add3($color);
    }
    $x = 0.0;
    $y = 0.0;
    $down = $fontData.$down;
    $lastGlyph = null;
    $runStart = $start;
    var$20 = $color;
    a: {
        b: while (true) {
            c: {
                $runEnd = (-1);
                $newline = 0;
                if ($start == $end) {
                    if ($runStart == $end)
                        break b;
                    $runEnd = $end;
                } else {
                    var$23 = $start + 1 | 0;
                    switch ($str.$charAt($start)) {
                        case 10:
                            $runEnd = var$23 - 1 | 0;
                            $newline = 1;
                            $start = var$23;
                            break c;
                        case 91:
                            if (!$markupEnabled) {
                                $start = var$23;
                                break c;
                            }
                            $length = cbggg_GlyphLayout_parseColorMarkup($this, $str, var$23, $end, cbggg_GlyphLayout_colorPool);
                            if ($length < 0) {
                                if ($length == (-2)) {
                                    $start = var$23 + 1 | 0;
                                    continue b;
                                }
                                $start = var$23;
                                break c;
                            }
                            $runEnd = var$23 - 1 | 0;
                            $start = var$23 + ($length + 1 | 0) | 0;
                            $color = cbggg_GlyphLayout_colorStack.$peek();
                            break c;
                        default:
                    }
                    $start = var$23;
                }
            }
            if ($runEnd != (-1)) {
                d: {
                    var$25 = $rt_compare($runEnd, $runStart);
                    if (var$25) {
                        $next = cbggg_GlyphLayout_glyphRunPool.$obtain();
                        $next.$color3.$set1(var$20);
                        $fontData.$getGlyphs($next, $str, $runStart, $runEnd, $lastGlyph);
                        if (!$next.$glyphs1.$size1)
                            cbggg_GlyphLayout_glyphRunPool.$free($next);
                        else {
                            if ($lastGlyph !== null)
                                $x = $x - ($lastGlyph.$fixedWidth ? $lastGlyph.$xadvance * $fontData.$scaleX : ($lastGlyph.$width2 + $lastGlyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight0);
                            $lastGlyph = $next.$glyphs1.$peek();
                            $next.$x2 = $x;
                            $next.$y2 = $y;
                            if (!(!$newline && $runEnd != $end))
                                cbggg_GlyphLayout_adjustLastGlyph($this, $fontData, $next);
                            $runs.$add3($next);
                            $n = $next.$xAdvances.$size12;
                            $xAdvances = $next.$xAdvances.$items1;
                            if ($wrap && $n) {
                                var$28 = $xAdvances.data;
                                $x = $x + var$28[0] + var$28[1];
                                $i = 2;
                                while ($i < $n) {
                                    var$29 = $next.$glyphs1;
                                    var$30 = $i - 1 | 0;
                                    $glyph = var$29.$get(var$30);
                                    $glyphWidth = ($glyph.$width2 + $glyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight0;
                                    if ($x + $glyphWidth - 9.999999747378752E-5 <= $targetWidth)
                                        $x = $x + $xAdvances.data[$i];
                                    else {
                                        if ($truncate !== null) {
                                            cbggg_GlyphLayout_truncate($this, $fontData, $next, $targetWidth, $truncate, $i, cbggg_GlyphLayout_glyphRunPool);
                                            break a;
                                        }
                                        $y = $y + $down;
                                        $lastGlyph = null;
                                        $wrapIndex = $fontData.$getWrapIndex($next.$glyphs1, $i);
                                        if (!(!$wrapIndex && $next.$x2 === 0.0) && $wrapIndex < $next.$glyphs1.$size1)
                                            var$30 = $wrapIndex;
                                        if (var$30) {
                                            $next = cbggg_GlyphLayout_wrap($this, $fontData, $next, var$30, $i);
                                            if ($next === null) {
                                                $x = 0.0;
                                                break d;
                                            }
                                            $runs.$add3($next);
                                        } else {
                                            $glyphCount = $next.$glyphs1.$size1;
                                            e: {
                                                while (true) {
                                                    if (var$30 >= $glyphCount)
                                                        break e;
                                                    if (!$fontData.$isWhitespace0(($next.$glyphs1.$get(var$30)).$id1 & 65535))
                                                        break;
                                                    var$30 = var$30 + 1 | 0;
                                                }
                                            }
                                            if (var$30 > 0) {
                                                $next.$glyphs1.$removeRange(0, var$30 - 1 | 0);
                                                $next.$xAdvances.$removeRange(1, var$30);
                                            }
                                            $xAdvances.data[0] = ( -($next.$glyphs1.$first0()).$xoffset | 0) * $fontData.$scaleX - $fontData.$padLeft0;
                                            if ($runs.$size1 > 1) {
                                                $previous = $runs.$get($runs.$size1 - 2 | 0);
                                                $lastIndex = $previous.$glyphs1.$size1 - 1 | 0;
                                                f: {
                                                    while (true) {
                                                        if ($lastIndex <= 0)
                                                            break f;
                                                        if (!$fontData.$isWhitespace0(($previous.$glyphs1.$get($lastIndex)).$id1 & 65535))
                                                            break;
                                                        $lastIndex = $lastIndex + (-1) | 0;
                                                    }
                                                }
                                                $previous.$glyphs1.$truncate0($lastIndex + 1 | 0);
                                                $previous.$xAdvances.$truncate0($lastIndex + 2 | 0);
                                                cbggg_GlyphLayout_adjustLastGlyph($this, $fontData, $previous);
                                            }
                                        }
                                        $n = $next.$xAdvances.$size12;
                                        $xAdvances = $next.$xAdvances.$items1;
                                        var$28 = $xAdvances.data;
                                        $x = var$28[0];
                                        if ($n > 1)
                                            $x = $x + var$28[1];
                                        $next.$x2 = 0.0;
                                        $next.$y2 = $y;
                                        $i = 1;
                                    }
                                    $i = $i + 1 | 0;
                                }
                            } else if ($markupEnabled) {
                                $i = 0;
                                while ($i < $n) {
                                    $x = $x + $xAdvances.data[$i];
                                    $i = $i + 1 | 0;
                                }
                            }
                        }
                    }
                }
                if ($newline) {
                    $x = 0.0;
                    $y = var$25 ? $y + $down : $y + $down * $fontData.$blankLineScale;
                    $lastGlyph = null;
                }
                $runStart = $start;
                var$20 = $color;
            }
        }
    }
    $this.$height3 = $fontData.$capHeight + jl_Math_abs($y);
    $width = 0.0;
    $runsItems = $runs.$items;
    $runsSize = $runs.$size1;
    $i = 0;
    while ($i < $runsSize) {
        $run = $runsItems.data[$i];
        $xAdvances = $run.$xAdvances.$items1;
        var$28 = $xAdvances.data;
        $runWidth = var$28[0];
        $max = 0.0;
        $glyphs = $run.$glyphs1.$items;
        $ii = 0;
        $nn = $run.$glyphs1.$size1;
        while ($ii < $nn) {
            $glyph = $glyphs.data[$ii];
            $glyphWidth = ($glyph.$width2 + $glyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight0;
            $max = jl_Math_max0($max, $runWidth + $glyphWidth);
            $ii = $ii + 1 | 0;
            $runWidth = $runWidth + var$28[$ii];
        }
        $run.$width4 = jl_Math_max0($runWidth, $max);
        $width = jl_Math_max0($width, $run.$x2 + $run.$width4);
        $i = $i + 1 | 0;
    }
    g: {
        $this.$width3 = $width;
        if (!($halign & 8)) {
            $center = !($halign & 1) ? 0 : 1;
            $lineWidth = 0.0;
            $lineY = (-2.147483648E9);
            $lineStart = 0;
            $i = 0;
            while ($i < $runsSize) {
                var$28 = $runsItems.data;
                $run = var$28[$i];
                if ($run.$y2 === $lineY)
                    $lineWidth = jl_Math_max0($lineWidth, $run.$x2 + $run.$width4);
                else {
                    $lineY = $run.$y2;
                    $shift = $targetWidth - $lineWidth;
                    if ($center)
                        $shift = $shift / 2.0;
                    while ($lineStart < $i) {
                        var$23 = $lineStart + 1 | 0;
                        var$29 = var$28[$lineStart];
                        var$29.$x2 = var$29.$x2 + $shift;
                        $lineStart = var$23;
                    }
                    $lineWidth = $run.$x2 + $run.$width4;
                }
                $i = $i + 1 | 0;
            }
            $shift = $targetWidth - $lineWidth;
            if ($center)
                $shift = $shift / 2.0;
            while (true) {
                if ($lineStart >= $runsSize)
                    break g;
                var$28 = $runsItems.data;
                var$23 = $lineStart + 1 | 0;
                var$29 = var$28[$lineStart];
                var$29.$x2 = var$29.$x2 + $shift;
                $lineStart = var$23;
            }
        }
    }
}
function cbggg_GlyphLayout_truncate($this, $fontData, $run, $targetWidth, $truncate, $widthIndex, $glyphRunPool) {
    var $truncateRun, $truncateWidth, $xAdvances, $i, $n, var$12, $count, $width, $xAdvance;
    $truncateRun = $glyphRunPool.$obtain();
    $fontData.$getGlyphs($truncateRun, $truncate, 0, $truncate.$length(), null);
    $truncateWidth = 0.0;
    if ($truncateRun.$xAdvances.$size12 > 0) {
        cbggg_GlyphLayout_adjustLastGlyph($this, $fontData, $truncateRun);
        $xAdvances = $truncateRun.$xAdvances.$items1;
        $i = 1;
        $n = $truncateRun.$xAdvances.$size12;
        while ($i < $n) {
            $truncateWidth = $truncateWidth + $xAdvances.data[$i];
            $i = $i + 1 | 0;
        }
    }
    var$12 = $targetWidth - $truncateWidth;
    $count = 0;
    $width = $run.$x2;
    $xAdvances = $run.$xAdvances.$items1;
    a: {
        while (true) {
            if ($count >= $run.$xAdvances.$size12)
                break a;
            $xAdvance = $xAdvances.data[$count];
            $width = $width + $xAdvance;
            if ($width > var$12)
                break;
            $count = $count + 1 | 0;
        }
    }
    if ($count <= 1) {
        $run.$glyphs1.$clear();
        $run.$xAdvances.$clear();
        $run.$xAdvances.$addAll1($truncateRun.$xAdvances);
    } else {
        $run.$glyphs1.$truncate0($count - 1 | 0);
        $run.$xAdvances.$truncate0($count);
        cbggg_GlyphLayout_adjustLastGlyph($this, $fontData, $run);
        if ($truncateRun.$xAdvances.$size12 > 0)
            $run.$xAdvances.$addAll2($truncateRun.$xAdvances, 1, $truncateRun.$xAdvances.$size12 - 1 | 0);
    }
    $run.$glyphs1.$addAll0($truncateRun.$glyphs1);
    $glyphRunPool.$free($truncateRun);
}
function cbggg_GlyphLayout_wrap($this, $fontData, $first, $secondStart, $widthIndex) {
    var $glyphs2, $glyphCount, $xAdvances2, $firstEnd, var$9, $second, $glyphs1, $xAdvances1;
    $glyphs2 = $first.$glyphs1;
    $glyphCount = $first.$glyphs1.$size1;
    $xAdvances2 = $first.$xAdvances;
    $firstEnd = $secondStart;
    a: {
        while (true) {
            if ($firstEnd <= 0)
                break a;
            if (!$fontData.$isWhitespace0(($glyphs2.$get($firstEnd - 1 | 0)).$id1 & 65535))
                break;
            $firstEnd = $firstEnd + (-1) | 0;
        }
    }
    b: {
        while (true) {
            var$9 = $rt_compare($secondStart, $glyphCount);
            if (var$9 >= 0)
                break b;
            if (!$fontData.$isWhitespace0(($glyphs2.$get($secondStart)).$id1 & 65535))
                break;
            $secondStart = $secondStart + 1 | 0;
        }
    }
    $second = null;
    if (var$9 >= 0) {
        $glyphs2.$truncate0($firstEnd);
        $xAdvances2.$truncate0($firstEnd + 1 | 0);
    } else {
        cbggg_GlyphLayout_$callClinit();
        $second = cbggg_GlyphLayout_glyphRunPool.$obtain();
        $second.$color3.$set1($first.$color3);
        $glyphs1 = $second.$glyphs1;
        $glyphs1.$addAll3($glyphs2, 0, $firstEnd);
        $glyphs2.$removeRange(0, $secondStart - 1 | 0);
        $first.$glyphs1 = $glyphs1;
        $second.$glyphs1 = $glyphs2;
        $xAdvances1 = $second.$xAdvances;
        $xAdvances1.$addAll2($xAdvances2, 0, $firstEnd + 1 | 0);
        $xAdvances2.$removeRange(1, $secondStart);
        $xAdvances2.$items1.data[0] = ( -($glyphs2.$first0()).$xoffset | 0) * $fontData.$scaleX - $fontData.$padLeft0;
        $first.$xAdvances = $xAdvances1;
        $second.$xAdvances = $xAdvances2;
    }
    if ($firstEnd)
        cbggg_GlyphLayout_adjustLastGlyph($this, $fontData, $first);
    else {
        cbggg_GlyphLayout_$callClinit();
        cbggg_GlyphLayout_glyphRunPool.$free($first);
        $this.$runs.$pop();
    }
    return $second;
}
function cbggg_GlyphLayout_adjustLastGlyph($this, $fontData, $run) {
    var $last, $width;
    $last = $run.$glyphs1.$peek();
    if ($last.$fixedWidth)
        return;
    $width = ($last.$width2 + $last.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight0;
    $run.$xAdvances.$items1.data[$run.$xAdvances.$size12 - 1 | 0] = $width;
}
function cbggg_GlyphLayout_parseColorMarkup($this, $str, $start, $end, $colorPool) {
    var $colorInt, $i, $ch, var$8, $ii, $nn, $color, $namedColor;
    if ($start == $end)
        return (-1);
    switch ($str.$charAt($start)) {
        case 35:
            $colorInt = 0;
            $i = $start + 1 | 0;
            a: {
                while (true) {
                    if ($i >= $end)
                        break a;
                    $ch = $str.$charAt($i);
                    if ($ch == 93)
                        break;
                    if ($ch >= 48 && $ch <= 57)
                        $colorInt = ($colorInt * 16 | 0) + ($ch - 48 | 0) | 0;
                    else if ($ch >= 97 && $ch <= 102)
                        $colorInt = ($colorInt * 16 | 0) + ($ch - 87 | 0) | 0;
                    else {
                        if ($ch < 65)
                            break a;
                        if ($ch > 70)
                            break a;
                        $colorInt = ($colorInt * 16 | 0) + ($ch - 55 | 0) | 0;
                    }
                    $i = $i + 1 | 0;
                }
                if ($i >= ($start + 2 | 0) && $i <= ($start + 9 | 0)) {
                    var$8 = $i - $start | 0;
                    if (var$8 <= 7) {
                        $ii = 0;
                        $nn = 9 - var$8 | 0;
                        while ($ii < $nn) {
                            $colorInt = $colorInt << 4;
                            $ii = $ii + 1 | 0;
                        }
                        $colorInt = $colorInt | 255;
                    }
                    $color = $colorPool.$obtain();
                    cbggg_GlyphLayout_$callClinit();
                    cbggg_GlyphLayout_colorStack.$add3($color);
                    cbgg_Color_rgba8888ToColor($color, $colorInt);
                    return var$8;
                }
            }
            return (-1);
        case 91:
            break;
        case 93:
            cbggg_GlyphLayout_$callClinit();
            if (cbggg_GlyphLayout_colorStack.$size1 > 1)
                $colorPool.$free(cbggg_GlyphLayout_colorStack.$pop());
            return 0;
        default:
            $i = $start + 1 | 0;
            while ($i < $end) {
                $ch = $str.$charAt($i);
                if ($ch == 93) {
                    $namedColor = cbgg_Colors_get(($str.$subSequence($start, $i)).$toString());
                    if ($namedColor === null)
                        return (-1);
                    $color = $colorPool.$obtain();
                    cbggg_GlyphLayout_$callClinit();
                    cbggg_GlyphLayout_colorStack.$add3($color);
                    $color.$set1($namedColor);
                    return $i - $start | 0;
                }
                $i = $i + 1 | 0;
            }
            return (-1);
    }
    return (-2);
}
function cbggg_GlyphLayout_reset($this) {
    (cbgu_Pools_get0($rt_cls(cbggg_GlyphLayout$GlyphRun))).$freeAll0($this.$runs);
    $this.$runs.$clear();
    $this.$width3 = 0.0;
    $this.$height3 = 0.0;
}
function cbggg_GlyphLayout_toString($this) {
    var $buffer, $i, $n;
    if (!$this.$runs.$size1)
        return $rt_s(88);
    $buffer = jl_StringBuilder__init_0(128);
    $buffer.$append2($this.$width3);
    $buffer.$append8(120);
    $buffer.$append2($this.$height3);
    $buffer.$append8(10);
    $i = 0;
    $n = $this.$runs.$size1;
    while ($i < $n) {
        $buffer.$append(($this.$runs.$get($i)).$toString());
        $buffer.$append8(10);
        $i = $i + 1 | 0;
    }
    $buffer.$setLength($buffer.$length() - 1 | 0);
    return $buffer.$toString();
}
function cbggg_GlyphLayout__clinit_() {
    cbggg_GlyphLayout_glyphRunPool = cbgu_Pools_get0($rt_cls(cbggg_GlyphLayout$GlyphRun));
    cbggg_GlyphLayout_colorPool = cbgu_Pools_get0($rt_cls(cbgg_Color));
    cbggg_GlyphLayout_colorStack = cbgu_Array__init_1(4);
}
function cbggg_PixmapPacker$Page$1() {
    cbgg_Texture.call(this);
    this.$this$035 = null;
}
function cbggg_PixmapPacker$Page$1__init_(var_0, var_1) {
    var var_2 = new cbggg_PixmapPacker$Page$1();
    cbggg_PixmapPacker$Page$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_PixmapPacker$Page$1__init_0($this, $this$0, $data) {
    $this.$this$035 = $this$0;
    cbgg_Texture__init_4($this, $data);
}
var cbgg_TextureData$Factory = $rt_classWithoutFields();
function cbgg_TextureData$Factory_loadFromFile($file, $format, $useMipMaps) {
    if ($file === null)
        return null;
    return cbggg_FileTextureData__init_($file, cbgg_Pixmap__init_0($file), $format, $useMipMaps);
}
function ju_AbstractList$1() {
    var a = this; jl_Object.call(a);
    a.$index2 = 0;
    a.$modCount1 = 0;
    a.$size13 = 0;
    a.$removeIndex = 0;
    a.$this$036 = null;
}
function ju_AbstractList$1__init_(var_0) {
    var var_1 = new ju_AbstractList$1();
    ju_AbstractList$1__init_0(var_1, var_0);
    return var_1;
}
function ju_AbstractList$1__init_0($this, $this$0) {
    $this.$this$036 = $this$0;
    jl_Object__init_0($this);
    $this.$modCount1 = $this.$this$036.$modCount;
    $this.$size13 = $this.$this$036.$size();
    $this.$removeIndex = (-1);
}
function ju_AbstractList$1_hasNext($this) {
    return $this.$index2 >= $this.$size13 ? 0 : 1;
}
function ju_AbstractList$1_next($this) {
    var var$1, var$2;
    ju_AbstractList$1_checkConcurrentModification($this);
    $this.$removeIndex = $this.$index2;
    var$1 = $this.$this$036;
    var$2 = $this.$index2;
    $this.$index2 = var$2 + 1 | 0;
    return var$1.$get(var$2);
}
function ju_AbstractList$1_checkConcurrentModification($this) {
    if ($this.$modCount1 >= $this.$this$036.$modCount)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
}
function jur_Quantifier() {
    var a = this; jur_SpecialToken.call(a);
    a.$min2 = 0;
    a.$max3 = 0;
}
function jur_Quantifier__init_(var_0, var_1) {
    var var_2 = new jur_Quantifier();
    jur_Quantifier__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Quantifier__init_0($this, $min, $max) {
    jur_SpecialToken__init_($this);
    $this.$min2 = $min;
    $this.$max3 = $max;
}
function jur_Quantifier_min($this) {
    return $this.$min2;
}
function jur_Quantifier_max($this) {
    return $this.$max3;
}
function jur_Quantifier_toString($this) {
    return ((((((jl_StringBuilder__init_()).$append($rt_s(476))).$append0($this.$min2)).$append($rt_s(288))).$append($this.$max3 == 2147483647 ? $rt_s(88) : (jl_Integer__init_($this.$max3)).$toString())).$append($rt_s(477))).$toString();
}
function jur_AbstractCharClass$LazyJavaUpperCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$037 = null;
}
function jur_AbstractCharClass$LazyJavaUpperCase$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUpperCase$1();
    jur_AbstractCharClass$LazyJavaUpperCase$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaUpperCase$1__init_0($this, $this$0) {
    $this.$this$037 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUpperCase$1_contains($this, $ch) {
    return jl_Character_isUpperCase($ch);
}
var ju_Random = $rt_classWithoutFields();
function ju_Random__init_() {
    var var_0 = new ju_Random();
    ju_Random__init_0(var_0);
    return var_0;
}
function ju_Random__init_0($this) {
    jl_Object__init_0($this);
}
var cbgg_GL20 = $rt_classWithoutFields(0);
var otpp_ResourceAccessor = $rt_classWithoutFields();
function cgxgetf_FreeTypePackTest$FontSize() {
    jl_Enum.call(this);
    this.$size8 = 0;
}
var cgxgetf_FreeTypePackTest$FontSize_Tiny = null;
var cgxgetf_FreeTypePackTest$FontSize_Small = null;
var cgxgetf_FreeTypePackTest$FontSize_Medium = null;
var cgxgetf_FreeTypePackTest$FontSize_Large = null;
var cgxgetf_FreeTypePackTest$FontSize_Huge = null;
var cgxgetf_FreeTypePackTest$FontSize_ReallyHuge = null;
var cgxgetf_FreeTypePackTest$FontSize_JustTooBig = null;
var cgxgetf_FreeTypePackTest$FontSize_$VALUES = null;
function cgxgetf_FreeTypePackTest$FontSize_$callClinit() {
    cgxgetf_FreeTypePackTest$FontSize_$callClinit = $rt_eraseClinit(cgxgetf_FreeTypePackTest$FontSize);
    cgxgetf_FreeTypePackTest$FontSize__clinit_();
}
function cgxgetf_FreeTypePackTest$FontSize__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgetf_FreeTypePackTest$FontSize();
    cgxgetf_FreeTypePackTest$FontSize__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgetf_FreeTypePackTest$FontSize_values() {
    cgxgetf_FreeTypePackTest$FontSize_$callClinit();
    return cgxgetf_FreeTypePackTest$FontSize_$VALUES.$clone();
}
function cgxgetf_FreeTypePackTest$FontSize__init_0($this, var$1, var$2, $size) {
    cgxgetf_FreeTypePackTest$FontSize_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$size8 = $size;
}
function cgxgetf_FreeTypePackTest$FontSize__clinit_() {
    cgxgetf_FreeTypePackTest$FontSize_Tiny = cgxgetf_FreeTypePackTest$FontSize__init_($rt_s(478), 0, 10);
    cgxgetf_FreeTypePackTest$FontSize_Small = cgxgetf_FreeTypePackTest$FontSize__init_($rt_s(479), 1, 12);
    cgxgetf_FreeTypePackTest$FontSize_Medium = cgxgetf_FreeTypePackTest$FontSize__init_($rt_s(480), 2, 16);
    cgxgetf_FreeTypePackTest$FontSize_Large = cgxgetf_FreeTypePackTest$FontSize__init_($rt_s(481), 3, 20);
    cgxgetf_FreeTypePackTest$FontSize_Huge = cgxgetf_FreeTypePackTest$FontSize__init_($rt_s(482), 4, 24);
    cgxgetf_FreeTypePackTest$FontSize_ReallyHuge = cgxgetf_FreeTypePackTest$FontSize__init_($rt_s(483), 5, 28);
    cgxgetf_FreeTypePackTest$FontSize_JustTooBig = cgxgetf_FreeTypePackTest$FontSize__init_($rt_s(484), 6, 64);
    cgxgetf_FreeTypePackTest$FontSize_$VALUES = $rt_createArrayFromData(cgxgetf_FreeTypePackTest$FontSize, [cgxgetf_FreeTypePackTest$FontSize_Tiny, cgxgetf_FreeTypePackTest$FontSize_Small, cgxgetf_FreeTypePackTest$FontSize_Medium, cgxgetf_FreeTypePackTest$FontSize_Large, cgxgetf_FreeTypePackTest$FontSize_Huge, cgxgetf_FreeTypePackTest$FontSize_ReallyHuge, cgxgetf_FreeTypePackTest$FontSize_JustTooBig]);
}
var jur_PossessiveQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_PossessiveQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveQuantifierSet();
    jur_PossessiveQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_PossessiveQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    a: {
        while (true) {
            if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound())
                break a;
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 < 1)
                break;
            $stringIndex = $stringIndex + var$4 | 0;
        }
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
    jur_AbstractCharClass.call(this);
    this.$this$038 = null;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0($this, $this$0) {
    $this.$this$038 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains($this, $ch) {
    return jl_Character_isIdentifierIgnorable($ch);
}
var jl_Thread$UncaughtExceptionHandler = $rt_classWithoutFields(0);
var jl_DefaultUncaughtExceptionHandler = $rt_classWithoutFields();
function jl_DefaultUncaughtExceptionHandler__init_() {
    var var_0 = new jl_DefaultUncaughtExceptionHandler();
    jl_DefaultUncaughtExceptionHandler__init_0(var_0);
    return var_0;
}
function jl_DefaultUncaughtExceptionHandler__init_0($this) {
    jl_Object__init_0($this);
}
var jl_InstantiationException = $rt_classWithoutFields(jl_ReflectiveOperationException);
function jl_InstantiationException__init_() {
    var var_0 = new jl_InstantiationException();
    jl_InstantiationException__init_0(var_0);
    return var_0;
}
function jl_InstantiationException__init_0($this) {
    jl_ReflectiveOperationException__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLetter$1() {
    jur_AbstractCharClass.call(this);
    this.$this$039 = null;
}
function jur_AbstractCharClass$LazyJavaLetter$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLetter$1();
    jur_AbstractCharClass$LazyJavaLetter$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLetter$1__init_0($this, $this$0) {
    $this.$this$039 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLetter$1_contains($this, $ch) {
    return jl_Character_isLetter($ch);
}
function cgxgbtdi_TeaWindow() {
    var a = this; jl_Object.call(a);
    a.$window0 = null;
    a.$runnable = null;
    a.$timer = null;
}
function cgxgbtdi_TeaWindow__init_() {
    var var_0 = new cgxgbtdi_TeaWindow();
    cgxgbtdi_TeaWindow__init_0(var_0);
    return var_0;
}
function cgxgbtdi_TeaWindow__init_0($this) {
    jl_Object__init_0($this);
    $this.$window0 = window;
    $this.$timer = cgxgbtdi_TeaTimer__init_();
}
function cgxgbtdi_TeaWindow_getDocument($this) {
    var var$1;
    var$1 = $this.$window0.document;
    return var$1;
}
function cgxgbtdi_TeaWindow_requestAnimationFrame($this, $runnable) {
    $this.$runnable = $runnable;
    requestAnimationFrame(otji_JS_function($this, "onAnimationFrame"));
}
function cgxgbtdi_TeaWindow_onAnimationFrame($this, $arg0) {
    var $toRun;
    $toRun = $this.$runnable;
    $this.$runnable = null;
    $toRun.$run();
}
function cgxgbtdi_TeaWindow_getLocation($this) {
    var $location;
    $location = $this.$window0.location;
    return $location;
}
function cgxgbtdi_TeaWindow_onAnimationFrame$exported$0(var$0, var$1) {
    var$0.$onAnimationFrame(var$1);
}
var jur_ReluctantQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_ReluctantQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantQuantifierSet();
    jur_ReluctantQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    while (true) {
        var$4 = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if (var$4 >= 0)
            break;
        if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            $stringIndex = $stringIndex + var$4 | 0;
        }
        if (var$4 < 1)
            return (-1);
    }
    return var$4;
}
var cbgur_ArrayReflection = $rt_classWithoutFields();
function cbgur_ArrayReflection_newInstance($c, $size) {
    return jlr_Array_newInstance($c, $size);
}
var cbgggf_FreeType$1 = $rt_classWithoutFields(cgxgbw_AssetLoaderListener);
function cbgggf_FreeType$1__init_() {
    var var_0 = new cbgggf_FreeType$1();
    cbgggf_FreeType$1__init_0(var_0);
    return var_0;
}
function cbgggf_FreeType$1__init_0($this) {
    cgxgbw_AssetLoaderListener__init_0($this);
}
function cbgggf_FreeType$1_onSuccess($this, $url, $result) {
    cbgggf_FreeType_access$102(1);
    return 1;
}
function cbgggf_FreeType$1_onFailure($this, $url) {
    cbgggf_FreeType_access$102(1);
}
function cbgg_Mesh() {
    var a = this; jl_Object.call(a);
    a.$vertices0 = null;
    a.$indices = null;
    a.$autoBind = 0;
    a.$isVertexArray = 0;
    a.$instances = null;
    a.$isInstanced = 0;
    a.$tmpV = null;
}
var cbgg_Mesh_meshes = null;
function cbgg_Mesh_$callClinit() {
    cbgg_Mesh_$callClinit = $rt_eraseClinit(cbgg_Mesh);
    cbgg_Mesh__clinit_();
}
function cbgg_Mesh__init_0(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cbgg_Mesh();
    cbgg_Mesh__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cbgg_Mesh__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cbgg_Mesh();
    cbgg_Mesh__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cbgg_Mesh__init_($this, $type, $isStatic, $maxVertices, $maxIndices, $attributes) {
    cbgg_Mesh_$callClinit();
    cbgg_Mesh__init_2($this, $type, $isStatic, $maxVertices, $maxIndices, cbgg_VertexAttributes__init_($attributes));
}
function cbgg_Mesh__init_2($this, $type, $isStatic, $maxVertices, $maxIndices, $attributes) {
    cbgg_Mesh_$callClinit();
    a: {
        b: {
            jl_Object__init_0($this);
            $this.$autoBind = 1;
            $this.$isInstanced = 0;
            $this.$tmpV = cbgm_Vector3__init_();
            cbgg_Mesh$1_$callClinit();
            switch (cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal($type)]) {
                case 1:
                    break;
                case 2:
                    $this.$vertices0 = cbggg_VertexBufferObjectSubData__init_($isStatic, $maxVertices, $attributes);
                    $this.$indices = cbggg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
                    $this.$isVertexArray = 0;
                    break a;
                case 3:
                    $this.$vertices0 = cbggg_VertexBufferObjectWithVAO__init_($isStatic, $maxVertices, $attributes);
                    $this.$indices = cbggg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
                    $this.$isVertexArray = 0;
                    break a;
                case 4:
                    break b;
                default:
                    break b;
            }
            $this.$vertices0 = cbggg_VertexBufferObject__init_($isStatic, $maxVertices, $attributes);
            $this.$indices = cbggg_IndexBufferObject__init_($isStatic, $maxIndices);
            $this.$isVertexArray = 0;
            break a;
        }
        $this.$vertices0 = cbggg_VertexArray__init_($maxVertices, $attributes);
        $this.$indices = cbggg_IndexArray__init_($maxIndices);
        $this.$isVertexArray = 1;
    }
    cbgg_Mesh_addManagedMesh(cbg_Gdx_app, $this);
}
function cbgg_Mesh_setVertices($this, $vertices, $offset, $count) {
    $this.$vertices0.$setVertices0($vertices, $offset, $count);
    return $this;
}
function cbgg_Mesh_setIndices($this, $indices) {
    var var$2;
    var$2 = $indices.data;
    $this.$indices.$setIndices0($indices, 0, var$2.length);
    return $this;
}
function cbgg_Mesh_bind($this, $shader) {
    $this.$bind0($shader, null);
}
function cbgg_Mesh_bind0($this, $shader, $locations) {
    $this.$vertices0.$bind0($shader, $locations);
    if ($this.$instances !== null && $this.$instances.$getNumInstances() > 0)
        $this.$instances.$bind0($shader, $locations);
    if ($this.$indices.$getNumIndices() > 0)
        $this.$indices.$bind();
}
function cbgg_Mesh_unbind($this, $shader) {
    $this.$unbind($shader, null);
}
function cbgg_Mesh_unbind0($this, $shader, $locations) {
    $this.$vertices0.$unbind($shader, $locations);
    if ($this.$instances !== null && $this.$instances.$getNumInstances() > 0)
        $this.$instances.$unbind($shader, $locations);
    if ($this.$indices.$getNumIndices() > 0)
        $this.$indices.$unbind0();
}
function cbgg_Mesh_render($this, $shader, $primitiveType, $offset, $count) {
    $this.$render1($shader, $primitiveType, $offset, $count, $this.$autoBind);
}
function cbgg_Mesh_render0($this, $shader, $primitiveType, $offset, $count, $autoBind) {
    var $buffer, $oldPosition, $oldLimit, $numInstances, var$10, var$11, var$12;
    if (!$count)
        return;
    if ($autoBind)
        $this.$bind1($shader);
    if ($this.$isVertexArray) {
        if ($this.$indices.$getNumIndices() <= 0)
            cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        else {
            $buffer = $this.$indices.$getBuffer0();
            $oldPosition = jn_Buffer_position($buffer);
            $oldLimit = jn_Buffer_limit($buffer);
            $buffer.$position2($offset);
            $buffer.$limit0($offset + $count | 0);
            cbg_Gdx_gl20.$glDrawElements($primitiveType, $count, 5123, $buffer);
            $buffer.$position2($oldPosition);
            $buffer.$limit0($oldLimit);
        }
    } else {
        $numInstances = 0;
        if ($this.$isInstanced)
            $numInstances = $this.$instances.$getNumInstances();
        if ($this.$indices.$getNumIndices() <= 0) {
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawArraysInstanced($primitiveType, $offset, $count, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        } else {
            if (($count + $offset | 0) > $this.$indices.$getNumMaxIndices()) {
                var$10 = new cbgu_GdxRuntimeException;
                var$11 = (((((jl_StringBuilder__init_()).$append($rt_s(485))).$append0($count)).$append($rt_s(486))).$append0($offset)).$append($rt_s(487));
                var$12 = $this.$indices;
                cbgu_GdxRuntimeException__init_2(var$10, ((var$11.$append0(var$12.$getNumMaxIndices())).$append($rt_s(289))).$toString());
                $rt_throw(var$10);
            }
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawElementsInstanced($primitiveType, $count, 5123, $offset * 2 | 0, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawElements0($primitiveType, $count, 5123, $offset * 2 | 0);
        }
    }
    if ($autoBind)
        $this.$unbind1($shader);
}
function cbgg_Mesh_getIndicesBuffer($this) {
    return $this.$indices.$getBuffer0();
}
function cbgg_Mesh_addManagedMesh($app, $mesh) {
    var $managedResources;
    cbgg_Mesh_$callClinit();
    $managedResources = cbgg_Mesh_meshes.$get1($app);
    if ($managedResources === null)
        $managedResources = cbgu_Array__init_();
    $managedResources.$add3($mesh);
    cbgg_Mesh_meshes.$put1($app, $managedResources);
}
function cbgg_Mesh__clinit_() {
    cbgg_Mesh_meshes = ju_HashMap__init_();
}
function cgxgbw_WebFiles() {
    jl_Object.call(this);
    this.$preloader1 = null;
}
function cgxgbw_WebFiles__init_(var_0) {
    var var_1 = new cgxgbw_WebFiles();
    cgxgbw_WebFiles__init_0(var_1, var_0);
    return var_1;
}
function cgxgbw_WebFiles__init_0($this, $preloader) {
    jl_Object__init_0($this);
    $this.$preloader1 = $preloader;
}
function cgxgbw_WebFiles_getFileHandle($this, $path, $type) {
    cbg_Files$FileType_$callClinit();
    if ($type === cbg_Files$FileType_Internal)
        return cgxgbw_WebFileHandle__init_($this.$preloader1, $path, $type);
    $rt_throw(cbgu_GdxRuntimeException__init_(((((jl_StringBuilder__init_()).$append($rt_s(466))).$append9($type)).$append($rt_s(488))).$toString()));
}
function cgxgbw_WebFiles_internal($this, $path) {
    var var$2, var$3;
    var$2 = new cgxgbw_WebFileHandle;
    var$3 = $this.$preloader1;
    cbg_Files$FileType_$callClinit();
    cgxgbw_WebFileHandle__init_0(var$2, var$3, $path, cbg_Files$FileType_Internal);
    return var$2;
}
function ju_HashMap$HashEntry() {
    var a = this; ju_MapEntry.call(a);
    a.$origKeyHash = 0;
    a.$next3 = null;
}
function ju_HashMap$HashEntry__init_(var_0, var_1) {
    var var_2 = new ju_HashMap$HashEntry();
    ju_HashMap$HashEntry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_HashMap$HashEntry__init_0($this, $theKey, $hash) {
    ju_MapEntry__init_0($this, $theKey, null);
    $this.$origKeyHash = $hash;
}
var cbgu_ObjectSet = $rt_classWithoutFields();
function cbgu_ObjectSet_tableSize($capacity, $loadFactor) {
    var $tableSize;
    if ($capacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(489))).$append0($capacity)).$toString()));
    $tableSize = cbgm_MathUtils_nextPowerOfTwo(jl_Math_max(2, jl_Math_ceil($capacity / $loadFactor) | 0));
    if ($tableSize <= 1073741824)
        return $tableSize;
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(490))).$append0($capacity)).$toString()));
}
var jur_EOISet = $rt_classWithoutFields(jur_AbstractSet);
function jur_EOISet__init_() {
    var var_0 = new jur_EOISet();
    jur_EOISet__init_0(var_0);
    return var_0;
}
function jur_EOISet__init_0($this) {
    jur_AbstractSet__init_($this);
}
function jur_EOISet_matches($this, $stringIndex, $testString, $matchResult) {
    var $rightBound;
    $rightBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getRightBound() : $testString.$length();
    if ($stringIndex < $rightBound)
        return (-1);
    $matchResult.$hitEnd = 1;
    $matchResult.$requireEnd = 1;
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_EOISet_hasConsumed($this, $matchResult) {
    return 0;
}
function cbgg_FreeTypePixmap() {
    cbgg_Pixmap.call(this);
    this.$buffer4 = null;
}
function cbgg_FreeTypePixmap__init_0(var_0, var_1, var_2) {
    var var_3 = new cbgg_FreeTypePixmap();
    cbgg_FreeTypePixmap__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_FreeTypePixmap__init_($this, $width, $height, $format) {
    cbgg_Pixmap__init_2($this, $width, $height, $format);
}
function cbgg_FreeTypePixmap_setPixelsNull($this) {
    $this.$pixels = null;
}
function cbgg_FreeTypePixmap_getRealPixels($this) {
    var var$1, var$2, var$3;
    if ($this.$getWidth() && $this.$getHeight()) {
        if ($this.$pixels !== null)
            return $this.$buffer4;
        var$1 = $this.$getContext();
        var$2 = $this.$getWidth();
        var$3 = $this.$getHeight();
        $this.$pixels = var$1.getImageData(0.0, 0.0, var$2, var$3).data;
        $this.$buffer4 = cbgg_FreeTypeUtil_newDirectReadWriteByteBuffer0($this.$pixels);
        return $this.$buffer4;
    }
    return cbgg_FreeTypeUtil_newDirectReadWriteByteBuffer1();
}
function cbgg_FreeTypePixmap_putPixelsBack($this, $pixels) {
    var $typedArray, var$3, var$4, var$5;
    if ($this.$getWidth() && $this.$getHeight()) {
        $typedArray = cbgg_FreeTypeUtil_getTypedArray($pixels);
        var$3 = $this.$getWidth();
        var$4 = $this.$getHeight();
        var$5 = $this.$getContext();
        cbgg_FreeTypePixmap_putPixelsBack$js_body$_4($typedArray, var$3, var$4, var$5);
        return;
    }
}
function cbgg_FreeTypePixmap_putPixelsBack$js_body$_4(var$1, var$2, var$3, var$4) {
    var imgData = var$4.createImageData(var$2, var$3);
    var data = imgData.data;
    for (var i = 0, len = var$2 * var$3 * 4;i < len;i++) {
        data[i] = var$1[i] & 0xff;
    }
    var$4.putImageData(imgData, 0, 0);
}
var cbgg_FreeTypeUtil = $rt_classWithoutFields();
function cbgg_FreeTypeUtil_newDirectReadWriteByteBuffer1() {
    return jn_ByteBuffer_allocate(0);
}
function cbgg_FreeTypeUtil_newDirectReadWriteByteBuffer0($int8ArrayWrapper) {
    var $byteLength, $copyBytes, $i, var$5, $b;
    $byteLength = $int8ArrayWrapper.byteLength;
    $copyBytes = $rt_createByteArray($byteLength);
    $i = 0;
    while ($i < $byteLength) {
        var$5 = $copyBytes.data;
        $b = $int8ArrayWrapper[$i];
        var$5[$i] = $b;
        $i = $i + 1 | 0;
    }
    return jn_ByteBuffer_wrap($copyBytes);
}
function cbgg_FreeTypeUtil_newDirectReadWriteByteBuffer($int8ArrayWrapper, $capacity, $arrayOffset) {
    var $byteLength, $copyBytes, $i, var$7, $b;
    $byteLength = $int8ArrayWrapper.byteLength;
    $copyBytes = $rt_createByteArray($byteLength);
    $i = 0;
    while ($i < $byteLength) {
        var$7 = $copyBytes.data;
        $b = $int8ArrayWrapper[$i];
        var$7[$i] = $b;
        $i = $i + 1 | 0;
    }
    return jn_ByteBuffer_wrap0($copyBytes, $arrayOffset, $capacity);
}
function cbgg_FreeTypeUtil_getTypedArray($buffer) {
    return cbgg_FreeTypeUtil_getTypedArray$js_body$_5($buffer);
}
function cbgg_FreeTypeUtil_getTypedArray$js_body$_5(var$1) {
    var typedArray = var$1.$array0.data;
    return typedArray;
}
function cbgu_ObjectIntMap() {
    var a = this; jl_Object.call(a);
    a.$size14 = 0;
    a.$keyTable3 = null;
    a.$valueTable2 = null;
    a.$loadFactor4 = 0.0;
    a.$threshold4 = 0;
    a.$shift3 = 0;
    a.$mask5 = 0;
}
function cbgu_ObjectIntMap__init_() {
    var var_0 = new cbgu_ObjectIntMap();
    cbgu_ObjectIntMap__init_0(var_0);
    return var_0;
}
function cbgu_ObjectIntMap__init_1(var_0, var_1) {
    var var_2 = new cbgu_ObjectIntMap();
    cbgu_ObjectIntMap__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_ObjectIntMap__init_0($this) {
    cbgu_ObjectIntMap__init_2($this, 51, 0.800000011920929);
}
function cbgu_ObjectIntMap__init_2($this, $initialCapacity, $loadFactor) {
    var $tableSize;
    jl_Object__init_0($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor4 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold4 = $tableSize * $loadFactor | 0;
        $this.$mask5 = $tableSize - 1 | 0;
        $this.$shift3 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask5));
        $this.$keyTable3 = $rt_createArray(jl_Object, $tableSize);
        $this.$valueTable2 = $rt_createIntArray($tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(24))).$append2($loadFactor)).$toString()));
}
function cbgu_ObjectIntMap_place($this, $item) {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item.$hashCode0()), Long_create(2135587861, 2654435769)), $this.$shift3));
}
function cbgu_ObjectIntMap_locateKey($this, $key) {
    var $keyTable, $i, $other;
    if ($key === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(407)));
    $keyTable = $this.$keyTable3;
    $i = $this.$place1($key);
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if ($other.$equals($key))
            break;
        $i = ($i + 1 | 0) & $this.$mask5;
    }
    return $i;
}
function cbgu_ObjectIntMap_put($this, $key, $value) {
    var $i, var$4;
    $i = $this.$locateKey1($key);
    if ($i >= 0) {
        $this.$valueTable2.data[$i] = $value;
        return;
    }
    var$4 =  -($i + 1 | 0) | 0;
    $this.$keyTable3.data[var$4] = $key;
    $this.$valueTable2.data[var$4] = $value;
    var$4 = $this.$size14 + 1 | 0;
    $this.$size14 = var$4;
    if (var$4 >= $this.$threshold4)
        cbgu_ObjectIntMap_resize($this, $this.$keyTable3.data.length << 1);
}
function cbgu_ObjectIntMap_putResize($this, $key, $value) {
    var $keyTable, $i, var$5;
    $keyTable = $this.$keyTable3;
    $i = $this.$place1($key);
    while (true) {
        var$5 = $keyTable.data;
        if (var$5[$i] === null)
            break;
        $i = ($i + 1 | 0) & $this.$mask5;
    }
    var$5[$i] = $key;
    $this.$valueTable2.data[$i] = $value;
}
function cbgu_ObjectIntMap_get($this, $key, $defaultValue) {
    var $i;
    $i = $this.$locateKey1($key);
    if ($i >= 0)
        $defaultValue = $this.$valueTable2.data[$i];
    return $defaultValue;
}
function cbgu_ObjectIntMap_resize($this, $newSize) {
    var $oldCapacity, $oldKeyTable, $oldValueTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable3.data.length;
        $this.$threshold4 = $newSize * $this.$loadFactor4 | 0;
        $this.$mask5 = $newSize - 1 | 0;
        $this.$shift3 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask5));
        $oldKeyTable = $this.$keyTable3;
        $oldValueTable = $this.$valueTable2;
        $this.$keyTable3 = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable2 = $rt_createIntArray($newSize);
        if ($this.$size14 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null)
                    cbgu_ObjectIntMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function cgxgbwp_AssetDownloadImpl$5$1() {
    var a = this; jl_Object.call(a);
    a.$val$url0 = null;
    a.$val$image = null;
    a.$this$10 = null;
}
function cgxgbwp_AssetDownloadImpl$5$1__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgbwp_AssetDownloadImpl$5$1();
    cgxgbwp_AssetDownloadImpl$5$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgbwp_AssetDownloadImpl$5$1__init_0($this, $this$1, var$2, var$3) {
    $this.$this$10 = $this$1;
    $this.$val$url0 = var$2;
    $this.$val$image = var$3;
    jl_Object__init_0($this);
}
function cgxgbwp_AssetDownloadImpl$5$1_handleEvent($this, $evt) {
    if ($rt_str($evt.type).$equals($rt_s(491)))
        $this.$this$10.$val$listener0.$onFailure($this.$val$url0);
    else
        $this.$this$10.$val$listener0.$onSuccess0($this.$val$url0, $this.$val$image);
    $this.$this$10.$this$040.$subtractQueue();
}
function cgxgbwp_AssetDownloadImpl$5$1_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
var jur_AbstractCharClass$LazyUpper = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyUpper__init_() {
    var var_0 = new jur_AbstractCharClass$LazyUpper();
    jur_AbstractCharClass$LazyUpper__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyUpper__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyUpper_computeValue($this) {
    return (jur_CharClass__init_()).$add0(65, 90);
}
function jn_ByteBuffer() {
    var a = this; jn_Buffer.call(a);
    a.$start12 = 0;
    a.$array0 = null;
    a.$order0 = null;
}
function jn_ByteBuffer__init_($this, $start, $capacity, $array, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    jn_ByteOrder_$callClinit();
    $this.$order0 = jn_ByteOrder_BIG_ENDIAN;
    $this.$start12 = $start;
    $this.$array0 = $array;
    $this.$position3 = $position;
    $this.$limit = $limit;
}
function jn_ByteBuffer_allocateDirect($capacity) {
    if ($capacity >= 0)
        return jn_ByteBufferImpl__init_($capacity, 1);
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(492))).$append0($capacity)).$toString()));
}
function jn_ByteBuffer_allocate($capacity) {
    if ($capacity >= 0)
        return jn_ByteBufferImpl__init_($capacity, 0);
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(492))).$append0($capacity)).$toString()));
}
function jn_ByteBuffer_wrap0($array, $offset, $length) {
    return jn_ByteBufferImpl__init_0(0, $array.data.length, $array, $offset, $offset + $length | 0, 0, 0);
}
function jn_ByteBuffer_wrap($array) {
    return jn_ByteBuffer_wrap0($array, 0, $array.data.length);
}
function jn_ByteBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i, var$9;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(493))).$append0(var$6)).$append($rt_s(294))).$append0(var$5)).$toString()));
            if (jn_Buffer_remaining($this) < $length)
                $rt_throw(jn_BufferUnderflowException__init_());
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_1(((((jl_StringBuilder__init_()).$append($rt_s(295))).$append0($length)).$append($rt_s(296))).$toString()));
            $pos = $this.$position3 + $this.$start12 | 0;
            $i = 0;
            while ($i < $length) {
                var$6 = $offset + 1 | 0;
                var$9 = $this.$array0.data;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = var$9[$pos];
                $i = $i + 1 | 0;
                $offset = var$6;
                $pos = var$5;
            }
            $this.$position3 = $this.$position3 + $length | 0;
            return $this;
        }
    }
    var$4 = $dst.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(297))).$append0($offset)).$append($rt_s(51))).$append0(var$4.length)).$append($rt_s(289))).$toString()));
}
function jn_ByteBuffer_get0($this, $dst) {
    return $this.$get14($dst, 0, $dst.data.length);
}
function jn_ByteBuffer_put0($this, $src) {
    return $this.$put0($src.$array0, $src.$start12 + $src.$position3 | 0, jn_Buffer_remaining($src));
}
function jn_ByteBuffer_put1($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i, var$9;
    if (!$length)
        return $this;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(494))).$append0(var$6)).$append($rt_s(294))).$append0(var$5)).$toString()));
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_1(((((jl_StringBuilder__init_()).$append($rt_s(295))).$append0($length)).$append($rt_s(296))).$toString()));
            $pos = $this.$position3 + $this.$start12 | 0;
            $i = 0;
            while ($i < $length) {
                var$9 = $this.$array0.data;
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                var$9[$pos] = var$4[$offset];
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position3 = $this.$position3 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(297))).$append0($offset)).$append($rt_s(51))).$append0(var$4.length)).$append($rt_s(289))).$toString()));
}
function jn_ByteBuffer_put($this, $src) {
    return $this.$put0($src, 0, $src.data.length);
}
function jn_ByteBuffer_hasArray($this) {
    return 1;
}
function jn_ByteBuffer_array($this) {
    return $this.$array0;
}
function jn_ByteBuffer_order($this, $bo) {
    $this.$order0 = $bo;
    return $this;
}
function jn_ByteBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_ByteBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_ByteBuffer_limit($this, $newLimit) {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
}
function jn_ByteBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_ByteBuffer_flip0($this) {
    return jn_ByteBuffer_flip($this);
}
function jn_ByteBuffer_limit0($this, var$1) {
    return $this.$limit4(var$1);
}
function jn_ByteBuffer_position0($this, var$1) {
    return $this.$position1(var$1);
}
function jn_ByteBufferImpl() {
    var a = this; jn_ByteBuffer.call(a);
    a.$direct = 0;
    a.$readOnly9 = 0;
}
function jn_ByteBufferImpl__init_(var_0, var_1) {
    var var_2 = new jn_ByteBufferImpl();
    jn_ByteBufferImpl__init_1(var_2, var_0, var_1);
    return var_2;
}
function jn_ByteBufferImpl__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new jn_ByteBufferImpl();
    jn_ByteBufferImpl__init_2(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function jn_ByteBufferImpl__init_1($this, $capacity, $direct) {
    jn_ByteBufferImpl__init_2($this, 0, $capacity, $rt_createByteArray($capacity), 0, $capacity, $direct, 0);
}
function jn_ByteBufferImpl__init_2($this, $start, $capacity, $array, $position, $limit, $direct, $readOnly) {
    jn_ByteBuffer__init_($this, $start, $capacity, $array, $position, $limit);
    $this.$direct = $direct;
    $this.$readOnly9 = $readOnly;
}
function jn_ByteBufferImpl_get($this, $index) {
    if ($index >= 0 && $index < $this.$limit)
        return $this.$array0.data[$this.$start12 + $index | 0];
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(309))).$append0($index)).$append($rt_s(51))).$append0($this.$limit)).$append($rt_s(289))).$toString()));
}
function jn_ByteBufferImpl_isReadOnly($this) {
    return $this.$readOnly9;
}
function jn_ByteBufferImpl_asCharBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 2 | 0;
    var$2 = $this.$order0;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_BIG_ENDIAN)
        return jn_CharBufferOverByteBufferLittleEndian__init_($this.$start12 + $this.$position3 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
    return jn_CharBufferOverByteBufferBigEndian__init_($this.$start12 + $this.$position3 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
}
function jn_ByteBufferImpl_asShortBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 2 | 0;
    var$2 = $this.$order0;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_BIG_ENDIAN)
        return jn_ShortBufferOverByteBufferLittleEndian__init_($this.$start12 + $this.$position3 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
    return jn_ShortBufferOverByteBufferBigEndian__init_($this.$start12 + $this.$position3 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
}
function jn_ByteBufferImpl_getInt($this, $index) {
    var $a, $b, $c, $d, var$6;
    if ($index >= 0 && ($index + 3 | 0) < $this.$limit) {
        $a = $this.$array0.data[$this.$start12 + $index | 0] & 255;
        $b = $this.$array0.data[($this.$start12 + $index | 0) + 1 | 0] & 255;
        $c = $this.$array0.data[($this.$start12 + $index | 0) + 2 | 0] & 255;
        $d = $this.$array0.data[($this.$start12 + $index | 0) + 3 | 0] & 255;
        var$6 = $this.$order0;
        jn_ByteOrder_$callClinit();
        if (var$6 !== jn_ByteOrder_BIG_ENDIAN)
            return $d << 24 | $c << 16 | $b << 8 | $a;
        return $a << 24 | $b << 16 | $c << 8 | $d;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(309))).$append0($index)).$append($rt_s(51))).$append0($this.$limit - 3 | 0)).$append($rt_s(289))).$toString()));
}
function jn_ByteBufferImpl_putInt($this, $index, $value) {
    var var$3;
    if ($this.$readOnly9)
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($index >= 0 && ($index + 3 | 0) < $this.$limit) {
        var$3 = $this.$order0;
        jn_ByteOrder_$callClinit();
        if (var$3 !== jn_ByteOrder_BIG_ENDIAN) {
            $this.$array0.data[$this.$start12 + $index | 0] = $value << 24 >> 24;
            $this.$array0.data[($this.$start12 + $index | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
            $this.$array0.data[($this.$start12 + $index | 0) + 2 | 0] = $value >> 16 << 24 >> 24;
            $this.$array0.data[($this.$start12 + $index | 0) + 3 | 0] = $value >> 24 << 24 >> 24;
        } else {
            $this.$array0.data[$this.$start12 + $index | 0] = $value >> 24 << 24 >> 24;
            $this.$array0.data[($this.$start12 + $index | 0) + 1 | 0] = $value >> 16 << 24 >> 24;
            $this.$array0.data[($this.$start12 + $index | 0) + 2 | 0] = $value >> 8 << 24 >> 24;
            $this.$array0.data[($this.$start12 + $index | 0) + 3 | 0] = $value << 24 >> 24;
        }
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_1(((((((jl_StringBuilder__init_()).$append($rt_s(309))).$append0($index)).$append($rt_s(51))).$append0($this.$limit - 3 | 0)).$append($rt_s(289))).$toString()));
}
function jn_ByteBufferImpl_asIntBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    var$2 = $this.$order0;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_BIG_ENDIAN)
        return jn_IntBufferOverByteBufferLittleEndian__init_($this.$start12 + $this.$position3 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
    return jn_IntBufferOverByteBufferBigEndian__init_($this.$start12 + $this.$position3 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
}
function jn_ByteBufferImpl_asLongBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 8 | 0;
    var$2 = $this.$order0;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_BIG_ENDIAN)
        return jn_LongBufferOverByteBufferLittleEndian__init_($this.$start12 + $this.$position3 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
    return jn_LongBufferOverByteBufferBigEndian__init_($this.$start12 + $this.$position3 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
}
function jn_ByteBufferImpl_asFloatBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    var$2 = $this.$order0;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_LITTLE_ENDIAN)
        return jn_FloatBufferOverByteBufferLittleEndian__init_($this.$start12 + $this.$position3 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
    return jn_FloatBufferOverByteBufferBigEndian__init_($this.$start12 + $this.$position3 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
}
function jn_ByteBufferImpl_asDoubleBuffer($this) {
    var $sz, $result, var$3;
    $sz = jn_Buffer_remaining($this) / 8 | 0;
    $result = new jn_DoubleBufferOverByteBuffer;
    var$3 = $this.$start12 + $this.$position3 | 0;
    jn_DoubleBufferOverByteBuffer__init_0($result, var$3, $sz, $this, 0, $sz, $this.$isReadOnly());
    $result.$byteOrder = $this.$order0;
    return $result;
}
function cbgm_Plane() {
    var a = this; jl_Object.call(a);
    a.$normal = null;
    a.$d = 0.0;
}
function cbgm_Plane__init_(var_0, var_1) {
    var var_2 = new cbgm_Plane();
    cbgm_Plane__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgm_Plane__init_0($this, $normal, $d) {
    jl_Object__init_0($this);
    $this.$normal = cbgm_Vector3__init_();
    $this.$d = 0.0;
    ($this.$normal.$set2($normal)).$nor();
    $this.$d = $d;
}
function cbgm_Plane_set($this, $point1, $point2, $point3) {
    ((($this.$normal.$set2($point1)).$sub($point2)).$crs($point2.$x3 - $point3.$x3, $point2.$y3 - $point3.$y3, $point2.$z0 - $point3.$z0)).$nor();
    $this.$d =  -$point1.$dot($this.$normal);
}
var cbgggf_FreeType$Size = $rt_classWithoutFields(cbgggf_FreeType$Pointer);
function cbgggf_FreeType$Size__init_(var_0) {
    var var_1 = new cbgggf_FreeType$Size();
    cbgggf_FreeType$Size__init_0(var_1, var_0);
    return var_1;
}
function cbgggf_FreeType$Size__init_0($this, $address) {
    cbgggf_FreeType$Pointer__init_0($this, $address);
}
function cbgggf_FreeType$Size_getMetrics($this) {
    return cbgggf_FreeType$SizeMetrics__init_(Module._c_Size_getMetrics($this.$address));
}
function cbgm_Frustum() {
    var a = this; jl_Object.call(a);
    a.$planes = null;
    a.$planePoints = null;
    a.$planePointsArray = null;
}
var cbgm_Frustum_clipSpacePlanePoints = null;
var cbgm_Frustum_clipSpacePlanePointsArray = null;
var cbgm_Frustum_tmpV = null;
function cbgm_Frustum_$callClinit() {
    cbgm_Frustum_$callClinit = $rt_eraseClinit(cbgm_Frustum);
    cbgm_Frustum__clinit_();
}
function cbgm_Frustum__init_() {
    var var_0 = new cbgm_Frustum();
    cbgm_Frustum__init_0(var_0);
    return var_0;
}
function cbgm_Frustum__init_0($this) {
    var $i;
    cbgm_Frustum_$callClinit();
    jl_Object__init_0($this);
    $this.$planes = $rt_createArray(cbgm_Plane, 6);
    $this.$planePoints = $rt_createArrayFromData(cbgm_Vector3, [cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_()]);
    $this.$planePointsArray = $rt_createFloatArray(24);
    $i = 0;
    while ($i < 6) {
        $this.$planes.data[$i] = cbgm_Plane__init_(cbgm_Vector3__init_(), 0.0);
        $i = $i + 1 | 0;
    }
}
function cbgm_Frustum_update($this, $inverseProjectionView) {
    var $i, $j, $v, var$5, var$6, var$7;
    cbgm_Frustum_$callClinit();
    jl_System_arraycopy(cbgm_Frustum_clipSpacePlanePointsArray, 0, $this.$planePointsArray, 0, cbgm_Frustum_clipSpacePlanePointsArray.data.length);
    cbgm_Matrix4_prj($inverseProjectionView.$val, $this.$planePointsArray, 0, 8, 3);
    $i = 0;
    $j = 0;
    while ($i < 8) {
        $v = $this.$planePoints.data[$i];
        var$5 = $this.$planePointsArray.data;
        var$6 = $j + 1 | 0;
        $v.$x3 = var$5[$j];
        var$5 = $this.$planePointsArray.data;
        var$7 = var$6 + 1 | 0;
        $v.$y3 = var$5[var$6];
        var$5 = $this.$planePointsArray.data;
        $j = var$7 + 1 | 0;
        $v.$z0 = var$5[var$7];
        $i = $i + 1 | 0;
    }
    $this.$planes.data[0].$set10($this.$planePoints.data[1], $this.$planePoints.data[0], $this.$planePoints.data[2]);
    $this.$planes.data[1].$set10($this.$planePoints.data[4], $this.$planePoints.data[5], $this.$planePoints.data[7]);
    $this.$planes.data[2].$set10($this.$planePoints.data[0], $this.$planePoints.data[4], $this.$planePoints.data[3]);
    $this.$planes.data[3].$set10($this.$planePoints.data[5], $this.$planePoints.data[1], $this.$planePoints.data[6]);
    $this.$planes.data[4].$set10($this.$planePoints.data[2], $this.$planePoints.data[3], $this.$planePoints.data[6]);
    $this.$planes.data[5].$set10($this.$planePoints.data[4], $this.$planePoints.data[0], $this.$planePoints.data[1]);
}
function cbgm_Frustum__clinit_() {
    var $j, var$2, var$3, var$4, $v, var$6, var$7, var$8;
    cbgm_Frustum_clipSpacePlanePoints = $rt_createArrayFromData(cbgm_Vector3, [cbgm_Vector3__init_0((-1.0), (-1.0), (-1.0)), cbgm_Vector3__init_0(1.0, (-1.0), (-1.0)), cbgm_Vector3__init_0(1.0, 1.0, (-1.0)), cbgm_Vector3__init_0((-1.0), 1.0, (-1.0)), cbgm_Vector3__init_0((-1.0), (-1.0), 1.0), cbgm_Vector3__init_0(1.0, (-1.0), 1.0), cbgm_Vector3__init_0(1.0, 1.0, 1.0), cbgm_Vector3__init_0((-1.0), 1.0, 1.0)]);
    cbgm_Frustum_clipSpacePlanePointsArray = $rt_createFloatArray(24);
    $j = 0;
    var$2 = cbgm_Frustum_clipSpacePlanePoints.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $v = var$2[var$4];
        var$6 = cbgm_Frustum_clipSpacePlanePointsArray.data;
        var$7 = $j + 1 | 0;
        var$6[$j] = $v.$x3;
        var$6 = cbgm_Frustum_clipSpacePlanePointsArray.data;
        var$8 = var$7 + 1 | 0;
        var$6[var$7] = $v.$y3;
        var$6 = cbgm_Frustum_clipSpacePlanePointsArray.data;
        $j = var$8 + 1 | 0;
        var$6[var$8] = $v.$z0;
        var$4 = var$4 + 1 | 0;
    }
    cbgm_Frustum_tmpV = cbgm_Vector3__init_();
}
function cbgmc_Ray() {
    var a = this; jl_Object.call(a);
    a.$origin = null;
    a.$direction0 = null;
}
var cbgmc_Ray_tmp = null;
function cbgmc_Ray_$callClinit() {
    cbgmc_Ray_$callClinit = $rt_eraseClinit(cbgmc_Ray);
    cbgmc_Ray__clinit_();
}
function cbgmc_Ray__init_(var_0, var_1) {
    var var_2 = new cbgmc_Ray();
    cbgmc_Ray__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgmc_Ray__init_0($this, $origin, $direction) {
    cbgmc_Ray_$callClinit();
    jl_Object__init_0($this);
    $this.$origin = cbgm_Vector3__init_();
    $this.$direction0 = cbgm_Vector3__init_();
    $this.$origin.$set2($origin);
    ($this.$direction0.$set2($direction)).$nor();
}
function cbgmc_Ray__clinit_() {
    cbgmc_Ray_tmp = cbgm_Vector3__init_();
}
var jnc_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException);
function jnc_BufferUnderflowException__init_() {
    var var_0 = new jnc_BufferUnderflowException();
    jnc_BufferUnderflowException__init_0(var_0);
    return var_0;
}
function jnc_BufferUnderflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function jur_MultiLineSOLSet() {
    jur_AbstractSet.call(this);
    this.$lt1 = null;
}
function jur_MultiLineSOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineSOLSet();
    jur_MultiLineSOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineSOLSet__init_0($this, $lt) {
    jur_AbstractSet__init_($this);
    $this.$lt1 = $lt;
}
function jur_MultiLineSOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var var$4, var$5;
    a: {
        if ($strIndex != $matchResult.$getRightBound()) {
            if (!$strIndex)
                break a;
            if ($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound())
                break a;
            var$4 = $this.$lt1;
            var$5 = $strIndex - 1 | 0;
            if (var$4.$isAfterLineTerminator($testString.$charAt(var$5), $testString.$charAt($strIndex)))
                break a;
        }
        return (-1);
    }
    return $this.$next.$matches($strIndex, $testString, $matchResult);
}
function jur_MultiLineSOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
var cbgggf_FreeTypeFontGenerator$Hinting = $rt_classWithoutFields(jl_Enum);
var cbgggf_FreeTypeFontGenerator$Hinting_None = null;
var cbgggf_FreeTypeFontGenerator$Hinting_Slight = null;
var cbgggf_FreeTypeFontGenerator$Hinting_Medium = null;
var cbgggf_FreeTypeFontGenerator$Hinting_Full = null;
var cbgggf_FreeTypeFontGenerator$Hinting_AutoSlight = null;
var cbgggf_FreeTypeFontGenerator$Hinting_AutoMedium = null;
var cbgggf_FreeTypeFontGenerator$Hinting_AutoFull = null;
var cbgggf_FreeTypeFontGenerator$Hinting_$VALUES = null;
function cbgggf_FreeTypeFontGenerator$Hinting_$callClinit() {
    cbgggf_FreeTypeFontGenerator$Hinting_$callClinit = $rt_eraseClinit(cbgggf_FreeTypeFontGenerator$Hinting);
    cbgggf_FreeTypeFontGenerator$Hinting__clinit_();
}
function cbgggf_FreeTypeFontGenerator$Hinting__init_(var_0, var_1) {
    var var_2 = new cbgggf_FreeTypeFontGenerator$Hinting();
    cbgggf_FreeTypeFontGenerator$Hinting__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgggf_FreeTypeFontGenerator$Hinting_values() {
    cbgggf_FreeTypeFontGenerator$Hinting_$callClinit();
    return cbgggf_FreeTypeFontGenerator$Hinting_$VALUES.$clone();
}
function cbgggf_FreeTypeFontGenerator$Hinting__init_0($this, var$1, var$2) {
    cbgggf_FreeTypeFontGenerator$Hinting_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgggf_FreeTypeFontGenerator$Hinting__clinit_() {
    cbgggf_FreeTypeFontGenerator$Hinting_None = cbgggf_FreeTypeFontGenerator$Hinting__init_($rt_s(444), 0);
    cbgggf_FreeTypeFontGenerator$Hinting_Slight = cbgggf_FreeTypeFontGenerator$Hinting__init_($rt_s(495), 1);
    cbgggf_FreeTypeFontGenerator$Hinting_Medium = cbgggf_FreeTypeFontGenerator$Hinting__init_($rt_s(480), 2);
    cbgggf_FreeTypeFontGenerator$Hinting_Full = cbgggf_FreeTypeFontGenerator$Hinting__init_($rt_s(496), 3);
    cbgggf_FreeTypeFontGenerator$Hinting_AutoSlight = cbgggf_FreeTypeFontGenerator$Hinting__init_($rt_s(497), 4);
    cbgggf_FreeTypeFontGenerator$Hinting_AutoMedium = cbgggf_FreeTypeFontGenerator$Hinting__init_($rt_s(498), 5);
    cbgggf_FreeTypeFontGenerator$Hinting_AutoFull = cbgggf_FreeTypeFontGenerator$Hinting__init_($rt_s(499), 6);
    cbgggf_FreeTypeFontGenerator$Hinting_$VALUES = $rt_createArrayFromData(cbgggf_FreeTypeFontGenerator$Hinting, [cbgggf_FreeTypeFontGenerator$Hinting_None, cbgggf_FreeTypeFontGenerator$Hinting_Slight, cbgggf_FreeTypeFontGenerator$Hinting_Medium, cbgggf_FreeTypeFontGenerator$Hinting_Full, cbgggf_FreeTypeFontGenerator$Hinting_AutoSlight, cbgggf_FreeTypeFontGenerator$Hinting_AutoMedium, cbgggf_FreeTypeFontGenerator$Hinting_AutoFull]);
}
var otjc_JSString = $rt_classWithoutFields();
var cbgg_Pixmap$2 = $rt_classWithoutFields();
var cbgg_Pixmap$2_$SwitchMap$com$badlogic$gdx$graphics$Pixmap$DrawType = null;
function cbgg_Pixmap$2_$callClinit() {
    cbgg_Pixmap$2_$callClinit = $rt_eraseClinit(cbgg_Pixmap$2);
    cbgg_Pixmap$2__clinit_();
}
function cbgg_Pixmap$2__clinit_() {
    cbgg_Pixmap$2_$SwitchMap$com$badlogic$gdx$graphics$Pixmap$DrawType = $rt_createIntArray((cbgg_Pixmap$DrawType_values()).data.length);
    cbgg_Pixmap$2_$SwitchMap$com$badlogic$gdx$graphics$Pixmap$DrawType.data[jl_Enum_ordinal(cbgg_Pixmap$DrawType_FILL)] = 1;
    cbgg_Pixmap$2_$SwitchMap$com$badlogic$gdx$graphics$Pixmap$DrawType.data[jl_Enum_ordinal(cbgg_Pixmap$DrawType_STROKE)] = 2;
}
function cbggg_VertexBufferObject() {
    var a = this; jl_Object.call(a);
    a.$attributes2 = null;
    a.$buffer5 = null;
    a.$bufferHandle1 = 0;
    a.$isStatic0 = 0;
    a.$usage2 = 0;
    a.$isDirty1 = 0;
    a.$isBound1 = 0;
}
function cbggg_VertexBufferObject__init_(var_0, var_1, var_2) {
    var var_3 = new cbggg_VertexBufferObject();
    cbggg_VertexBufferObject__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_VertexBufferObject__init_0($this, $isStatic, $numVertices, $attributes) {
    jl_Object__init_0($this);
    $this.$isDirty1 = 0;
    $this.$isBound1 = 0;
    $this.$isStatic0 = $isStatic;
    $this.$attributes2 = $attributes;
    $this.$buffer5 = cbgu_BufferUtils_newFloatBuffer($rt_imul($this.$attributes2.$vertexSize / 4 | 0, $numVertices));
    $this.$buffer5.$flip0();
    $this.$bufferHandle1 = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage2 = !$isStatic ? 35048 : 35044;
}
function cbggg_VertexBufferObject_bufferChanged($this) {
    if ($this.$isBound1) {
        cbg_Gdx_gl20.$glBufferData(34962, jn_Buffer_limit($this.$buffer5), $this.$buffer5, $this.$usage2);
        $this.$isDirty1 = 0;
    }
}
function cbggg_VertexBufferObject_setVertices($this, $vertices, $offset, $count) {
    $this.$isDirty1 = 1;
    cbgu_BufferUtils_copy1($vertices, $this.$buffer5, $count, $offset);
    $this.$buffer5.$position2(0);
    $this.$buffer5.$limit0($count);
    cbggg_VertexBufferObject_bufferChanged($this);
}
function cbggg_VertexBufferObject_bind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, var$6, $attribute, $location;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle1);
    if ($this.$isDirty1) {
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$buffer5), $this.$buffer5, $this.$usage2);
        $this.$isDirty1 = 0;
    }
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes2);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$6 = $locations.data;
                $attribute = cbgg_VertexAttributes_get($this.$attributes2, $i);
                $location = var$6[$i];
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    if ($attribute.$usage != 4)
                        $shader.$setVertexAttribute($location, $attribute.$numComponents, 5126, 0, $this.$attributes2.$vertexSize, $attribute.$offset);
                    else
                        $shader.$setVertexAttribute($location, $attribute.$numComponents, 5121, 1, $this.$attributes2.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = cbgg_VertexAttributes_get($this.$attributes2, $i);
            $location = $shader.$getAttributeLocation($attribute.$alias);
            if ($location >= 0) {
                $shader.$enableVertexAttribute($location);
                if ($attribute.$usage != 4)
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, 5126, 0, $this.$attributes2.$vertexSize, $attribute.$offset);
                else
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, 5121, 1, $this.$attributes2.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound1 = 1;
}
function cbggg_VertexBufferObject_unbind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, $location;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes2);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                $shader.$disableVertexAttribute((cbgg_VertexAttributes_get($this.$attributes2, $i)).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    $shader.$disableVertexAttribute0($location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound1 = 0;
}
var cbggg_VertexArray = $rt_classWithoutFields(cbggg_VertexBufferObject);
function cbggg_VertexArray__init_(var_0, var_1) {
    var var_2 = new cbggg_VertexArray();
    cbggg_VertexArray__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_VertexArray__init_0($this, $numVertices, $attributes) {
    cbggg_VertexBufferObject__init_0($this, 0, $numVertices, $attributes);
}
var jur_AbstractCharClass$LazyLower = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyLower__init_() {
    var var_0 = new jur_AbstractCharClass$LazyLower();
    jur_AbstractCharClass$LazyLower__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyLower__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyLower_computeValue($this) {
    return (jur_CharClass__init_()).$add0(97, 122);
}
var oti_AsyncCallback = $rt_classWithoutFields(0);
var otja_XMLHttpRequest = $rt_classWithoutFields();
function cbgggf_FreeType$Library() {
    cbgggf_FreeType$Pointer.call(this);
    this.$fontData = null;
}
function cbgggf_FreeType$Library__init_(var_0) {
    var var_1 = new cbgggf_FreeType$Library();
    cbgggf_FreeType$Library__init_0(var_1, var_0);
    return var_1;
}
function cbgggf_FreeType$Library__init_0($this, $address) {
    cbgggf_FreeType$Pointer__init_0($this, $address);
    $this.$fontData = cbgu_LongMap__init_();
}
function cbgggf_FreeType$Library_dispose($this) {
    var var$1, $address;
    Module._c_Library_doneFreeType($this.$address);
    var$1 = ($this.$fontData.$values8()).$iterator();
    while (var$1.$hasNext()) {
        $address = var$1.$next0();
        cbgggf_FreeType_access$000($address.$intValue());
    }
}
function cbgggf_FreeType$Library_newFace($this, $fontFile, $faceIndex) {
    var $buffer, $input, $fileSize, $ex, $data, var$8, var$9, var$10, $$je;
    a: {
        b: {
            $buffer = null;
            if ($buffer === null) {
                $input = $fontFile.$read2();
                c: {
                    try {
                        d: {
                            try {
                                $fileSize = Long_lo(($fontFile.$length5()));
                                if (!$fileSize)
                                    break d;
                                $buffer = cbgu_BufferUtils_newByteBuffer($fileSize);
                                cbgu_StreamUtils_copyStream1($input, $buffer);
                                break c;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof ji_IOException) {
                                    $ex = $$je;
                                    break b;
                                } else {
                                    throw $$e;
                                }
                            }
                        }
                        try {
                            $data = cbgu_StreamUtils_copyStreamToByteArray($input, 16384);
                            var$8 = $data.data;
                            var$9 = var$8.length;
                            $buffer = cbgu_BufferUtils_newByteBuffer(var$9);
                            cbgu_BufferUtils_copy($data, 0, $buffer, var$9);
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof ji_IOException) {
                                $ex = $$je;
                                break b;
                            } else {
                                throw $$e;
                            }
                        }
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$10 = $$je;
                        break a;

                    }
                }
                cbgu_StreamUtils_closeQuietly($input);
            }
            return $this.$newMemoryFace($buffer, $faceIndex);
        }
        try {
            $rt_throw(cbgu_GdxRuntimeException__init_3($ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$10 = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly($input);
    $rt_throw(var$10);
}
function cbgggf_FreeType$Library_newMemoryFace($this, $buffer, $faceIndex) {
    var $buf, $addressToFree, var$5, var$6, var$7, $face;
    $buf = cbgg_FreeTypeUtil_getTypedArray($buffer);
    $addressToFree = $rt_createIntArray(1);
    var$5 = $addressToFree.data;
    var$5[0] = 0;
    var$6 = $this.$address;
    var$7 = jn_Buffer_remaining($buffer);
    $face = cbgggf_FreeType$Library_newMemoryFace$js_body$_6(var$6, $buf, var$7, $faceIndex, otji_JS_wrap($addressToFree));
    if ($face) {
        $this.$fontData.$put12(Long_fromInt($face), jl_Integer_valueOf(var$5[0]));
        return cbgggf_FreeType$Face__init_($face, $this);
    }
    if (var$5[0])
        cbgggf_FreeType_access$000(var$5[0]);
    $rt_throw(cbgu_GdxRuntimeException__init_((((jl_StringBuilder__init_()).$append($rt_s(500))).$append0(Module._c_FreeType_getLastErrorCode())).$toString()));
}
function cbgggf_FreeType$Library_createStroker($this) {
    var $stroker;
    $stroker = Module._c_Library_strokerNew($this.$address);
    if ($stroker)
        return cbgggf_FreeType$Stroker__init_($stroker);
    $rt_throw(cbgu_GdxRuntimeException__init_((((jl_StringBuilder__init_()).$append($rt_s(501))).$append0(Module._c_FreeType_getLastErrorCode())).$toString()));
}
function cbgggf_FreeType$Library_newMemoryFace$js_body$_6(var$1, var$2, var$3, var$4, var$5) {
    var address = Module._malloc(var$2.length);
    var$5[0] = address;
    Module.writeArrayToMemory(var$2, address);
    var ret = Module._c_Library_newMemoryFace(var$1, address, var$3, var$4);
    return ret;
}
function cbggg_PixmapTextureData() {
    var a = this; jl_Object.call(a);
    a.$pixmap0 = null;
    a.$format1 = null;
    a.$useMipMaps1 = 0;
    a.$disposePixmap0 = 0;
    a.$managed = 0;
}
function cbggg_PixmapTextureData__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cbggg_PixmapTextureData();
    cbggg_PixmapTextureData__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cbggg_PixmapTextureData__init_0($this, $pixmap, $format, $useMipMaps, $disposePixmap, $managed) {
    jl_Object__init_0($this);
    $this.$pixmap0 = $pixmap;
    if ($format === null)
        $format = $pixmap.$getFormat();
    $this.$format1 = $format;
    $this.$useMipMaps1 = $useMipMaps;
    $this.$disposePixmap0 = $disposePixmap;
    $this.$managed = $managed;
}
function cbggg_PixmapTextureData_disposePixmap($this) {
    return $this.$disposePixmap0;
}
function cbggg_PixmapTextureData_consumePixmap($this) {
    return $this.$pixmap0;
}
function cbggg_PixmapTextureData_getWidth($this) {
    return $this.$pixmap0.$getWidth();
}
function cbggg_PixmapTextureData_getHeight($this) {
    return $this.$pixmap0.$getHeight();
}
function cbggg_PixmapTextureData_getFormat($this) {
    return $this.$format1;
}
function cbggg_PixmapTextureData_useMipMaps($this) {
    return $this.$useMipMaps1;
}
function cbggg_PixmapTextureData_isManaged($this) {
    return $this.$managed;
}
function cbggg_PixmapTextureData_getType($this) {
    cbgg_TextureData$TextureDataType_$callClinit();
    return cbgg_TextureData$TextureDataType_Pixmap;
}
function cbggg_PixmapTextureData_consumeCustomData($this, $target) {
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(292)));
}
function cbggg_PixmapTextureData_isPrepared($this) {
    return 1;
}
function cbggg_PixmapTextureData_prepare($this) {
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(502)));
}
var jur_AbstractCharClass$LazyJavaTitleCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaTitleCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaTitleCase();
    jur_AbstractCharClass$LazyJavaTitleCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaTitleCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaTitleCase_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaTitleCase$1__init_($this);
}
function cbggg_IndexBufferObjectSubData() {
    var a = this; jl_Object.call(a);
    a.$buffer6 = null;
    a.$byteBuffer0 = null;
    a.$bufferHandle2 = 0;
    a.$isDirect1 = 0;
    a.$isDirty2 = 0;
    a.$isBound2 = 0;
    a.$usage3 = 0;
}
function cbggg_IndexBufferObjectSubData__init_(var_0, var_1) {
    var var_2 = new cbggg_IndexBufferObjectSubData();
    cbggg_IndexBufferObjectSubData__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_IndexBufferObjectSubData__init_0($this, $isStatic, $maxIndices) {
    jl_Object__init_0($this);
    $this.$isDirty2 = 1;
    $this.$isBound2 = 0;
    $this.$byteBuffer0 = cbgu_BufferUtils_newByteBuffer($maxIndices * 2 | 0);
    $this.$isDirect1 = 1;
    $this.$usage3 = !$isStatic ? 35048 : 35044;
    $this.$buffer6 = $this.$byteBuffer0.$asShortBuffer();
    $this.$buffer6.$flip0();
    $this.$byteBuffer0.$flip0();
    $this.$bufferHandle2 = cbggg_IndexBufferObjectSubData_createBufferObject($this);
}
function cbggg_IndexBufferObjectSubData_createBufferObject($this) {
    var $result;
    $result = cbg_Gdx_gl20.$glGenBuffer();
    cbg_Gdx_gl20.$glBindBuffer(34963, $result);
    cbg_Gdx_gl20.$glBufferData(34963, jn_Buffer_capacity($this.$byteBuffer0), null, $this.$usage3);
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    return $result;
}
function cbggg_IndexBufferObjectSubData_getNumIndices($this) {
    return jn_Buffer_limit($this.$buffer6);
}
function cbggg_IndexBufferObjectSubData_getNumMaxIndices($this) {
    return jn_Buffer_capacity($this.$buffer6);
}
function cbggg_IndexBufferObjectSubData_setIndices($this, $indices, $offset, $count) {
    $this.$isDirty2 = 1;
    $this.$buffer6.$clear0();
    $this.$buffer6.$put8($indices, $offset, $count);
    $this.$buffer6.$flip0();
    $this.$byteBuffer0.$position2(0);
    $this.$byteBuffer0.$limit0($count << 1);
    if ($this.$isBound2) {
        cbg_Gdx_gl20.$glBufferSubData(34963, 0, jn_Buffer_limit($this.$byteBuffer0), $this.$byteBuffer0);
        $this.$isDirty2 = 0;
    }
}
function cbggg_IndexBufferObjectSubData_getBuffer($this) {
    $this.$isDirty2 = 1;
    return $this.$buffer6;
}
function cbggg_IndexBufferObjectSubData_bind($this) {
    if (!$this.$bufferHandle2)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(503)));
    cbg_Gdx_gl20.$glBindBuffer(34963, $this.$bufferHandle2);
    if ($this.$isDirty2) {
        $this.$byteBuffer0.$limit0(jn_Buffer_limit($this.$buffer6) * 2 | 0);
        cbg_Gdx_gl20.$glBufferSubData(34963, 0, jn_Buffer_limit($this.$byteBuffer0), $this.$byteBuffer0);
        $this.$isDirty2 = 0;
    }
    $this.$isBound2 = 1;
}
function cbggg_IndexBufferObjectSubData_unbind($this) {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound2 = 0;
}
var jur_PreviousMatch = $rt_classWithoutFields(jur_AbstractSet);
function jur_PreviousMatch__init_() {
    var var_0 = new jur_PreviousMatch();
    jur_PreviousMatch__init_0(var_0);
    return var_0;
}
function jur_PreviousMatch__init_0($this) {
    jur_AbstractSet__init_($this);
}
function jur_PreviousMatch_matches($this, $stringIndex, $testString, $matchResult) {
    if ($stringIndex != $matchResult.$getPreviousMatchEnd())
        return (-1);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_PreviousMatch_hasConsumed($this, $matchResult) {
    return 0;
}
function cbggg_PixmapPacker$PixmapPackerRectangle() {
    var a = this; cbgm_Rectangle.call(a);
    a.$splits = null;
    a.$pads = null;
    a.$offsetX0 = 0;
    a.$offsetY0 = 0;
    a.$originalWidth = 0;
    a.$originalHeight0 = 0;
}
function cbggg_PixmapPacker$PixmapPackerRectangle__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbggg_PixmapPacker$PixmapPackerRectangle();
    cbggg_PixmapPacker$PixmapPackerRectangle__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbggg_PixmapPacker$PixmapPackerRectangle__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new cbggg_PixmapPacker$PixmapPackerRectangle();
    cbggg_PixmapPacker$PixmapPackerRectangle__init_2(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function cbggg_PixmapPacker$PixmapPackerRectangle__init_1($this, $x, $y, $width, $height) {
    cbgm_Rectangle__init_2($this, $x, $y, $width, $height);
    $this.$offsetX0 = 0;
    $this.$offsetY0 = 0;
    $this.$originalWidth = $width;
    $this.$originalHeight0 = $height;
}
function cbggg_PixmapPacker$PixmapPackerRectangle__init_2($this, $x, $y, $width, $height, $left, $top, $originalWidth, $originalHeight) {
    cbgm_Rectangle__init_2($this, $x, $y, $width, $height);
    $this.$offsetX0 = $left;
    $this.$offsetY0 = $top;
    $this.$originalWidth = $originalWidth;
    $this.$originalHeight0 = $originalHeight;
}
var jur_NonCapFSet = $rt_classWithoutFields(jur_FSet);
function jur_NonCapFSet__init_0(var_0) {
    var var_1 = new jur_NonCapFSet();
    jur_NonCapFSet__init_(var_1, var_0);
    return var_1;
}
function jur_NonCapFSet__init_($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_NonCapFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_NonCapFSet_hasConsumed($this, $mr) {
    return 0;
}
var cbgm_MathUtils = $rt_classWithoutFields();
var cbgm_MathUtils_random = null;
function cbgm_MathUtils_$callClinit() {
    cbgm_MathUtils_$callClinit = $rt_eraseClinit(cbgm_MathUtils);
    cbgm_MathUtils__clinit_();
}
function cbgm_MathUtils_nextPowerOfTwo($value) {
    var var$2, var$3;
    cbgm_MathUtils_$callClinit();
    if (!$value)
        return 1;
    var$2 = $value + (-1) | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
}
function cbgm_MathUtils_isEqual($a, $b, $tolerance) {
    cbgm_MathUtils_$callClinit();
    return jl_Math_abs($a - $b) > $tolerance ? 0 : 1;
}
function cbgm_MathUtils__clinit_() {
    cbgm_MathUtils_random = ju_Random__init_();
}
var cbg_ApplicationLogger = $rt_classWithoutFields(0);
function jur_UCISupplCharSet() {
    jur_LeafSet.call(this);
    this.$ch3 = 0;
}
function jur_UCISupplCharSet__init_(var_0) {
    var var_1 = new jur_UCISupplCharSet();
    jur_UCISupplCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISupplCharSet__init_0($this, $ch) {
    jur_LeafSet__init_0($this);
    $this.$charCount = 2;
    $this.$ch3 = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
}
function jur_UCISupplCharSet_accepts($this, $strIndex, $testString) {
    var var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$ch3 != jl_Character_toLowerCase0(jl_Character_toUpperCase0(jl_Character_toCodePoint($high, $low))) ? (-1) : 2;
}
var jl_System = $rt_classWithoutFields();
var jl_System_outCache = null;
var jl_System_errCache = null;
var jl_System_properties = null;
function jl_System_out() {
    var var$1;
    if (jl_System_outCache === null) {
        var$1 = new ji_PrintStream;
        otcic_StdoutOutputStream_$callClinit();
        ji_PrintStream__init_0(var$1, otcic_StdoutOutputStream_INSTANCE, 0);
        jl_System_outCache = var$1;
    }
    return jl_System_outCache;
}
function jl_System_err() {
    var var$1;
    if (jl_System_errCache === null) {
        var$1 = new ji_PrintStream;
        otcic_StderrOutputStream_$callClinit();
        ji_PrintStream__init_0(var$1, otcic_StderrOutputStream_INSTANCE, 0);
        jl_System_errCache = var$1;
    }
    return jl_System_errCache;
}
function jl_System_arraycopy($src, $srcPos, $dest, $destPos, $length) {
    var var$6, $srcType, $targetType, $srcArray, $i, var$11, var$12, $elem;
    if ($src !== null && $dest !== null) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src)) {
            var$6 = $destPos + $length | 0;
            if (var$6 <= jlr_Array_getLength($dest)) {
                a: {
                    b: {
                        if ($src !== $dest) {
                            $srcType = (jl_Object_getClass($src)).$getComponentType();
                            $targetType = (jl_Object_getClass($dest)).$getComponentType();
                            if ($srcType !== null && $targetType !== null) {
                                if ($srcType === $targetType)
                                    break b;
                                if (!$srcType.$isPrimitive() && !$targetType.$isPrimitive()) {
                                    $srcArray = $src;
                                    $i = 0;
                                    var$6 = $srcPos;
                                    while ($i < $length) {
                                        var$11 = $srcArray.data;
                                        var$12 = var$6 + 1 | 0;
                                        $elem = var$11[var$6];
                                        if (!$targetType.$isInstance($elem)) {
                                            jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                            $rt_throw(jl_ArrayStoreException__init_());
                                        }
                                        $i = $i + 1 | 0;
                                        var$6 = var$12;
                                    }
                                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                    return;
                                }
                                if (!$srcType.$isPrimitive())
                                    break a;
                                if ($targetType.$isPrimitive())
                                    break b;
                                else
                                    break a;
                            }
                            $rt_throw(jl_ArrayStoreException__init_());
                        }
                    }
                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                    return;
                }
                $rt_throw(jl_ArrayStoreException__init_());
            }
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    }
    $rt_throw(jl_NullPointerException__init_0($rt_s(504)));
}
function jl_System_doArrayCopy(var$1, var$2, var$3, var$4, var$5) {
    if (var$1 !== var$3 || var$4 < var$2) {
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[var$4++] = var$1.data[var$2++];
        }
    } else {
        var$2 = (var$2 + var$5) | 0;
        var$4 = (var$4 + var$5) | 0;
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[--var$4] = var$1.data[--var$2];
        }
    }
}
function jl_System_currentTimeMillis() {
    return Long_fromNumber(new Date().getTime());
}
function jl_System_initPropertiesIfNeeded() {
    var $defaults;
    if (jl_System_properties === null) {
        $defaults = ju_Properties__init_();
        $defaults.$put1($rt_s(505), $rt_s(506));
        $defaults.$put1($rt_s(413), $rt_s(507));
        $defaults.$put1($rt_s(508), $rt_s(470));
        $defaults.$put1($rt_s(509), $rt_s(395));
        $defaults.$put1($rt_s(510), jl_System_lineSeparator());
        $defaults.$put1($rt_s(511), jl_System_getTempDir());
        $defaults.$put1($rt_s(512), $rt_s(506));
        $defaults.$put1($rt_s(513), jl_System_getHomeDir());
        jl_System_properties = ju_Properties__init_1($defaults);
    }
}
function jl_System_getTempDir() {
    return $rt_s(514);
}
function jl_System_getHomeDir() {
    return $rt_s(470);
}
function jl_System_setProperty($key, $value) {
    jl_System_initPropertiesIfNeeded();
    return jl_System_properties.$put1($key, $value);
}
function jl_System_lineSeparator() {
    return $rt_s(394);
}
function jur_AbstractCharClass$LazyRange() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$start13 = 0;
    a.$end3 = 0;
}
function jur_AbstractCharClass$LazyRange__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyRange();
    jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyRange__init_0($this, $start, $end) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$start13 = $start;
    $this.$end3 = $end;
}
function jur_AbstractCharClass$LazyRange_computeValue($this) {
    var $chCl;
    $chCl = (jur_CharClass__init_()).$add0($this.$start13, $this.$end3);
    return $chCl;
}
var jur_AbstractCharClass$LazyXDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyXDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyXDigit();
    jur_AbstractCharClass$LazyXDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyXDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyXDigit_computeValue($this) {
    return (((jur_CharClass__init_()).$add0(48, 57)).$add0(97, 102)).$add0(65, 70);
}
function jur_Matcher() {
    var a = this; jl_Object.call(a);
    a.$pat = null;
    a.$start14 = null;
    a.$string3 = null;
    a.$matchResult = null;
    a.$leftBound0 = 0;
    a.$rightBound0 = 0;
}
function jur_Matcher__init_(var_0, var_1) {
    var var_2 = new jur_Matcher();
    jur_Matcher__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Matcher_find0($this, $start) {
    var $stringLength, var$3;
    $stringLength = $this.$string3.$length();
    if ($start >= 0 && $start <= $stringLength) {
        var$3 = jur_Matcher_findAt($this, $start);
        if (var$3 >= 0 && $this.$matchResult.$isValid()) {
            $this.$matchResult.$finalizeMatch();
            return 1;
        }
        $this.$matchResult.$startIndex = (-1);
        return 0;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_1(jl_String_valueOf($start)));
}
function jur_Matcher_findAt($this, $startIndex) {
    var $foundIndex;
    $this.$matchResult.$reset0();
    $this.$matchResult.$setMode(1);
    $this.$matchResult.$setStartIndex($startIndex);
    $foundIndex = $this.$start14.$find($startIndex, $this.$string3, $this.$matchResult);
    if ($foundIndex == (-1))
        $this.$matchResult.$hitEnd = 1;
    return $foundIndex;
}
function jur_Matcher_find($this) {
    var $length, var$2;
    $length = $this.$string3.$length();
    if (!jur_Matcher_hasTransparentBounds($this))
        $length = $this.$rightBound0;
    if ($this.$matchResult.$startIndex >= 0 && $this.$matchResult.$mode0() == 1) {
        $this.$matchResult.$startIndex = $this.$matchResult.$end0();
        if ($this.$matchResult.$end0() == $this.$matchResult.$start10()) {
            var$2 = $this.$matchResult;
            var$2.$startIndex = var$2.$startIndex + 1 | 0;
        }
        return $this.$matchResult.$startIndex <= $length && jur_Matcher_find0($this, $this.$matchResult.$startIndex) ? 1 : 0;
    }
    return jur_Matcher_find0($this, $this.$leftBound0);
}
function jur_Matcher_start0($this, $group) {
    return $this.$matchResult.$start0($group);
}
function jur_Matcher_end0($this, $group) {
    return $this.$matchResult.$end($group);
}
function jur_Matcher_start($this) {
    return jur_Matcher_start0($this, 0);
}
function jur_Matcher_end($this) {
    return jur_Matcher_end0($this, 0);
}
function jur_Matcher_hasTransparentBounds($this) {
    return $this.$matchResult.$hasTransparentBounds();
}
function jur_Matcher__init_0($this, $pat, $cs) {
    var var$3, var$4, var$5, var$6, var$7;
    jl_Object__init_0($this);
    $this.$leftBound0 = (-1);
    $this.$rightBound0 = (-1);
    $this.$pat = $pat;
    $this.$start14 = $pat.$start9;
    $this.$string3 = $cs;
    $this.$leftBound0 = 0;
    $this.$rightBound0 = $this.$string3.$length();
    var$3 = new jur_MatchResultImpl;
    var$4 = $this.$leftBound0;
    var$5 = $this.$rightBound0;
    var$6 = jur_Pattern_groupCount($pat);
    var$7 = jur_Pattern_compCount($pat);
    jur_MatchResultImpl__init_0(var$3, $cs, var$4, var$5, var$6, var$7, jur_Pattern_consCount($pat));
    $this.$matchResult = var$3;
}
var jur_DotAllSet = $rt_classWithoutFields(jur_JointSet);
function jur_DotAllSet__init_() {
    var var_0 = new jur_DotAllSet();
    jur_DotAllSet__init_0(var_0);
    return var_0;
}
function jur_DotAllSet__init_0($this) {
    jur_JointSet__init_0($this);
}
function jur_DotAllSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$next.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$next.$matches(var$5, $testString, $matchResult);
}
function jur_DotAllSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_DotAllSet_getType($this) {
    return (-2147483602);
}
function jur_DotAllSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$041 = null;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLowerCase$1();
    jur_AbstractCharClass$LazyJavaLowerCase$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1__init_0($this, $this$0) {
    $this.$this$041 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLowerCase$1_contains($this, $ch) {
    return jl_Character_isLowerCase($ch);
}
function jl_Object$monitorExit$lambda$_8_0() {
    jl_Object.call(this);
    this.$_00 = null;
}
function jl_Object$monitorExit$lambda$_8_0__init_(var_0) {
    var var_1 = new jl_Object$monitorExit$lambda$_8_0();
    jl_Object$monitorExit$lambda$_8_0__init_0(var_1, var_0);
    return var_1;
}
function jl_Object$monitorExit$lambda$_8_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_00 = var$1;
}
function jl_Object$monitorExit$lambda$_8_0_run(var$0) {
    jl_Object_lambda$monitorExit$2(var$0.$_00);
}
var jur_UCISupplRangeSet = $rt_classWithoutFields(jur_SupplRangeSet);
function jur_UCISupplRangeSet__init_(var_0) {
    var var_1 = new jur_UCISupplRangeSet();
    jur_UCISupplRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISupplRangeSet__init_0($this, $cc) {
    jur_SupplRangeSet__init_0($this, $cc);
}
function jur_UCISupplRangeSet_contains($this, $ch) {
    return $this.$chars0.$contains(jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch)));
}
var jur_AbstractCharClass$LazyJavaUpperCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaUpperCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUpperCase();
    jur_AbstractCharClass$LazyJavaUpperCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUpperCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUpperCase_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUpperCase$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_HangulDecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$decomposedChar0 = null;
    a.$decomposedCharUTF160 = null;
    a.$decomposedCharLength0 = 0;
}
function jur_HangulDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_HangulDecomposedCharSet();
    jur_HangulDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_HangulDecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
    jur_JointSet__init_0($this);
    $this.$decomposedChar0 = $decomposedChar;
    $this.$decomposedCharLength0 = $decomposedCharLength;
}
function jur_HangulDecomposedCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_HangulDecomposedCharSet_getDecomposedChar($this) {
    if ($this.$decomposedCharUTF160 === null)
        $this.$decomposedCharUTF160 = jl_String__init_($this.$decomposedChar0);
    return $this.$decomposedCharUTF160;
}
function jur_HangulDecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, $syllIndex, $decompSyllable, $vIndex, $tIndex, var$9, $curSymb, $decompCurSymb, var$12, $i, var$14, $lIndex, var$16, var$17;
    $rightBound = $matchResult.$getRightBound();
    $syllIndex = 0;
    $decompSyllable = $rt_createIntArray(3);
    $vIndex = (-1);
    $tIndex = (-1);
    if ($strIndex >= $rightBound)
        return (-1);
    var$9 = $strIndex + 1 | 0;
    $curSymb = $testString.$charAt($strIndex);
    $decompCurSymb = jur_Lexer_getHangulDecomposition($curSymb);
    if ($decompCurSymb !== null) {
        var$12 = $decompCurSymb.data;
        $i = 0;
        if (var$12.length != $this.$decomposedCharLength0)
            return (-1);
        while (true) {
            if ($i >= $this.$decomposedCharLength0)
                return $this.$next.$matches(var$9, $testString, $matchResult);
            if (var$12[$i] != $this.$decomposedChar0.data[$i])
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    var$14 = $decompSyllable.data;
    var$14[$syllIndex] = $curSymb;
    $lIndex = $curSymb - 4352 | 0;
    if ($lIndex >= 0 && $lIndex < 19) {
        if (var$9 < $rightBound) {
            $curSymb = $testString.$charAt(var$9);
            $vIndex = $curSymb - 4449 | 0;
        }
        if ($vIndex >= 0 && $vIndex < 21) {
            var$16 = var$9 + 1 | 0;
            var$14[1] = $curSymb;
            if (var$16 < $rightBound) {
                $curSymb = $testString.$charAt(var$16);
                $tIndex = $curSymb - 4519 | 0;
            }
            if ($tIndex >= 0 && $tIndex < 28) {
                var$17 = var$16 + 1 | 0;
                var$14[2] = $curSymb;
                var$17 = $this.$decomposedCharLength0 == 3 && var$14[0] == $this.$decomposedChar0.data[0] && var$14[1] == $this.$decomposedChar0.data[1] && var$14[2] == $this.$decomposedChar0.data[2] ? $this.$next.$matches(var$17, $testString, $matchResult) : (-1);
                return var$17;
            }
            var$17 = $this.$decomposedCharLength0 == 2 && var$14[0] == $this.$decomposedChar0.data[0] && var$14[1] == $this.$decomposedChar0.data[1] ? $this.$next.$matches(var$16, $testString, $matchResult) : (-1);
            return var$17;
        }
        return (-1);
    }
    return (-1);
}
function jur_HangulDecomposedCharSet_first($this, $set) {
    var var$2, var$3;
    a: {
        if ($set instanceof jur_HangulDecomposedCharSet) {
            var$2 = $set;
            if (!(jur_HangulDecomposedCharSet_getDecomposedChar(var$2)).$equals(jur_HangulDecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
}
function jur_HangulDecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function cgxgbw_WebGL20() {
    var a = this; jl_Object.call(a);
    a.$gl = null;
    a.$programs = null;
    a.$nextProgramId = 0;
    a.$shaders = null;
    a.$nextShaderId = 0;
    a.$buffers = null;
    a.$nextBufferId = 0;
    a.$frameBuffers = null;
    a.$nextFrameBufferId = 0;
    a.$renderBuffers = null;
    a.$nextRenderBufferId = 0;
    a.$textures = null;
    a.$nextTextureId = 0;
    a.$uniforms0 = null;
    a.$nextUniformId = 0;
    a.$currProgram = 0;
    a.$floatBuffer = null;
    a.$intBuffer = null;
    a.$shortBuffer = null;
    a.$byteBuffer1 = null;
}
function cgxgbw_WebGL20__init_(var_0) {
    var var_1 = new cgxgbw_WebGL20();
    cgxgbw_WebGL20__init_0(var_1, var_0);
    return var_1;
}
function cgxgbw_WebGL20__init_0($this, $gl) {
    jl_Object__init_0($this);
    $this.$programs = ju_HashMap__init_();
    $this.$nextProgramId = 1;
    $this.$shaders = ju_HashMap__init_();
    $this.$nextShaderId = 1;
    $this.$buffers = ju_HashMap__init_();
    $this.$nextBufferId = 1;
    $this.$frameBuffers = ju_HashMap__init_();
    $this.$nextFrameBufferId = 1;
    $this.$renderBuffers = ju_HashMap__init_();
    $this.$nextRenderBufferId = 1;
    $this.$textures = ju_HashMap__init_();
    $this.$nextTextureId = 1;
    $this.$uniforms0 = ju_HashMap__init_();
    $this.$nextUniformId = 1;
    $this.$currProgram = 0;
    $this.$gl = $gl;
    $this.$floatBuffer = (cgxgbwdt_TypedArrays_getInstance()).$createFloat32Array(40000);
    $this.$shortBuffer = (cgxgbwdt_TypedArrays_getInstance()).$createInt16Array(12000);
    $this.$intBuffer = (cgxgbwdt_TypedArrays_getInstance()).$createInt32Array(12000);
    $this.$byteBuffer1 = (cgxgbwdt_TypedArrays_getInstance()).$createUint8Array(240000);
    $this.$gl.pixelStorei(37441, 0);
}
function cgxgbw_WebGL20_ensureCapacity($this, $buffer) {
    if (jn_Buffer_remaining($buffer) > $this.$floatBuffer.length)
        $this.$floatBuffer = (cgxgbwdt_TypedArrays_getInstance()).$createFloat32Array(jn_Buffer_remaining($buffer));
}
function cgxgbw_WebGL20_ensureCapacity0($this, $buffer) {
    if (jn_Buffer_remaining($buffer) > $this.$shortBuffer.length)
        $this.$shortBuffer = (cgxgbwdt_TypedArrays_getInstance()).$createInt16Array(jn_Buffer_remaining($buffer));
}
function cgxgbw_WebGL20_ensureCapacity1($this, $buffer) {
    if (jn_Buffer_remaining($buffer) > $this.$byteBuffer1.length)
        $this.$byteBuffer1 = (cgxgbwdt_TypedArrays_getInstance()).$createUint8Array(jn_Buffer_remaining($buffer));
}
function cgxgbw_WebGL20_copy($this, $buffer) {
    var $i, $j, var$4, var$5, var$6;
    cgxgbw_WebGL20_ensureCapacity($this, $buffer);
    $i = jn_Buffer_position($buffer);
    $j = 0;
    while ($i < jn_Buffer_limit($buffer)) {
        var$4 = $this.$floatBuffer;
        var$5 = $buffer.$get5($i);
        var$4[$j] = var$5;
        $i = $i + 1 | 0;
        $j = $j + 1 | 0;
    }
    var$4 = $this.$floatBuffer;
    var$6 = jn_Buffer_remaining($buffer);
    return var$4.subarray(0, var$6);
}
function cgxgbw_WebGL20_copy0($this, $buffer) {
    var $i, $j, var$4, var$5, var$6;
    cgxgbw_WebGL20_ensureCapacity0($this, $buffer);
    $i = jn_Buffer_position($buffer);
    $j = 0;
    while ($i < jn_Buffer_limit($buffer)) {
        var$4 = $this.$shortBuffer;
        var$5 = $buffer.$get15($i);
        var$4[$j] = var$5;
        $i = $i + 1 | 0;
        $j = $j + 1 | 0;
    }
    var$4 = $this.$shortBuffer;
    var$6 = jn_Buffer_remaining($buffer);
    return var$4.subarray(0, var$6);
}
function cgxgbw_WebGL20_copy1($this, $buffer) {
    var $i, $j, var$4, var$5, var$6;
    cgxgbw_WebGL20_ensureCapacity1($this, $buffer);
    $i = jn_Buffer_position($buffer);
    $j = 0;
    while ($i < jn_Buffer_limit($buffer)) {
        var$4 = $this.$byteBuffer1;
        var$5 = $buffer.$get11($i);
        var$4[$j] = var$5;
        $i = $i + 1 | 0;
        $j = $j + 1 | 0;
    }
    var$4 = $this.$byteBuffer1;
    var$6 = jn_Buffer_remaining($buffer);
    return var$4.subarray(0, var$6);
}
function cgxgbw_WebGL20_allocateUniformLocationId($this, $program, $location) {
    var $progUniforms, var$4;
    $progUniforms = $this.$uniforms0.$get1(jl_Integer_valueOf($program));
    if ($progUniforms === null) {
        $progUniforms = ju_HashMap__init_();
        $this.$uniforms0.$put1(jl_Integer_valueOf($program), $progUniforms);
    }
    var$4 = $this.$nextUniformId;
    $this.$nextUniformId = var$4 + 1 | 0;
    $progUniforms.$put1(jl_Integer_valueOf(var$4), $location);
    return var$4;
}
function cgxgbw_WebGL20_getUniformLocation($this, $location) {
    return ($this.$uniforms0.$get1(jl_Integer_valueOf($this.$currProgram))).$get1(jl_Integer_valueOf($location));
}
function cgxgbw_WebGL20_allocateShaderId($this, $shader) {
    var var$2;
    var$2 = $this.$nextShaderId;
    $this.$nextShaderId = var$2 + 1 | 0;
    $this.$shaders.$put1(jl_Integer_valueOf(var$2), $shader);
    return var$2;
}
function cgxgbw_WebGL20_allocateProgramId($this, $program) {
    var var$2;
    var$2 = $this.$nextProgramId;
    $this.$nextProgramId = var$2 + 1 | 0;
    $this.$programs.$put1(jl_Integer_valueOf(var$2), $program);
    return var$2;
}
function cgxgbw_WebGL20_allocateBufferId($this, $buffer) {
    var var$2;
    var$2 = $this.$nextBufferId;
    $this.$nextBufferId = var$2 + 1 | 0;
    $this.$buffers.$put1(jl_Integer_valueOf(var$2), $buffer);
    return var$2;
}
function cgxgbw_WebGL20_allocateTextureId($this, $texture) {
    var var$2;
    var$2 = $this.$nextTextureId;
    $this.$nextTextureId = var$2 + 1 | 0;
    $this.$textures.$put1(jl_Integer_valueOf(var$2), $texture);
    return var$2;
}
function cgxgbw_WebGL20_glBindTexture($this, $target, $texture) {
    var var$3, var$4;
    var$3 = $this.$gl;
    var$4 = $this.$textures.$get1(jl_Integer_valueOf($texture));
    var$3.bindTexture($target, var$4);
}
function cgxgbw_WebGL20_glClear($this, $mask) {
    $this.$gl.clear($mask);
}
function cgxgbw_WebGL20_glClearColor($this, $red, $green, $blue, $alpha) {
    $this.$gl.clearColor($red, $green, $blue, $alpha);
}
function cgxgbw_WebGL20_glDepthMask($this, $flag) {
    $this.$gl.depthMask(!!$flag);
}
function cgxgbw_WebGL20_glDisable($this, $cap) {
    $this.$gl.disable($cap);
}
function cgxgbw_WebGL20_glDrawArrays($this, $mode, $first, $count) {
    $this.$gl.drawArrays($mode, $first, $count);
}
function cgxgbw_WebGL20_glDrawElements($this, $mode, $count, $type, $indices) {
    var var$5, var$6;
    var$5 = $this.$gl;
    var$6 = jn_Buffer_position($indices);
    var$5.drawElements($mode, $count, $type, var$6);
}
function cgxgbw_WebGL20_glEnable($this, $cap) {
    $this.$gl.enable($cap);
}
function cgxgbw_WebGL20_glGenTexture($this) {
    var $texture;
    $texture = $this.$gl.createTexture();
    return cgxgbw_WebGL20_allocateTextureId($this, $texture);
}
function cgxgbw_WebGL20_glPixelStorei($this, $pname, $param) {
    $this.$gl.pixelStorei($pname, $param);
}
function cgxgbw_WebGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
    var var$10, var$11, $buffer, $index, $pixmap, var$15, var$16;
    if ($pixels === null) {
        var$10 = $this.$gl;
        var$11 = null;
        var$10.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, var$11);
    } else if (jn_Buffer_limit($pixels) > 4) {
        $buffer = !($pixels instanceof jn_FloatBuffer) ? $this.$copy2($pixels) : $this.$copy3($pixels);
        $this.$gl.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $buffer);
    } else {
        $index = $pixels.$getInt(0);
        cbgg_Pixmap_$callClinit();
        $pixmap = cbgg_Pixmap_pixmaps.$get1(jl_Integer_valueOf($index));
        if ($pixmap.$canUseImageElement()) {
            var$15 = $this.$gl;
            var$16 = $pixmap.$getImageElement();
            var$15.texImage2D($target, $level, $internalformat, $format, $type, var$16);
        } else if (!$pixmap.$canUseVideoElement()) {
            var$15 = $this.$gl;
            var$16 = $pixmap.$getCanvasElement();
            var$15.texImage2D($target, $level, $internalformat, $format, $type, var$16);
        } else {
            var$15 = $this.$gl;
            var$16 = $pixmap.$getVideoElement();
            var$15.texImage2D($target, $level, $internalformat, $format, $type, var$16);
        }
    }
}
function cgxgbw_WebGL20_glTexParameterf($this, $target, $pname, $param) {
    $this.$gl.texParameterf($target, $pname, $param);
}
function cgxgbw_WebGL20_glTexSubImage2D($this, $target, $level, $xoffset, $yoffset, $width, $height, $format, $type, $pixels) {
    var $index, $pixmap, var$12, var$13, $buffer;
    if (jn_Buffer_limit($pixels) <= 4) {
        $index = $pixels.$getInt(0);
        cbgg_Pixmap_$callClinit();
        $pixmap = cbgg_Pixmap_pixmaps.$get1(jl_Integer_valueOf($index));
        var$12 = $this.$gl;
        var$13 = $pixmap.$getCanvasElement();
        var$12.texSubImage2D($target, $level, $xoffset, $yoffset, $format, $type, var$13);
    } else {
        $buffer = !($pixels instanceof jn_FloatBuffer) ? $this.$copy2($pixels) : $this.$copy3($pixels);
        $this.$gl.texSubImage2D($target, $level, $xoffset, $yoffset, $width, $height, $format, $type, $buffer);
    }
}
function cgxgbw_WebGL20_glViewport($this, $x, $y, $width, $height) {
    $this.$gl.viewport($x, $y, $width, $height);
}
function cgxgbw_WebGL20_glAttachShader($this, $program, $shader) {
    var $glProgram, $glShader;
    $glProgram = $this.$programs.$get1(jl_Integer_valueOf($program));
    $glShader = $this.$shaders.$get1(jl_Integer_valueOf($shader));
    $this.$gl.attachShader($glProgram, $glShader);
}
function cgxgbw_WebGL20_glBindBuffer($this, $target, $buffer) {
    var var$3, var$4;
    var$3 = $this.$gl;
    var$4 = $this.$buffers.$get1(jl_Integer_valueOf($buffer));
    var$3.bindBuffer($target, var$4);
}
function cgxgbw_WebGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) {
    $this.$gl.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
}
function cgxgbw_WebGL20_glBufferData($this, $target, $size, $data, $usage) {
    var $buf, $copy, var$7, var$8;
    if ($data instanceof jn_FloatBuffer) {
        $buf = $data;
        $copy = $this.$copy3($buf);
        $this.$gl.bufferData($target, $copy, $usage);
    } else {
        if (!($data instanceof jn_ShortBuffer))
            $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(515)));
        var$7 = $this.$gl;
        var$8 = $this.$copy4($data);
        var$7.bufferData($target, var$8, $usage);
    }
}
function cgxgbw_WebGL20_glBufferSubData($this, $target, $offset, $size, $data) {
    var var$5, var$6;
    if ($data instanceof jn_FloatBuffer) {
        var$5 = $this.$gl;
        var$6 = $this.$copy3($data);
        var$5.bufferSubData($target, $offset, var$6);
    }
}
function cgxgbw_WebGL20_glCompileShader($this, $shader) {
    var $glShader;
    $glShader = $this.$shaders.$get1(jl_Integer_valueOf($shader));
    $this.$gl.compileShader($glShader);
}
function cgxgbw_WebGL20_glCreateProgram($this) {
    var $program;
    $program = $this.$gl.createProgram();
    return cgxgbw_WebGL20_allocateProgramId($this, $program);
}
function cgxgbw_WebGL20_glCreateShader($this, $type) {
    var $shader;
    $shader = $this.$gl.createShader($type);
    return cgxgbw_WebGL20_allocateShaderId($this, $shader);
}
function cgxgbw_WebGL20_glDisableVertexAttribArray($this, $index) {
    $this.$gl.disableVertexAttribArray($index);
}
function cgxgbw_WebGL20_glDrawElements0($this, $mode, $count, $type, $indices) {
    $this.$gl.drawElements($mode, $count, $type, $indices);
}
function cgxgbw_WebGL20_glEnableVertexAttribArray($this, $index) {
    $this.$gl.enableVertexAttribArray($index);
}
function cgxgbw_WebGL20_glGenBuffer($this) {
    var $buffer;
    $buffer = $this.$gl.createBuffer();
    return cgxgbw_WebGL20_allocateBufferId($this, $buffer);
}
function cgxgbw_WebGL20_glGenerateMipmap($this, $target) {
    $this.$gl.generateMipmap($target);
}
function cgxgbw_WebGL20_glGetActiveAttrib($this, $program, $index, $size, $type) {
    var var$5, var$6, $activeAttrib;
    var$5 = $this.$gl;
    var$6 = $this.$programs.$get1(jl_Integer_valueOf($program));
    $activeAttrib = var$5.getActiveAttrib(var$6, $index);
    $size.$put13($activeAttrib.size);
    $type.$put13($activeAttrib.type);
    return $rt_str($activeAttrib.name);
}
function cgxgbw_WebGL20_glGetActiveUniform($this, $program, $index, $size, $type) {
    var var$5, var$6, $activeUniform;
    var$5 = $this.$gl;
    var$6 = $this.$programs.$get1(jl_Integer_valueOf($program));
    $activeUniform = var$5.getActiveUniform(var$6, $index);
    $size.$put13($activeUniform.size);
    $type.$put13($activeUniform.type);
    return $rt_str($activeUniform.name);
}
function cgxgbw_WebGL20_glGetAttribLocation($this, $program, $name) {
    var $prog;
    $prog = $this.$programs.$get1(jl_Integer_valueOf($program));
    return $this.$gl.getAttribLocation($prog, $rt_ustr($name));
}
function cgxgbw_WebGL20_glGetFloatv($this, $pname, $params) {
    if ($pname != 2931 && $pname != 2849 && $pname != 32824 && $pname != 10752 && $pname != 32938)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(516)));
    $params.$put14(0, $this.$gl.getParameter($pname));
}
function cgxgbw_WebGL20_glGetProgramiv($this, $program, $pname, $params) {
    var var$4, var$5, var$6, var$7, $result;
    if ($pname != 35712 && $pname != 35714 && $pname != 35715) {
        var$4 = $this.$gl;
        var$5 = $this.$programs.$get1(jl_Integer_valueOf($program));
        $params.$put13(var$4.getProgramParameter(var$5, $pname));
    } else {
        var$6 = $this.$gl;
        var$7 = $this.$programs.$get1(jl_Integer_valueOf($program));
        $result = var$6.getProgramParameter(var$7, $pname) ? 1 : 0;
        $params.$put13(!$result ? 0 : 1);
    }
}
function cgxgbw_WebGL20_glGetProgramInfoLog($this, $program) {
    var var$2, var$3;
    var$2 = $this.$gl;
    var$3 = $this.$programs.$get1(jl_Integer_valueOf($program));
    return $rt_str(var$2.getProgramInfoLog(var$3));
}
function cgxgbw_WebGL20_glGetShaderiv($this, $shader, $pname, $params) {
    var var$4, var$5, $result, var$7;
    if ($pname != 35713 && $pname != 35712) {
        var$4 = $this.$gl;
        var$5 = $this.$shaders.$get1(jl_Integer_valueOf($shader));
        $result = var$4.getShaderParameter(var$5, $pname);
        $params.$put13($result);
    } else {
        var$7 = $this.$gl;
        var$4 = $this.$shaders.$get1(jl_Integer_valueOf($shader));
        $result = var$7.getShaderParameter(var$4, $pname) ? 1 : 0;
        $params.$put13(!$result ? 0 : 1);
    }
}
function cgxgbw_WebGL20_glGetShaderInfoLog($this, $shader) {
    var var$2, var$3;
    var$2 = $this.$gl;
    var$3 = $this.$shaders.$get1(jl_Integer_valueOf($shader));
    return $rt_str(var$2.getShaderInfoLog(var$3));
}
function cgxgbw_WebGL20_glGetUniformLocation($this, $program, $name) {
    var var$3, var$4, $location;
    var$3 = $this.$gl;
    var$4 = $this.$programs.$get1(jl_Integer_valueOf($program));
    $location = var$3.getUniformLocation(var$4, $rt_ustr($name));
    if ($location !== null)
        return cgxgbw_WebGL20_allocateUniformLocationId($this, $program, $location);
    return (-1);
}
function cgxgbw_WebGL20_glLinkProgram($this, $program) {
    var var$2, var$3;
    var$2 = $this.$gl;
    var$3 = $this.$programs.$get1(jl_Integer_valueOf($program));
    var$2.linkProgram(var$3);
}
function cgxgbw_WebGL20_glShaderSource($this, $shader, $source) {
    var var$3, var$4;
    var$3 = $this.$gl;
    var$4 = $this.$shaders.$get1(jl_Integer_valueOf($shader));
    var$3.shaderSource(var$4, $rt_ustr($source));
}
function cgxgbw_WebGL20_glTexParameteri($this, $target, $pname, $param) {
    var var$4, var$5;
    var$4 = $this.$gl;
    var$5 = $param;
    var$4.texParameterf($target, $pname, var$5);
}
function cgxgbw_WebGL20_glUniform1i($this, $location, $x) {
    var $loc;
    $loc = cgxgbw_WebGL20_getUniformLocation($this, $location);
    $this.$gl.uniform1i($loc, $x);
}
function cgxgbw_WebGL20_glUniformMatrix4fv($this, $location, $count, $transpose, $value, $offset) {
    var $loc;
    $loc = cgxgbw_WebGL20_getUniformLocation($this, $location);
    $this.$gl.uniformMatrix4fv($loc, !!$transpose, otji_JS_wrap0($value));
}
function cgxgbw_WebGL20_glUseProgram($this, $program) {
    var var$2, var$3;
    $this.$currProgram = $program;
    var$2 = $this.$gl;
    var$3 = $this.$programs.$get1(jl_Integer_valueOf($program));
    var$2.useProgram(var$3);
}
function cgxgbw_WebGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
    $this.$gl.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
}
function cgxgbwp_Blob() {
    jl_Object.call(this);
    this.$data4 = null;
}
function cgxgbwp_Blob__init_(var_0) {
    var var_1 = new cgxgbwp_Blob();
    cgxgbwp_Blob__init_0(var_1, var_0);
    return var_1;
}
function cgxgbwp_Blob__init_0($this, $data) {
    jl_Object__init_0($this);
    $this.$data4 = $data;
}
function cgxgbwp_Blob_length($this) {
    return $this.$data4.length;
}
function cgxgbwp_Blob_get($this, $i) {
    return $this.$data4[$i];
}
function cgxgbwp_Blob_read($this) {
    return cgxgbwp_Blob$1__init_($this);
}
function cgxgbwp_Blob_toBase64($this) {
    var $length, $base64code, $encoded, $i, var$5, $j;
    $length = $this.$data4.length;
    $base64code = $rt_s(517);
    $encoded = jl_StringBuilder__init_0((($length * 4 | 0) / 3 | 0) + 2 | 0);
    $i = 0;
    while ($i < $length) {
        var$5 = $length - $i | 0;
        if (var$5 >= 3) {
            $j = ((($this.$data4[$i] & 255) << 16) + (($this.$data4[$i + 1 | 0] & 255) << 8) | 0) + ($this.$data4[$i + 2 | 0] & 255) | 0;
            $encoded.$append8($base64code.$charAt($j >> 18 & 63));
            $encoded.$append8($base64code.$charAt($j >> 12 & 63));
            $encoded.$append8($base64code.$charAt($j >> 6 & 63));
            $encoded.$append8($base64code.$charAt($j & 63));
        } else if (var$5 < 2) {
            $j = ($this.$data4[$i] & 255) << 16;
            $encoded.$append8($base64code.$charAt($j >> 18 & 63));
            $encoded.$append8($base64code.$charAt($j >> 12 & 63));
            $encoded.$append($rt_s(518));
        } else {
            $j = (($this.$data4[$i] & 255) << 16) + (($this.$data4[$i + 1 | 0] & 255) << 8) | 0;
            $encoded.$append8($base64code.$charAt($j >> 18 & 63));
            $encoded.$append8($base64code.$charAt($j >> 12 & 63));
            $encoded.$append8($base64code.$charAt($j >> 6 & 63));
            $encoded.$append($rt_s(519));
        }
        $i = $i + 3 | 0;
    }
    return $encoded.$toString();
}
var jur_AbstractCharClass$LazyPunct = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyPunct__init_() {
    var var_0 = new jur_AbstractCharClass$LazyPunct();
    jur_AbstractCharClass$LazyPunct__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPunct__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyPunct_computeValue($this) {
    return (((jur_CharClass__init_()).$add0(33, 64)).$add0(91, 96)).$add0(123, 126);
}
function cbggg_VertexBufferObjectWithVAO() {
    var a = this; jl_Object.call(a);
    a.$attributes3 = null;
    a.$buffer7 = null;
    a.$bufferHandle3 = 0;
    a.$isStatic1 = 0;
    a.$usage4 = 0;
    a.$isDirty3 = 0;
    a.$isBound3 = 0;
    a.$vaoHandle = 0;
    a.$cachedLocations = null;
}
var cbggg_VertexBufferObjectWithVAO_tmpHandle = null;
function cbggg_VertexBufferObjectWithVAO_$callClinit() {
    cbggg_VertexBufferObjectWithVAO_$callClinit = $rt_eraseClinit(cbggg_VertexBufferObjectWithVAO);
    cbggg_VertexBufferObjectWithVAO__clinit_();
}
function cbggg_VertexBufferObjectWithVAO__init_(var_0, var_1, var_2) {
    var var_3 = new cbggg_VertexBufferObjectWithVAO();
    cbggg_VertexBufferObjectWithVAO__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_VertexBufferObjectWithVAO__init_0($this, $isStatic, $numVertices, $attributes) {
    cbggg_VertexBufferObjectWithVAO_$callClinit();
    jl_Object__init_0($this);
    $this.$isDirty3 = 0;
    $this.$isBound3 = 0;
    $this.$vaoHandle = (-1);
    $this.$cachedLocations = cbgu_IntArray__init_();
    $this.$isStatic1 = $isStatic;
    $this.$attributes3 = $attributes;
    $this.$buffer7 = cbgu_BufferUtils_newFloatBuffer($rt_imul($this.$attributes3.$vertexSize / 4 | 0, $numVertices));
    $this.$buffer7.$flip0();
    $this.$bufferHandle3 = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage4 = !$isStatic ? 35048 : 35044;
    cbggg_VertexBufferObjectWithVAO_createVAO($this);
}
function cbggg_VertexBufferObjectWithVAO_bufferChanged($this) {
    if ($this.$isBound3) {
        cbg_Gdx_gl20.$glBufferData(34962, jn_Buffer_limit($this.$buffer7), $this.$buffer7, $this.$usage4);
        $this.$isDirty3 = 0;
    }
}
function cbggg_VertexBufferObjectWithVAO_setVertices($this, $vertices, $offset, $count) {
    $this.$isDirty3 = 1;
    cbgu_BufferUtils_copy1($vertices, $this.$buffer7, $count, $offset);
    $this.$buffer7.$position2(0);
    $this.$buffer7.$limit0($count);
    cbggg_VertexBufferObjectWithVAO_bufferChanged($this);
}
function cbggg_VertexBufferObjectWithVAO_bind($this, $shader, $locations) {
    var $gl;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindVertexArray($this.$vaoHandle);
    cbggg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations);
    cbggg_VertexBufferObjectWithVAO_bindData($this, $gl);
    $this.$isBound3 = 1;
}
function cbggg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations) {
    var $stillValid, $numAttributes, $i, $attribute, $location, var$8;
    $stillValid = !$this.$cachedLocations.$size11 ? 0 : 1;
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes3);
        if ($stillValid) {
            if ($locations === null) {
                $i = 0;
                while ($stillValid && $i < $numAttributes) {
                    $attribute = cbgg_VertexAttributes_get($this.$attributes3, $i);
                    $location = $shader.$getAttributeLocation($attribute.$alias);
                    $stillValid = $location != $this.$cachedLocations.$get4($i) ? 0 : 1;
                    $i = $i + 1 | 0;
                }
            } else {
                var$8 = $locations.data;
                $stillValid = var$8.length != $this.$cachedLocations.$size11 ? 0 : 1;
                $i = 0;
                while ($stillValid) {
                    if ($i >= $numAttributes)
                        break a;
                    $stillValid = var$8[$i] != $this.$cachedLocations.$get4($i) ? 0 : 1;
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    b: {
        if (!$stillValid) {
            cbg_Gdx_gl.$glBindBuffer(34962, $this.$bufferHandle3);
            cbggg_VertexBufferObjectWithVAO_unbindAttributes($this, $shader);
            $this.$cachedLocations.$clear();
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break b;
                $attribute = cbgg_VertexAttributes_get($this.$attributes3, $i);
                if ($locations !== null) {
                    var$8 = $locations.data;
                    $this.$cachedLocations.$add7(var$8[$i]);
                } else
                    $this.$cachedLocations.$add7($shader.$getAttributeLocation($attribute.$alias));
                $location = $this.$cachedLocations.$get4($i);
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type1, $attribute.$normalized, $this.$attributes3.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbggg_VertexBufferObjectWithVAO_unbindAttributes($this, $shaderProgram) {
    var $numAttributes, $i, $location;
    if ($this.$cachedLocations === null)
        return;
    $numAttributes = cbgg_VertexAttributes_size($this.$attributes3);
    $i = 0;
    while ($i < $numAttributes) {
        $location = $this.$cachedLocations.$get4($i);
        if ($location >= 0)
            $shaderProgram.$disableVertexAttribute0($location);
        $i = $i + 1 | 0;
    }
}
function cbggg_VertexBufferObjectWithVAO_bindData($this, $gl) {
    if ($this.$isDirty3) {
        $gl.$glBindBuffer(34962, $this.$bufferHandle3);
        $this.$buffer7.$limit0(jn_Buffer_limit($this.$buffer7));
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$buffer7), $this.$buffer7, $this.$usage4);
        $this.$isDirty3 = 0;
    }
}
function cbggg_VertexBufferObjectWithVAO_unbind($this, $shader, $locations) {
    var $gl;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindVertexArray(0);
    $this.$isBound3 = 0;
}
function cbggg_VertexBufferObjectWithVAO_createVAO($this) {
    cbggg_VertexBufferObjectWithVAO_$callClinit();
    cbggg_VertexBufferObjectWithVAO_tmpHandle.$clear0();
    cbg_Gdx_gl30.$glGenVertexArrays(1, cbggg_VertexBufferObjectWithVAO_tmpHandle);
    $this.$vaoHandle = cbggg_VertexBufferObjectWithVAO_tmpHandle.$get16();
}
function cbggg_VertexBufferObjectWithVAO__clinit_() {
    cbggg_VertexBufferObjectWithVAO_tmpHandle = cbgu_BufferUtils_newIntBuffer(1);
}
var otcic_Console = $rt_classWithoutFields();
function otcic_Console_writeStderr($b) {
    $rt_putStderr($b);
}
function otcic_Console_writeStdout($b) {
    $rt_putStdout($b);
}
function cbggg_GlyphLayout$GlyphRun() {
    var a = this; jl_Object.call(a);
    a.$glyphs1 = null;
    a.$xAdvances = null;
    a.$x2 = 0.0;
    a.$y2 = 0.0;
    a.$width4 = 0.0;
    a.$color3 = null;
}
function cbggg_GlyphLayout$GlyphRun__init_0() {
    var var_0 = new cbggg_GlyphLayout$GlyphRun();
    cbggg_GlyphLayout$GlyphRun__init_(var_0);
    return var_0;
}
function cbggg_GlyphLayout$GlyphRun__init_($this) {
    jl_Object__init_0($this);
    $this.$glyphs1 = cbgu_Array__init_();
    $this.$xAdvances = cbgu_FloatArray__init_();
    $this.$color3 = cbgg_Color__init_();
}
function cbggg_GlyphLayout$GlyphRun_reset($this) {
    $this.$glyphs1.$clear();
    $this.$xAdvances.$clear();
    $this.$width4 = 0.0;
}
function cbggg_GlyphLayout$GlyphRun_toString($this) {
    var $buffer, $glyphs, $i, $n, $g;
    $buffer = jl_StringBuilder__init_0($this.$glyphs1.$size1 + 32 | 0);
    $glyphs = $this.$glyphs1;
    $i = 0;
    $n = $glyphs.$size1;
    while ($i < $n) {
        $g = $glyphs.$get($i);
        $buffer.$append8($g.$id1 & 65535);
        $i = $i + 1 | 0;
    }
    $buffer.$append($rt_s(520));
    $buffer.$append9($this.$color3);
    $buffer.$append($rt_s(399));
    $buffer.$append2($this.$x2);
    $buffer.$append($rt_s(399));
    $buffer.$append2($this.$y2);
    $buffer.$append($rt_s(399));
    $buffer.$append2($this.$width4);
    return $buffer.$toString();
}
var jlr_InvocationTargetException = $rt_classWithoutFields(jl_ReflectiveOperationException);
var cbggg_PixmapPacker$SkylineStrategy = $rt_classWithoutFields();
function cbggg_PixmapPacker$SkylineStrategy__init_() {
    var var_0 = new cbggg_PixmapPacker$SkylineStrategy();
    cbggg_PixmapPacker$SkylineStrategy__init_0(var_0);
    return var_0;
}
function cbggg_PixmapPacker$SkylineStrategy__init_0($this) {
    jl_Object__init_0($this);
}
function cbggg_PixmapPacker$SkylineStrategy_pack($this, $packer, $name, $rect) {
    var $padding, var$5, var$6, $pageWidth, $pageHeight, $rectWidth, $rectHeight, $i, $n, $page, $row, var$15, $bestRow, $ii, $nn, var$19;
    $padding = $packer.$padding;
    var$5 = $packer.$pageWidth;
    var$6 = $padding * 2 | 0;
    $pageWidth = var$5 - var$6 | 0;
    $pageHeight = $packer.$pageHeight - var$6 | 0;
    $rectWidth = ($rect.$width | 0) + $padding | 0;
    $rectHeight = ($rect.$height | 0) + $padding | 0;
    $i = 0;
    $n = $packer.$pages.$size1;
    a: while (true) {
        if ($i >= $n) {
            $page = cbggg_PixmapPacker$SkylineStrategy$SkylinePage__init_($packer);
            $packer.$pages.$add3($page);
            $row = cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row__init_();
            $row.$x4 = $padding + $rectWidth | 0;
            $row.$y4 = $padding;
            $row.$height4 = $rectHeight;
            $page.$rows.$add3($row);
            var$15 = $padding;
            $rect.$x = var$15;
            $rect.$y = var$15;
            return $page;
        }
        $page = $packer.$pages.$get($i);
        $bestRow = null;
        $ii = 0;
        $nn = $page.$rows.$size1 - 1 | 0;
        while ($ii < $nn) {
            $row = $page.$rows.$get($ii);
            if (($row.$x4 + $rectWidth | 0) < $pageWidth && ($row.$y4 + $rectHeight | 0) < $pageHeight && $rectHeight <= $row.$height4 && !($bestRow !== null && $row.$height4 >= $bestRow.$height4))
                $bestRow = $row;
            $ii = $ii + 1 | 0;
        }
        b: {
            if ($bestRow !== null)
                $row = $bestRow;
            else {
                $row = $page.$rows.$peek();
                if (($row.$y4 + $rectHeight | 0) >= $pageHeight)
                    break b;
                if (($row.$x4 + $rectWidth | 0) < $pageWidth)
                    $row.$height4 = jl_Math_max($row.$height4, $rectHeight);
                else if ((($row.$y4 + $row.$height4 | 0) + $rectHeight | 0) >= $pageHeight)
                    $row = $bestRow;
                else {
                    var$19 = cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row__init_();
                    var$19.$y4 = $row.$y4 + $row.$height4 | 0;
                    var$19.$height4 = $rectHeight;
                    $page.$rows.$add3(var$19);
                    $row = var$19;
                }
            }
            if ($row !== null)
                break a;
        }
        $i = $i + 1 | 0;
    }
    $rect.$x = $row.$x4;
    $rect.$y = $row.$y4;
    $row.$x4 = $row.$x4 + $rectWidth | 0;
    return $page;
}
function jur_WordBoundary() {
    jur_AbstractSet.call(this);
    this.$positive = 0;
}
function jur_WordBoundary__init_(var_0) {
    var var_1 = new jur_WordBoundary();
    jur_WordBoundary__init_0(var_1, var_0);
    return var_1;
}
function jur_WordBoundary__init_0($this, $positive) {
    jur_AbstractSet__init_($this);
    $this.$positive = $positive;
}
function jur_WordBoundary_matches($this, $stringIndex, $testString, $matchResult) {
    var $ch1, $ch2, $leftBound, $left, $right;
    $ch1 = $stringIndex < $matchResult.$getRightBound() ? $testString.$charAt($stringIndex) : 32;
    $ch2 = !$stringIndex ? 32 : $testString.$charAt($stringIndex - 1 | 0);
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    $left = $ch1 != 32 && !jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1;
    $right = $ch2 != 32 && !jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1;
    return $left ^ $right ^ $this.$positive ? (-1) : $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_WordBoundary_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_WordBoundary_isSpace($this, $ch, $index, $leftBound, $testString) {
    var var$5;
    if (!jl_Character_isLetterOrDigit($ch) && $ch != 95) {
        a: {
            if (jl_Character_getType0($ch) == 6)
                while (true) {
                    $index = $index + (-1) | 0;
                    if ($index < $leftBound)
                        break a;
                    var$5 = $testString.$charAt($index);
                    if (jl_Character_isLetterOrDigit(var$5))
                        return 0;
                    if (jl_Character_getType0(var$5) != 6)
                        return 1;
                }
        }
        return 1;
    }
    return 0;
}
var jur_AbstractCharClass$LazySpace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazySpace__init_() {
    var var_0 = new jur_AbstractCharClass$LazySpace();
    jur_AbstractCharClass$LazySpace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpace__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazySpace_computeValue($this) {
    return ((jur_CharClass__init_()).$add0(9, 13)).$add(32);
}
var cbgu_BufferUtils = $rt_classWithoutFields();
function cbgu_BufferUtils_copy1($src, $dst, $numFloats, $offset) {
    var $floatBuffer;
    $floatBuffer = cbgu_BufferUtils_asFloatBuffer($dst);
    $floatBuffer.$clear0();
    $dst.$position2(0);
    $floatBuffer.$put10($src, $offset, $numFloats);
    $dst.$position2(0);
    if (!($dst instanceof jn_ByteBuffer))
        $dst.$limit0($numFloats);
    else
        $dst.$limit0($numFloats << 2);
}
function cbgu_BufferUtils_copy($src, $srcOffset, $dst, $numElements) {
    var $byteBuffer, $oldPosition;
    if (!($dst instanceof jn_ByteBuffer))
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(521)));
    $byteBuffer = $dst;
    $oldPosition = jn_Buffer_position($byteBuffer);
    $byteBuffer.$limit0($oldPosition + $numElements | 0);
    $byteBuffer.$put0($src, $srcOffset, $numElements);
    $byteBuffer.$position2($oldPosition);
}
function cbgu_BufferUtils_copy0($src, $dst, $numElements) {
    var $srcPos, $dstPos, $srcIsByte, $dstIsByte;
    $srcPos = jn_Buffer_position($src);
    $dstPos = jn_Buffer_position($dst);
    $src.$limit0($srcPos + $numElements | 0);
    $srcIsByte = $src instanceof jn_ByteBuffer;
    $dstIsByte = $dst instanceof jn_ByteBuffer;
    $dst.$limit0(jn_Buffer_capacity($dst));
    if ($srcIsByte && $dstIsByte)
        $dst.$put15($src);
    else if (!(!$srcIsByte && !($src instanceof jn_CharBuffer)) && !(!$dstIsByte && !($dst instanceof jn_CharBuffer)))
        (!$dstIsByte ? $dst : $dst.$asCharBuffer()).$put16(!$srcIsByte ? $src : $src.$asCharBuffer());
    else if (!(!$srcIsByte && !($src instanceof jn_ShortBuffer)) && !(!$dstIsByte && !($dst instanceof jn_ShortBuffer)))
        (!$dstIsByte ? $dst : $dst.$asShortBuffer()).$put17(!$srcIsByte ? $src : $src.$asShortBuffer());
    else if (!(!$srcIsByte && !($src instanceof jn_IntBuffer)) && !(!$dstIsByte && !($dst instanceof jn_IntBuffer)))
        (!$dstIsByte ? $dst : $dst.$asIntBuffer()).$put18(!$srcIsByte ? $src : $src.$asIntBuffer());
    else if (!(!$srcIsByte && !($src instanceof jn_LongBuffer)) && !(!$dstIsByte && !($dst instanceof jn_LongBuffer)))
        (!$dstIsByte ? $dst : $dst.$asLongBuffer()).$put19(!$srcIsByte ? $src : $src.$asLongBuffer());
    else if (!(!$srcIsByte && !($src instanceof jn_FloatBuffer)) && !(!$dstIsByte && !($dst instanceof jn_FloatBuffer)))
        (!$dstIsByte ? $dst : $dst.$asFloatBuffer()).$put20(!$srcIsByte ? $src : $src.$asFloatBuffer());
    else {
        a: {
            if (!(!$srcIsByte && !($src instanceof jn_DoubleBuffer))) {
                if ($dstIsByte)
                    break a;
                if ($dst instanceof jn_DoubleBuffer)
                    break a;
            }
            $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(522)));
        }
        (!$dstIsByte ? $dst : $dst.$asDoubleBuffer()).$put21(!$srcIsByte ? $src : $src.$asDoubleBuffer());
    }
    $src.$position2($srcPos);
    $dst.$flip0();
    $dst.$position2($dstPos);
}
function cbgu_BufferUtils_asFloatBuffer($data) {
    var $buffer;
    $buffer = null;
    if ($data instanceof jn_ByteBuffer)
        $buffer = $data.$asFloatBuffer();
    else if ($data instanceof jn_FloatBuffer)
        $buffer = $data;
    if ($buffer !== null)
        return $buffer;
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(523)));
}
function cbgu_BufferUtils_newFloatBuffer($numFloats) {
    var $buffer;
    if (!cgxgbw_WebTool_isProdMode())
        return jn_FloatBuffer_wrap0($rt_createFloatArray($numFloats));
    $buffer = jn_ByteBuffer_allocateDirect($numFloats * 4 | 0);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer.$asFloatBuffer();
}
function cbgu_BufferUtils_newByteBuffer($numBytes) {
    var $buffer;
    if (!cgxgbw_WebTool_isProdMode())
        return jn_ByteBuffer_wrap($rt_createByteArray($numBytes));
    $buffer = jn_ByteBuffer_allocateDirect($numBytes);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer;
}
function cbgu_BufferUtils_newShortBuffer($numShorts) {
    var $buffer;
    if (!cgxgbw_WebTool_isProdMode())
        return jn_ShortBuffer_wrap0($rt_createShortArray($numShorts));
    $buffer = jn_ByteBuffer_allocateDirect($numShorts * 2 | 0);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer.$asShortBuffer();
}
function cbgu_BufferUtils_newIntBuffer($numInts) {
    var $buffer;
    if (!cgxgbw_WebTool_isProdMode())
        return jn_IntBuffer_wrap0($rt_createIntArray($numInts));
    $buffer = jn_ByteBuffer_allocateDirect($numInts * 4 | 0);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer.$asIntBuffer();
}
var jl_Double = $rt_classWithoutFields(jl_Number);
var jl_Double_NaN = 0.0;
var jl_Double_TYPE = null;
function jl_Double_$callClinit() {
    jl_Double_$callClinit = $rt_eraseClinit(jl_Double);
    jl_Double__clinit_();
}
function jl_Double__clinit_() {
    jl_Double_NaN = NaN;
    jl_Double_TYPE = $rt_cls($rt_doublecls());
}
var otjde_MouseEventTarget = $rt_classWithoutFields(0);
var otjb_WindowEventTarget = $rt_classWithoutFields(0);
var otjb_StorageProvider = $rt_classWithoutFields(0);
var otjb_Window = $rt_classWithoutFields();
function otjb_Window_addEventListener$exported$0(var$0, var$1, var$2) {
    var$0.$addEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otjb_Window_removeEventListener$exported$1(var$0, var$1, var$2) {
    var$0.$removeEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otjb_Window_get$exported$2(var$0, var$1) {
    return var$0.$get12(var$1);
}
function otjb_Window_removeEventListener$exported$3(var$0, var$1, var$2, var$3) {
    var$0.$removeEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function otjb_Window_dispatchEvent$exported$4(var$0, var$1) {
    return !!var$0.$dispatchEvent(var$1);
}
function otjb_Window_getLength$exported$5(var$0) {
    return var$0.$getLength();
}
function otjb_Window_addEventListener$exported$6(var$0, var$1, var$2, var$3) {
    var$0.$addEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
var jur_IntHash = $rt_classWithoutFields();
function cbgm_Matrix4() {
    jl_Object.call(this);
    this.$val = null;
}
var cbgm_Matrix4_tmp = null;
var cbgm_Matrix4_quat = null;
var cbgm_Matrix4_quat2 = null;
var cbgm_Matrix4_l_vez = null;
var cbgm_Matrix4_l_vex = null;
var cbgm_Matrix4_l_vey = null;
var cbgm_Matrix4_tmpVec = null;
var cbgm_Matrix4_tmpMat = null;
var cbgm_Matrix4_right = null;
var cbgm_Matrix4_tmpForward = null;
var cbgm_Matrix4_tmpUp = null;
function cbgm_Matrix4_$callClinit() {
    cbgm_Matrix4_$callClinit = $rt_eraseClinit(cbgm_Matrix4);
    cbgm_Matrix4__clinit_();
}
function cbgm_Matrix4__init_() {
    var var_0 = new cbgm_Matrix4();
    cbgm_Matrix4__init_0(var_0);
    return var_0;
}
function cbgm_Matrix4__init_0($this) {
    cbgm_Matrix4_$callClinit();
    jl_Object__init_0($this);
    $this.$val = $rt_createFloatArray(16);
    $this.$val.data[0] = 1.0;
    $this.$val.data[5] = 1.0;
    $this.$val.data[10] = 1.0;
    $this.$val.data[15] = 1.0;
}
function cbgm_Matrix4_set($this, $matrix) {
    return $this.$set11($matrix.$val);
}
function cbgm_Matrix4_set0($this, $values) {
    var var$2;
    var$2 = $values.data;
    $this.$val.data[0] = var$2[0];
    $this.$val.data[1] = var$2[1];
    $this.$val.data[2] = var$2[2];
    $this.$val.data[3] = var$2[3];
    $this.$val.data[4] = var$2[4];
    $this.$val.data[5] = var$2[5];
    $this.$val.data[6] = var$2[6];
    $this.$val.data[7] = var$2[7];
    $this.$val.data[8] = var$2[8];
    $this.$val.data[9] = var$2[9];
    $this.$val.data[10] = var$2[10];
    $this.$val.data[11] = var$2[11];
    $this.$val.data[12] = var$2[12];
    $this.$val.data[13] = var$2[13];
    $this.$val.data[14] = var$2[14];
    $this.$val.data[15] = var$2[15];
    return $this;
}
function cbgm_Matrix4_mul0($this, $matrix) {
    cbgm_Matrix4_$callClinit();
    cbgm_Matrix4_tmp.data[0] = $this.$val.data[0] * $matrix.$val.data[0] + $this.$val.data[4] * $matrix.$val.data[1] + $this.$val.data[8] * $matrix.$val.data[2] + $this.$val.data[12] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[4] = $this.$val.data[0] * $matrix.$val.data[4] + $this.$val.data[4] * $matrix.$val.data[5] + $this.$val.data[8] * $matrix.$val.data[6] + $this.$val.data[12] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[8] = $this.$val.data[0] * $matrix.$val.data[8] + $this.$val.data[4] * $matrix.$val.data[9] + $this.$val.data[8] * $matrix.$val.data[10] + $this.$val.data[12] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[12] = $this.$val.data[0] * $matrix.$val.data[12] + $this.$val.data[4] * $matrix.$val.data[13] + $this.$val.data[8] * $matrix.$val.data[14] + $this.$val.data[12] * $matrix.$val.data[15];
    cbgm_Matrix4_tmp.data[1] = $this.$val.data[1] * $matrix.$val.data[0] + $this.$val.data[5] * $matrix.$val.data[1] + $this.$val.data[9] * $matrix.$val.data[2] + $this.$val.data[13] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[5] = $this.$val.data[1] * $matrix.$val.data[4] + $this.$val.data[5] * $matrix.$val.data[5] + $this.$val.data[9] * $matrix.$val.data[6] + $this.$val.data[13] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[9] = $this.$val.data[1] * $matrix.$val.data[8] + $this.$val.data[5] * $matrix.$val.data[9] + $this.$val.data[9] * $matrix.$val.data[10] + $this.$val.data[13] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[13] = $this.$val.data[1] * $matrix.$val.data[12] + $this.$val.data[5] * $matrix.$val.data[13] + $this.$val.data[9] * $matrix.$val.data[14] + $this.$val.data[13] * $matrix.$val.data[15];
    cbgm_Matrix4_tmp.data[2] = $this.$val.data[2] * $matrix.$val.data[0] + $this.$val.data[6] * $matrix.$val.data[1] + $this.$val.data[10] * $matrix.$val.data[2] + $this.$val.data[14] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[6] = $this.$val.data[2] * $matrix.$val.data[4] + $this.$val.data[6] * $matrix.$val.data[5] + $this.$val.data[10] * $matrix.$val.data[6] + $this.$val.data[14] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[10] = $this.$val.data[2] * $matrix.$val.data[8] + $this.$val.data[6] * $matrix.$val.data[9] + $this.$val.data[10] * $matrix.$val.data[10] + $this.$val.data[14] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[14] = $this.$val.data[2] * $matrix.$val.data[12] + $this.$val.data[6] * $matrix.$val.data[13] + $this.$val.data[10] * $matrix.$val.data[14] + $this.$val.data[14] * $matrix.$val.data[15];
    cbgm_Matrix4_tmp.data[3] = $this.$val.data[3] * $matrix.$val.data[0] + $this.$val.data[7] * $matrix.$val.data[1] + $this.$val.data[11] * $matrix.$val.data[2] + $this.$val.data[15] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[7] = $this.$val.data[3] * $matrix.$val.data[4] + $this.$val.data[7] * $matrix.$val.data[5] + $this.$val.data[11] * $matrix.$val.data[6] + $this.$val.data[15] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[11] = $this.$val.data[3] * $matrix.$val.data[8] + $this.$val.data[7] * $matrix.$val.data[9] + $this.$val.data[11] * $matrix.$val.data[10] + $this.$val.data[15] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[15] = $this.$val.data[3] * $matrix.$val.data[12] + $this.$val.data[7] * $matrix.$val.data[13] + $this.$val.data[11] * $matrix.$val.data[14] + $this.$val.data[15] * $matrix.$val.data[15];
    return $this.$set11(cbgm_Matrix4_tmp);
}
function cbgm_Matrix4_idt($this) {
    $this.$val.data[0] = 1.0;
    $this.$val.data[4] = 0.0;
    $this.$val.data[8] = 0.0;
    $this.$val.data[12] = 0.0;
    $this.$val.data[1] = 0.0;
    $this.$val.data[5] = 1.0;
    $this.$val.data[9] = 0.0;
    $this.$val.data[13] = 0.0;
    $this.$val.data[2] = 0.0;
    $this.$val.data[6] = 0.0;
    $this.$val.data[10] = 1.0;
    $this.$val.data[14] = 0.0;
    $this.$val.data[3] = 0.0;
    $this.$val.data[7] = 0.0;
    $this.$val.data[11] = 0.0;
    $this.$val.data[15] = 1.0;
    return $this;
}
function cbgm_Matrix4_setToOrtho2D($this, $x, $y, $width, $height) {
    $this.$setToOrtho($x, $x + $width, $y, $y + $height, 0.0, 1.0);
    return $this;
}
function cbgm_Matrix4_setToOrtho($this, $left, $right, $bottom, $top, $near, $far) {
    var var$7, $x_orth, var$9, $y_orth, var$11, $z_orth, $tx, $ty, $tz;
    $this.$idt0();
    var$7 = $right - $left;
    $x_orth = 2.0 / var$7;
    var$9 = $top - $bottom;
    $y_orth = 2.0 / var$9;
    var$11 = $far - $near;
    $z_orth = (-2.0) / var$11;
    $tx =  -($right + $left) / var$7;
    $ty =  -($top + $bottom) / var$9;
    $tz =  -($far + $near) / var$11;
    $this.$val.data[0] = $x_orth;
    $this.$val.data[1] = 0.0;
    $this.$val.data[2] = 0.0;
    $this.$val.data[3] = 0.0;
    $this.$val.data[4] = 0.0;
    $this.$val.data[5] = $y_orth;
    $this.$val.data[6] = 0.0;
    $this.$val.data[7] = 0.0;
    $this.$val.data[8] = 0.0;
    $this.$val.data[9] = 0.0;
    $this.$val.data[10] = $z_orth;
    $this.$val.data[11] = 0.0;
    $this.$val.data[12] = $tx;
    $this.$val.data[13] = $ty;
    $this.$val.data[14] = $tz;
    $this.$val.data[15] = 1.0;
    return $this;
}
function cbgm_Matrix4_setToTranslation($this, $x, $y, $z) {
    $this.$idt0();
    $this.$val.data[12] = $x;
    $this.$val.data[13] = $y;
    $this.$val.data[14] = $z;
    return $this;
}
function cbgm_Matrix4_setToLookAt($this, $direction, $up) {
    cbgm_Matrix4_$callClinit();
    (cbgm_Matrix4_l_vez.$set2($direction)).$nor();
    (cbgm_Matrix4_l_vex.$set2($direction)).$nor();
    (cbgm_Matrix4_l_vex.$crs0($up)).$nor();
    ((cbgm_Matrix4_l_vey.$set2(cbgm_Matrix4_l_vex)).$crs0(cbgm_Matrix4_l_vez)).$nor();
    $this.$idt0();
    $this.$val.data[0] = cbgm_Matrix4_l_vex.$x3;
    $this.$val.data[4] = cbgm_Matrix4_l_vex.$y3;
    $this.$val.data[8] = cbgm_Matrix4_l_vex.$z0;
    $this.$val.data[1] = cbgm_Matrix4_l_vey.$x3;
    $this.$val.data[5] = cbgm_Matrix4_l_vey.$y3;
    $this.$val.data[9] = cbgm_Matrix4_l_vey.$z0;
    $this.$val.data[2] =  -cbgm_Matrix4_l_vez.$x3;
    $this.$val.data[6] =  -cbgm_Matrix4_l_vez.$y3;
    $this.$val.data[10] =  -cbgm_Matrix4_l_vez.$z0;
    return $this;
}
function cbgm_Matrix4_setToLookAt0($this, $position, $target, $up) {
    cbgm_Matrix4_$callClinit();
    (cbgm_Matrix4_tmpVec.$set2($target)).$sub($position);
    $this.$setToLookAt0(cbgm_Matrix4_tmpVec, $up);
    $this.$mul0(cbgm_Matrix4_tmpMat.$setToTranslation( -$position.$x3,  -$position.$y3,  -$position.$z0));
    return $this;
}
function cbgm_Matrix4_matrix4_mul($mata, $matb) {
    var var$3, var$4, $tmp_0, var$6;
    cbgm_Matrix4_$callClinit();
    var$3 = $matb.data;
    var$4 = $mata.data;
    $tmp_0 = $rt_createFloatArray(16);
    var$6 = $tmp_0.data;
    var$6[0] = var$4[0] * var$3[0] + var$4[4] * var$3[1] + var$4[8] * var$3[2] + var$4[12] * var$3[3];
    var$6[4] = var$4[0] * var$3[4] + var$4[4] * var$3[5] + var$4[8] * var$3[6] + var$4[12] * var$3[7];
    var$6[8] = var$4[0] * var$3[8] + var$4[4] * var$3[9] + var$4[8] * var$3[10] + var$4[12] * var$3[11];
    var$6[12] = var$4[0] * var$3[12] + var$4[4] * var$3[13] + var$4[8] * var$3[14] + var$4[12] * var$3[15];
    var$6[1] = var$4[1] * var$3[0] + var$4[5] * var$3[1] + var$4[9] * var$3[2] + var$4[13] * var$3[3];
    var$6[5] = var$4[1] * var$3[4] + var$4[5] * var$3[5] + var$4[9] * var$3[6] + var$4[13] * var$3[7];
    var$6[9] = var$4[1] * var$3[8] + var$4[5] * var$3[9] + var$4[9] * var$3[10] + var$4[13] * var$3[11];
    var$6[13] = var$4[1] * var$3[12] + var$4[5] * var$3[13] + var$4[9] * var$3[14] + var$4[13] * var$3[15];
    var$6[2] = var$4[2] * var$3[0] + var$4[6] * var$3[1] + var$4[10] * var$3[2] + var$4[14] * var$3[3];
    var$6[6] = var$4[2] * var$3[4] + var$4[6] * var$3[5] + var$4[10] * var$3[6] + var$4[14] * var$3[7];
    var$6[10] = var$4[2] * var$3[8] + var$4[6] * var$3[9] + var$4[10] * var$3[10] + var$4[14] * var$3[11];
    var$6[14] = var$4[2] * var$3[12] + var$4[6] * var$3[13] + var$4[10] * var$3[14] + var$4[14] * var$3[15];
    var$6[3] = var$4[3] * var$3[0] + var$4[7] * var$3[1] + var$4[11] * var$3[2] + var$4[15] * var$3[3];
    var$6[7] = var$4[3] * var$3[4] + var$4[7] * var$3[5] + var$4[11] * var$3[6] + var$4[15] * var$3[7];
    var$6[11] = var$4[3] * var$3[8] + var$4[7] * var$3[9] + var$4[11] * var$3[10] + var$4[15] * var$3[11];
    var$6[15] = var$4[3] * var$3[12] + var$4[7] * var$3[13] + var$4[11] * var$3[14] + var$4[15] * var$3[15];
    jl_System_arraycopy($tmp_0, 0, $mata, 0, 16);
}
function cbgm_Matrix4_matrix4_det($val) {
    var var$2;
    cbgm_Matrix4_$callClinit();
    var$2 = $val.data;
    return var$2[3] * var$2[6] * var$2[9] * var$2[12] - var$2[2] * var$2[7] * var$2[9] * var$2[12] - var$2[3] * var$2[5] * var$2[10] * var$2[12] + var$2[1] * var$2[7] * var$2[10] * var$2[12] + var$2[2] * var$2[5] * var$2[11] * var$2[12] - var$2[1] * var$2[6] * var$2[11] * var$2[12] - var$2[3] * var$2[6] * var$2[8] * var$2[13] + var$2[2] * var$2[7] * var$2[8] * var$2[13] + var$2[3] * var$2[4] * var$2[10] * var$2[13] - var$2[0] * var$2[7] * var$2[10] * var$2[13] - var$2[2] * var$2[4] * var$2[11] * var$2[13] +
    var$2[0] * var$2[6] * var$2[11] * var$2[13] + var$2[3] * var$2[5] * var$2[8] * var$2[14] - var$2[1] * var$2[7] * var$2[8] * var$2[14] - var$2[3] * var$2[4] * var$2[9] * var$2[14] + var$2[0] * var$2[7] * var$2[9] * var$2[14] + var$2[1] * var$2[4] * var$2[11] * var$2[14] - var$2[0] * var$2[5] * var$2[11] * var$2[14] - var$2[2] * var$2[5] * var$2[8] * var$2[15] + var$2[1] * var$2[6] * var$2[8] * var$2[15] + var$2[2] * var$2[4] * var$2[9] * var$2[15] - var$2[0] * var$2[6] * var$2[9] * var$2[15] - var$2[1] *
    var$2[4] * var$2[10] * var$2[15] + var$2[0] * var$2[5] * var$2[10] * var$2[15];
}
function cbgm_Matrix4_matrix4_inv($val) {
    var $tmp_0, $l_det, var$4, var$5, $inv_det;
    cbgm_Matrix4_$callClinit();
    $tmp_0 = $rt_createFloatArray(16);
    $l_det = cbgm_Matrix4_matrix4_det($val);
    if ($l_det === 0.0)
        return 0;
    var$4 = $tmp_0.data;
    var$5 = $val.data;
    var$4[0] = var$5[9] * var$5[14] * var$5[7] - var$5[13] * var$5[10] * var$5[7] + var$5[13] * var$5[6] * var$5[11] - var$5[5] * var$5[14] * var$5[11] - var$5[9] * var$5[6] * var$5[15] + var$5[5] * var$5[10] * var$5[15];
    var$4[4] = var$5[12] * var$5[10] * var$5[7] - var$5[8] * var$5[14] * var$5[7] - var$5[12] * var$5[6] * var$5[11] + var$5[4] * var$5[14] * var$5[11] + var$5[8] * var$5[6] * var$5[15] - var$5[4] * var$5[10] * var$5[15];
    var$4[8] = var$5[8] * var$5[13] * var$5[7] - var$5[12] * var$5[9] * var$5[7] + var$5[12] * var$5[5] * var$5[11] - var$5[4] * var$5[13] * var$5[11] - var$5[8] * var$5[5] * var$5[15] + var$5[4] * var$5[9] * var$5[15];
    var$4[12] = var$5[12] * var$5[9] * var$5[6] - var$5[8] * var$5[13] * var$5[6] - var$5[12] * var$5[5] * var$5[10] + var$5[4] * var$5[13] * var$5[10] + var$5[8] * var$5[5] * var$5[14] - var$5[4] * var$5[9] * var$5[14];
    var$4[1] = var$5[13] * var$5[10] * var$5[3] - var$5[9] * var$5[14] * var$5[3] - var$5[13] * var$5[2] * var$5[11] + var$5[1] * var$5[14] * var$5[11] + var$5[9] * var$5[2] * var$5[15] - var$5[1] * var$5[10] * var$5[15];
    var$4[5] = var$5[8] * var$5[14] * var$5[3] - var$5[12] * var$5[10] * var$5[3] + var$5[12] * var$5[2] * var$5[11] - var$5[0] * var$5[14] * var$5[11] - var$5[8] * var$5[2] * var$5[15] + var$5[0] * var$5[10] * var$5[15];
    var$4[9] = var$5[12] * var$5[9] * var$5[3] - var$5[8] * var$5[13] * var$5[3] - var$5[12] * var$5[1] * var$5[11] + var$5[0] * var$5[13] * var$5[11] + var$5[8] * var$5[1] * var$5[15] - var$5[0] * var$5[9] * var$5[15];
    var$4[13] = var$5[8] * var$5[13] * var$5[2] - var$5[12] * var$5[9] * var$5[2] + var$5[12] * var$5[1] * var$5[10] - var$5[0] * var$5[13] * var$5[10] - var$5[8] * var$5[1] * var$5[14] + var$5[0] * var$5[9] * var$5[14];
    var$4[2] = var$5[5] * var$5[14] * var$5[3] - var$5[13] * var$5[6] * var$5[3] + var$5[13] * var$5[2] * var$5[7] - var$5[1] * var$5[14] * var$5[7] - var$5[5] * var$5[2] * var$5[15] + var$5[1] * var$5[6] * var$5[15];
    var$4[6] = var$5[12] * var$5[6] * var$5[3] - var$5[4] * var$5[14] * var$5[3] - var$5[12] * var$5[2] * var$5[7] + var$5[0] * var$5[14] * var$5[7] + var$5[4] * var$5[2] * var$5[15] - var$5[0] * var$5[6] * var$5[15];
    var$4[10] = var$5[4] * var$5[13] * var$5[3] - var$5[12] * var$5[5] * var$5[3] + var$5[12] * var$5[1] * var$5[7] - var$5[0] * var$5[13] * var$5[7] - var$5[4] * var$5[1] * var$5[15] + var$5[0] * var$5[5] * var$5[15];
    var$4[14] = var$5[12] * var$5[5] * var$5[2] - var$5[4] * var$5[13] * var$5[2] - var$5[12] * var$5[1] * var$5[6] + var$5[0] * var$5[13] * var$5[6] + var$5[4] * var$5[1] * var$5[14] - var$5[0] * var$5[5] * var$5[14];
    var$4[3] = var$5[9] * var$5[6] * var$5[3] - var$5[5] * var$5[10] * var$5[3] - var$5[9] * var$5[2] * var$5[7] + var$5[1] * var$5[10] * var$5[7] + var$5[5] * var$5[2] * var$5[11] - var$5[1] * var$5[6] * var$5[11];
    var$4[7] = var$5[4] * var$5[10] * var$5[3] - var$5[8] * var$5[6] * var$5[3] + var$5[8] * var$5[2] * var$5[7] - var$5[0] * var$5[10] * var$5[7] - var$5[4] * var$5[2] * var$5[11] + var$5[0] * var$5[6] * var$5[11];
    var$4[11] = var$5[8] * var$5[5] * var$5[3] - var$5[4] * var$5[9] * var$5[3] - var$5[8] * var$5[1] * var$5[7] + var$5[0] * var$5[9] * var$5[7] + var$5[4] * var$5[1] * var$5[11] - var$5[0] * var$5[5] * var$5[11];
    var$4[15] = var$5[4] * var$5[9] * var$5[2] - var$5[8] * var$5[5] * var$5[2] + var$5[8] * var$5[1] * var$5[6] - var$5[0] * var$5[9] * var$5[6] - var$5[4] * var$5[1] * var$5[10] + var$5[0] * var$5[5] * var$5[10];
    $inv_det = 1.0 / $l_det;
    var$5[0] = var$4[0] * $inv_det;
    var$5[4] = var$4[4] * $inv_det;
    var$5[8] = var$4[8] * $inv_det;
    var$5[12] = var$4[12] * $inv_det;
    var$5[1] = var$4[1] * $inv_det;
    var$5[5] = var$4[5] * $inv_det;
    var$5[9] = var$4[9] * $inv_det;
    var$5[13] = var$4[13] * $inv_det;
    var$5[2] = var$4[2] * $inv_det;
    var$5[6] = var$4[6] * $inv_det;
    var$5[10] = var$4[10] * $inv_det;
    var$5[14] = var$4[14] * $inv_det;
    var$5[3] = var$4[3] * $inv_det;
    var$5[7] = var$4[7] * $inv_det;
    var$5[11] = var$4[11] * $inv_det;
    var$5[15] = var$4[15] * $inv_det;
    return 1;
}
function cbgm_Matrix4_matrix4_proj($mat, $vec, $offset) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, $inv_w, $x, $y, $z;
    cbgm_Matrix4_$callClinit();
    var$4 = $mat.data;
    var$5 = $vec.data;
    var$6 = $offset + 0 | 0;
    var$7 = var$5[var$6] * var$4[3];
    var$8 = $offset + 1 | 0;
    var$9 = var$7 + var$5[var$8] * var$4[7];
    var$10 = $offset + 2 | 0;
    $inv_w = 1.0 / (var$9 + var$5[var$10] * var$4[11] + var$4[15]);
    $x = (var$5[var$6] * var$4[0] + var$5[var$8] * var$4[4] + var$5[var$10] * var$4[8] + var$4[12]) * $inv_w;
    $y = (var$5[var$6] * var$4[1] + var$5[var$8] * var$4[5] + var$5[var$10] * var$4[9] + var$4[13]) * $inv_w;
    $z = (var$5[var$6] * var$4[2] + var$5[var$8] * var$4[6] + var$5[var$10] * var$4[10] + var$4[14]) * $inv_w;
    var$5[var$6] = $x;
    var$5[var$8] = $y;
    var$5[var$10] = $z;
}
function cbgm_Matrix4_mul($mata, $matb) {
    cbgm_Matrix4_$callClinit();
    cbgm_Matrix4_matrix4_mul($mata, $matb);
}
function cbgm_Matrix4_prj($mat, $vecs, $offset, $numVecs, $stride) {
    var $i;
    cbgm_Matrix4_$callClinit();
    $i = 0;
    while ($i < $numVecs) {
        cbgm_Matrix4_matrix4_proj($mat, $vecs, $offset);
        $offset = $offset + $stride | 0;
        $i = $i + 1 | 0;
    }
}
function cbgm_Matrix4_inv($values) {
    cbgm_Matrix4_$callClinit();
    return cbgm_Matrix4_matrix4_inv($values);
}
function cbgm_Matrix4__clinit_() {
    cbgm_Matrix4_tmp = $rt_createFloatArray(16);
    cbgm_Matrix4_quat = cbgm_Quaternion__init_1();
    cbgm_Matrix4_quat2 = cbgm_Quaternion__init_1();
    cbgm_Matrix4_l_vez = cbgm_Vector3__init_();
    cbgm_Matrix4_l_vex = cbgm_Vector3__init_();
    cbgm_Matrix4_l_vey = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpVec = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpMat = cbgm_Matrix4__init_();
    cbgm_Matrix4_right = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpForward = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpUp = cbgm_Vector3__init_();
}
var jur_ReluctantAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet);
function jur_ReluctantAltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantAltQuantifierSet();
    jur_ReluctantAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
}
var jl_NegativeArraySizeException = $rt_classWithoutFields(jl_RuntimeException);
function jl_NegativeArraySizeException__init_() {
    var var_0 = new jl_NegativeArraySizeException();
    jl_NegativeArraySizeException__init_0(var_0);
    return var_0;
}
function jl_NegativeArraySizeException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row() {
    var a = this; jl_Object.call(a);
    a.$x4 = 0;
    a.$y4 = 0;
    a.$height4 = 0;
}
function cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row__init_() {
    var var_0 = new cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row();
    cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row__init_0(var_0);
    return var_0;
}
function cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row__init_0($this) {
    jl_Object__init_0($this);
}
var jur_AbstractCharClass$LazyJavaWhitespace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaWhitespace__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaWhitespace();
    jur_AbstractCharClass$LazyJavaWhitespace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaWhitespace__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaWhitespace_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaWhitespace$1__init_($this);
}
function cgxgbwp_AssetDownloadImpl$3() {
    var a = this; cgxgbw_AssetLoaderListener.call(a);
    a.$val$listener1 = null;
    a.$this$042 = null;
}
function cgxgbwp_AssetDownloadImpl$3__init_(var_0, var_1) {
    var var_2 = new cgxgbwp_AssetDownloadImpl$3();
    cgxgbwp_AssetDownloadImpl$3__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbwp_AssetDownloadImpl$3__init_0($this, $this$0, var$2) {
    $this.$this$042 = $this$0;
    $this.$val$listener1 = var$2;
    cgxgbw_AssetLoaderListener__init_0($this);
}
function cgxgbwp_AssetDownloadImpl$3_onProgress($this, $amount) {
    $this.$val$listener1.$onProgress($amount);
}
function cgxgbwp_AssetDownloadImpl$3_onFailure($this, $url) {
    $this.$val$listener1.$onFailure($url);
}
function cgxgbwp_AssetDownloadImpl$3_onSuccess($this, $url, $result) {
    return $this.$val$listener1.$onSuccess0($url, null);
}
function cgxgbwp_AssetDownloadImpl$3_onSuccess0($this, var$1, var$2) {
    return $this.$onSuccess1(var$1, var$2);
}
var cgxgbwd_EventHandlerWrapper = $rt_classWithoutFields(0);
function cgxgbwp_AssetDownloadImpl$2() {
    var a = this; jl_Object.call(a);
    a.$val$request = null;
    a.$val$listener2 = null;
    a.$val$url1 = null;
    a.$this$043 = null;
}
function cgxgbwp_AssetDownloadImpl$2__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgxgbwp_AssetDownloadImpl$2();
    cgxgbwp_AssetDownloadImpl$2__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgxgbwp_AssetDownloadImpl$2__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$043 = $this$0;
    $this.$val$request = var$2;
    $this.$val$listener2 = var$3;
    $this.$val$url1 = var$4;
    jl_Object__init_0($this);
}
function cgxgbwp_AssetDownloadImpl$2_handleEvent($this, $evt) {
    var $subtractQueue, $response, $currentWindow, $document, $scriptElement, var$7;
    if ($this.$val$request.readyState == 4) {
        $subtractQueue = 1;
        if ($this.$val$request.status != 200)
            $this.$val$listener2.$onFailure($this.$val$url1);
        else {
            if (cgxgbwp_AssetDownloadImpl_access$000($this.$this$043))
                (jl_System_out()).$println1((((jl_StringBuilder__init_()).$append($rt_s(524))).$append($this.$val$url1)).$toString());
            $response = $this.$val$request.response;
            $currentWindow = (cgxgbwp_AssetDownloadImpl_access$100($this.$this$043)).$getCurrentWindow();
            $document = $currentWindow.$getDocument();
            $scriptElement = $document.createElement("script");
            var$7 = $document.createTextNode($response);
            $scriptElement.appendChild(var$7);
            $document.body.appendChild($scriptElement);
            $subtractQueue = $this.$val$listener2.$onSuccess0($this.$val$url1, $rt_str($this.$val$request.responseText)) ? 0 : 1;
        }
        if ($subtractQueue)
            $this.$this$043.$subtractQueue();
    }
}
function cgxgbwp_AssetDownloadImpl$2_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
function cgxgbwp_AssetDownloadImpl$5() {
    var a = this; cgxgbw_AssetLoaderListener.call(a);
    a.$val$listener0 = null;
    a.$val$crossOrigin = null;
    a.$val$isUseInlineBase64 = 0;
    a.$val$mimeType = null;
    a.$this$040 = null;
}
function cgxgbwp_AssetDownloadImpl$5__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cgxgbwp_AssetDownloadImpl$5();
    cgxgbwp_AssetDownloadImpl$5__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cgxgbwp_AssetDownloadImpl$5__init_0($this, $this$0, var$2, var$3, var$4, var$5) {
    $this.$this$040 = $this$0;
    $this.$val$listener0 = var$2;
    $this.$val$crossOrigin = var$3;
    $this.$val$isUseInlineBase64 = var$4;
    $this.$val$mimeType = var$5;
    cgxgbw_AssetLoaderListener__init_0($this);
}
function cgxgbwp_AssetDownloadImpl$5_onProgress($this, $amount) {
    $this.$val$listener0.$onProgress($amount);
}
function cgxgbwp_AssetDownloadImpl$5_onFailure($this, $url) {
    $this.$val$listener0.$onFailure($url);
}
function cgxgbwp_AssetDownloadImpl$5_onSuccess($this, $url, $result) {
    var $image, var$4, var$5;
    $image = (cgxgbwp_AssetDownloadImpl_access$100($this.$this$040)).$createImageElement();
    if ($this.$val$crossOrigin !== null) {
        var$4 = $this.$val$crossOrigin;
        $image.setAttribute("crossOrigin", $rt_ustr(var$4));
    }
    $this.$this$040.$addQueue();
    cgxgbwp_AssetDownloadImpl_hookImgListener($image, cgxgbwp_AssetDownloadImpl$5$1__init_($this, $url, $image));
    if (!$this.$val$isUseInlineBase64) {
        var$5 = $rt_ustr($url);
        $image.src = var$5;
    } else {
        var$5 = $rt_ustr((((((jl_StringBuilder__init_()).$append($rt_s(525))).$append($this.$val$mimeType)).$append($rt_s(526))).$append(cgxgbwp_Blob_toBase64($result))).$toString());
        $image.src = var$5;
    }
    return 0;
}
function cgxgbwp_AssetDownloadImpl$5_onSuccess0($this, var$1, var$2) {
    return $this.$onSuccess1(var$1, var$2);
}
function cgxgbwp_AssetDownloadImpl$4() {
    var a = this; jl_Object.call(a);
    a.$val$request0 = null;
    a.$val$listener3 = null;
    a.$val$url2 = null;
    a.$this$044 = null;
}
function cgxgbwp_AssetDownloadImpl$4__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgxgbwp_AssetDownloadImpl$4();
    cgxgbwp_AssetDownloadImpl$4__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgxgbwp_AssetDownloadImpl$4__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$044 = $this$0;
    $this.$val$request0 = var$2;
    $this.$val$listener3 = var$3;
    $this.$val$url2 = var$4;
    jl_Object__init_0($this);
}
function cgxgbwp_AssetDownloadImpl$4_handleEvent($this, $evt) {
    var var$2, $data;
    if ($this.$val$request0.readyState == 4) {
        if ($this.$val$request0.status != 200)
            $this.$val$listener3.$onFailure($this.$val$url2);
        else {
            if (cgxgbwp_AssetDownloadImpl_access$000($this.$this$044))
                (jl_System_out()).$println1((((jl_StringBuilder__init_()).$append($rt_s(527))).$append($this.$val$url2)).$toString());
            var$2 = $this.$val$request0.response;
            $data = (cgxgbwdt_TypedArrays_getInstance()).$createInt8Array(var$2);
            $this.$val$listener3.$onSuccess0($this.$val$url2, cgxgbwp_Blob__init_($data));
        }
        $this.$this$044.$subtractQueue();
    }
}
function cgxgbwp_AssetDownloadImpl$4_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
var cgxgbwp_AssetDownloadImpl$7 = $rt_classWithoutFields();
var cgxgbwp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType = null;
function cgxgbwp_AssetDownloadImpl$7_$callClinit() {
    cgxgbwp_AssetDownloadImpl$7_$callClinit = $rt_eraseClinit(cgxgbwp_AssetDownloadImpl$7);
    cgxgbwp_AssetDownloadImpl$7__clinit_();
}
function cgxgbwp_AssetDownloadImpl$7__clinit_() {
    cgxgbwp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType = $rt_createIntArray((cgxgbwp_AssetType_values()).data.length);
    cgxgbwp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal(cgxgbwp_AssetType_Text)] = 1;
    cgxgbwp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal(cgxgbwp_AssetType_Image)] = 2;
    cgxgbwp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal(cgxgbwp_AssetType_Binary)] = 3;
    cgxgbwp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal(cgxgbwp_AssetType_Audio)] = 4;
    cgxgbwp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal(cgxgbwp_AssetType_Directory)] = 5;
}
function cgxgbwp_AssetDownloadImpl$6() {
    var a = this; jl_Object.call(a);
    a.$val$listener4 = null;
    a.$this$045 = null;
}
function cgxgbwp_AssetDownloadImpl$6__init_(var_0, var_1) {
    var var_2 = new cgxgbwp_AssetDownloadImpl$6();
    cgxgbwp_AssetDownloadImpl$6__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbwp_AssetDownloadImpl$6__init_0($this, $this$0, var$2) {
    $this.$this$045 = $this$0;
    $this.$val$listener4 = var$2;
    jl_Object__init_0($this);
}
function cgxgbwp_AssetDownloadImpl$6_handleEvent($this, $progressEvent) {
    $this.$val$listener4.$onProgress($progressEvent.loaded);
}
function cgxgbwp_AssetDownloadImpl$6_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
var jl_NumberFormatException = $rt_classWithoutFields(jl_IllegalArgumentException);
function jl_NumberFormatException__init_() {
    var var_0 = new jl_NumberFormatException();
    jl_NumberFormatException__init_1(var_0);
    return var_0;
}
function jl_NumberFormatException__init_0(var_0) {
    var var_1 = new jl_NumberFormatException();
    jl_NumberFormatException__init_2(var_1, var_0);
    return var_1;
}
function jl_NumberFormatException__init_1($this) {
    jl_IllegalArgumentException__init_1($this);
}
function jl_NumberFormatException__init_2($this, $message) {
    jl_IllegalArgumentException__init_2($this, $message);
}
function cgxgbwp_AssetDownloadImpl$1() {
    var a = this; jl_Object.call(a);
    a.$val$request1 = null;
    a.$val$listener5 = null;
    a.$val$url3 = null;
    a.$this$046 = null;
}
function cgxgbwp_AssetDownloadImpl$1__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgxgbwp_AssetDownloadImpl$1();
    cgxgbwp_AssetDownloadImpl$1__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgxgbwp_AssetDownloadImpl$1__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$046 = $this$0;
    $this.$val$request1 = var$2;
    $this.$val$listener5 = var$3;
    $this.$val$url3 = var$4;
    jl_Object__init_0($this);
}
function cgxgbwp_AssetDownloadImpl$1_handleEvent($this, $evt) {
    if ($this.$val$request1.readyState == 4) {
        if ($this.$val$request1.status != 200)
            $this.$val$listener5.$onFailure($this.$val$url3);
        else {
            if (cgxgbwp_AssetDownloadImpl_access$000($this.$this$046))
                (jl_System_out()).$println1((((jl_StringBuilder__init_()).$append($rt_s(527))).$append($this.$val$url3)).$toString());
            $this.$val$listener5.$onSuccess0($this.$val$url3, $rt_str($this.$val$request1.responseText));
        }
        $this.$this$046.$subtractQueue();
    }
}
function cgxgbwp_AssetDownloadImpl$1_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
function cbgu_Array$ArrayIterator() {
    var a = this; jl_Object.call(a);
    a.$array5 = null;
    a.$allowRemove = 0;
    a.$index3 = 0;
    a.$valid1 = 0;
}
function cbgu_Array$ArrayIterator__init_(var_0, var_1) {
    var var_2 = new cbgu_Array$ArrayIterator();
    cbgu_Array$ArrayIterator__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgu_Array$ArrayIterator__init_0($this, $array, $allowRemove) {
    jl_Object__init_0($this);
    $this.$valid1 = 1;
    $this.$array5 = $array;
    $this.$allowRemove = $allowRemove;
}
function cbgu_Array$ArrayIterator_hasNext($this) {
    if (!$this.$valid1)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(35)));
    return $this.$index3 >= $this.$array5.$size1 ? 0 : 1;
}
function cbgu_Array$ArrayIterator_next($this) {
    var var$1, var$2;
    if ($this.$index3 >= $this.$array5.$size1)
        $rt_throw(ju_NoSuchElementException__init_1(jl_String_valueOf($this.$index3)));
    if (!$this.$valid1)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(35)));
    var$1 = $this.$array5.$items.data;
    var$2 = $this.$index3;
    $this.$index3 = var$2 + 1 | 0;
    return var$1[var$2];
}
var jur_IntArrHash = $rt_classWithoutFields();
var cgxgbtdi_TeaTimer = $rt_classWithoutFields(cgxgbwd_TimerWrapper);
function cgxgbtdi_TeaTimer__init_() {
    var var_0 = new cgxgbtdi_TeaTimer();
    cgxgbtdi_TeaTimer__init_0(var_0);
    return var_0;
}
function cgxgbtdi_TeaTimer__init_0($this) {
    cgxgbwd_TimerWrapper__init_($this);
}
var jur_AbstractCharClass$LazyJavaMirrored = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaMirrored__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaMirrored();
    jur_AbstractCharClass$LazyJavaMirrored__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaMirrored__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaMirrored_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaMirrored$1__init_($this);
}
function cbgu_Array$ArrayIterable() {
    var a = this; jl_Object.call(a);
    a.$array6 = null;
    a.$allowRemove0 = 0;
    a.$iterator1 = null;
    a.$iterator2 = null;
}
function cbgu_Array$ArrayIterable__init_(var_0) {
    var var_1 = new cbgu_Array$ArrayIterable();
    cbgu_Array$ArrayIterable__init_0(var_1, var_0);
    return var_1;
}
function cbgu_Array$ArrayIterable__init_1(var_0, var_1) {
    var var_2 = new cbgu_Array$ArrayIterable();
    cbgu_Array$ArrayIterable__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_Array$ArrayIterable__init_0($this, $array) {
    cbgu_Array$ArrayIterable__init_2($this, $array, 1);
}
function cbgu_Array$ArrayIterable__init_2($this, $array, $allowRemove) {
    jl_Object__init_0($this);
    $this.$array6 = $array;
    $this.$allowRemove0 = $allowRemove;
}
function cbgu_Array$ArrayIterable_iterator($this) {
    if (cbgu_Collections_allocateIterators)
        return cbgu_Array$ArrayIterator__init_($this.$array6, $this.$allowRemove0);
    if ($this.$iterator1 === null) {
        $this.$iterator1 = cbgu_Array$ArrayIterator__init_($this.$array6, $this.$allowRemove0);
        $this.$iterator2 = cbgu_Array$ArrayIterator__init_($this.$array6, $this.$allowRemove0);
    }
    if ($this.$iterator1.$valid1) {
        $this.$iterator2.$index3 = 0;
        $this.$iterator2.$valid1 = 1;
        $this.$iterator1.$valid1 = 0;
        return $this.$iterator2;
    }
    $this.$iterator1.$index3 = 0;
    $this.$iterator1.$valid1 = 1;
    $this.$iterator2.$valid1 = 0;
    return $this.$iterator1;
}
var jur_AbstractCharClass$LazyJavaISOControl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaISOControl__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaISOControl();
    jur_AbstractCharClass$LazyJavaISOControl__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaISOControl__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaISOControl_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaISOControl$1__init_($this);
}
var jl_IllegalStateException = $rt_classWithoutFields(jl_Exception);
function jl_IllegalStateException__init_0() {
    var var_0 = new jl_IllegalStateException();
    jl_IllegalStateException__init_1(var_0);
    return var_0;
}
function jl_IllegalStateException__init_(var_0) {
    var var_1 = new jl_IllegalStateException();
    jl_IllegalStateException__init_2(var_1, var_0);
    return var_1;
}
function jl_IllegalStateException__init_1($this) {
    jl_Exception__init_0($this);
}
function jl_IllegalStateException__init_2($this, $message) {
    jl_Exception__init_4($this, $message);
}
var cgxgbtd_TeaTypedArrays = $rt_classWithoutFields(cgxgbwdt_TypedArrays);
function cgxgbtd_TeaTypedArrays__init_0() {
    var var_0 = new cgxgbtd_TeaTypedArrays();
    cgxgbtd_TeaTypedArrays__init_(var_0);
    return var_0;
}
function cgxgbtd_TeaTypedArrays__init_($this) {
    cgxgbwdt_TypedArrays__init_($this);
    cgxgbwdt_TypedArrays_setInstance($this);
}
function cgxgbtd_TeaTypedArrays_createFloat32Array($this, $length) {
    var $create;
    $create = new Float32Array($length);
    return $create;
}
function cgxgbtd_TeaTypedArrays_createInt32Array($this, $length) {
    var $create;
    $create = new Int32Array($length);
    return $create;
}
function cgxgbtd_TeaTypedArrays_createInt16Array($this, $length) {
    var $create;
    $create = new Int16Array($length);
    return $create;
}
function cgxgbtd_TeaTypedArrays_createInt8Array($this, $arrayBuffer) {
    var $create;
    $create = new Int8Array($arrayBuffer);
    return $create;
}
function cgxgbtd_TeaTypedArrays_createUint8Array($this, $length) {
    var $create;
    $create = new Uint8Array($length);
    return $create;
}
function jur_HighSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$high0 = 0;
}
function jur_HighSurrogateCharSet__init_(var_0) {
    var var_1 = new jur_HighSurrogateCharSet();
    jur_HighSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_HighSurrogateCharSet__init_0($this, $high) {
    jur_JointSet__init_0($this);
    $this.$high0 = $high;
}
function jur_HighSurrogateCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_HighSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, var$6, $high, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    var$6 = $rt_compare(var$5, $strLength);
    if (var$6 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (var$6 < 0) {
        $low = $testString.$charAt(var$5);
        if (jl_Character_isLowSurrogate($low))
            return (-1);
    }
    if ($this.$high0 != $high)
        return (-1);
    return $this.$next.$matches(var$5, $testString, $matchResult);
}
function jur_HighSurrogateCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf1($this.$high0, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex < $strLength && jl_Character_isLowSurrogate($testStr.$charAt($strIndex))) {
            $strIndex = var$6 + 2 | 0;
            continue;
        }
        if ($this.$next.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
}
function jur_HighSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf1($this.$high0, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            var$8 = var$7 + 1 | 0;
            if (var$8 < $strLength && jl_Character_isLowSurrogate($testStr.$charAt(var$8))) {
                $lastIndex = var$7 + (-1) | 0;
                continue;
            }
            if ($this.$next.$matches(var$8, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_HighSurrogateCharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_LowSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_HighSurrogateCharSet))
        return 1;
    return $set.$high0 != $this.$high0 ? 0 : 1;
}
function jur_HighSurrogateCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
var jur_ReluctantCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet);
function jur_ReluctantCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_ReluctantCompositeQuantifierSet();
    jur_ReluctantCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_ReluctantCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type);
}
function jur_ReluctantCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, var$7, var$8;
    $min = $this.$quantifier0.$min1();
    $max = $this.$quantifier0.$max1();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    var$7 = $this.$next.$matches($stringIndex, $testString, $matchResult);
                    if (var$7 >= 0)
                        break;
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
                        var$7 = $this.$leaf.$accepts($stringIndex, $testString);
                        $stringIndex = $stringIndex + var$7 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (var$7 < 1)
                        break a;
                    if ($i > $max)
                        break a;
                }
                return var$7;
            }
            return (-1);
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        var$8 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$8 < 1)
            break;
        $stringIndex = $stringIndex + var$8 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function cgxgbw_WebApplicationLogger() {
    jl_Object.call(this);
    this.$logLevel = 0;
}
function cgxgbw_WebApplicationLogger__init_() {
    var var_0 = new cgxgbw_WebApplicationLogger();
    cgxgbw_WebApplicationLogger__init_0(var_0);
    return var_0;
}
function cgxgbw_WebApplicationLogger__init_0($this) {
    jl_Object__init_0($this);
    $this.$logLevel = 2;
}
function cgxgbw_WebApplicationLogger_log($this, $tag, $message) {
    if ($this.$logLevel >= 2)
        (jl_System_out()).$println1(((((jl_StringBuilder__init_()).$append($tag)).$append($rt_s(9))).$append($message)).$toString());
}
var jur_SOLSet = $rt_classWithoutFields(jur_AbstractSet);
function jur_SOLSet__init_() {
    var var_0 = new jur_SOLSet();
    jur_SOLSet__init_0(var_0);
    return var_0;
}
function jur_SOLSet__init_0($this) {
    jur_AbstractSet__init_($this);
}
function jur_SOLSet_matches($this, $strIndex, $testString, $matchResult) {
    if ($strIndex && !($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound()))
        return (-1);
    return $this.$next.$matches($strIndex, $testString, $matchResult);
}
function jur_SOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
function otpp_AsyncCallbackWrapper() {
    jl_Object.call(this);
    this.$realAsyncCallback = null;
}
function otpp_AsyncCallbackWrapper__init_(var_0) {
    var var_1 = new otpp_AsyncCallbackWrapper();
    otpp_AsyncCallbackWrapper__init_0(var_1, var_0);
    return var_1;
}
function otpp_AsyncCallbackWrapper__init_0($this, $realAsyncCallback) {
    jl_Object__init_0($this);
    $this.$realAsyncCallback = $realAsyncCallback;
}
function otpp_AsyncCallbackWrapper_create($realAsyncCallback) {
    return otpp_AsyncCallbackWrapper__init_($realAsyncCallback);
}
function otpp_AsyncCallbackWrapper_complete($this, $result) {
    $this.$realAsyncCallback.$complete($result);
}
function otpp_AsyncCallbackWrapper_error($this, $e) {
    $this.$realAsyncCallback.$error($e);
}
function cbgm_Vector3() {
    var a = this; jl_Object.call(a);
    a.$x3 = 0.0;
    a.$y3 = 0.0;
    a.$z0 = 0.0;
}
var cbgm_Vector3_X = null;
var cbgm_Vector3_Y = null;
var cbgm_Vector3_Z = null;
var cbgm_Vector3_Zero = null;
var cbgm_Vector3_tmpMat = null;
function cbgm_Vector3_$callClinit() {
    cbgm_Vector3_$callClinit = $rt_eraseClinit(cbgm_Vector3);
    cbgm_Vector3__clinit_();
}
function cbgm_Vector3__init_() {
    var var_0 = new cbgm_Vector3();
    cbgm_Vector3__init_1(var_0);
    return var_0;
}
function cbgm_Vector3__init_0(var_0, var_1, var_2) {
    var var_3 = new cbgm_Vector3();
    cbgm_Vector3__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgm_Vector3__init_1($this) {
    cbgm_Vector3_$callClinit();
    jl_Object__init_0($this);
}
function cbgm_Vector3__init_2($this, $x, $y, $z) {
    cbgm_Vector3_$callClinit();
    jl_Object__init_0($this);
    $this.$set4($x, $y, $z);
}
function cbgm_Vector3_set($this, $x, $y, $z) {
    $this.$x3 = $x;
    $this.$y3 = $y;
    $this.$z0 = $z;
    return $this;
}
function cbgm_Vector3_set0($this, $vector) {
    return $this.$set4($vector.$x3, $vector.$y3, $vector.$z0);
}
function cbgm_Vector3_add($this, $vector) {
    return $this.$add9($vector.$x3, $vector.$y3, $vector.$z0);
}
function cbgm_Vector3_add0($this, $x, $y, $z) {
    return $this.$set4($this.$x3 + $x, $this.$y3 + $y, $this.$z0 + $z);
}
function cbgm_Vector3_sub($this, $a_vec) {
    return $this.$sub0($a_vec.$x3, $a_vec.$y3, $a_vec.$z0);
}
function cbgm_Vector3_sub0($this, $x, $y, $z) {
    return $this.$set4($this.$x3 - $x, $this.$y3 - $y, $this.$z0 - $z);
}
function cbgm_Vector3_scl($this, $scalar) {
    return $this.$set4($this.$x3 * $scalar, $this.$y3 * $scalar, $this.$z0 * $scalar);
}
function cbgm_Vector3_len2($this) {
    return $this.$x3 * $this.$x3 + $this.$y3 * $this.$y3 + $this.$z0 * $this.$z0;
}
function cbgm_Vector3_nor($this) {
    var $len2;
    $len2 = $this.$len2();
    if ($len2 !== 0.0 && $len2 !== 1.0)
        return $this.$scl(1.0 / jl_Math_sqrt($len2));
    return $this;
}
function cbgm_Vector3_dot($this, $vector) {
    return $this.$x3 * $vector.$x3 + $this.$y3 * $vector.$y3 + $this.$z0 * $vector.$z0;
}
function cbgm_Vector3_crs($this, $vector) {
    return $this.$set4($this.$y3 * $vector.$z0 - $this.$z0 * $vector.$y3, $this.$z0 * $vector.$x3 - $this.$x3 * $vector.$z0, $this.$x3 * $vector.$y3 - $this.$y3 * $vector.$x3);
}
function cbgm_Vector3_crs0($this, $x, $y, $z) {
    return $this.$set4($this.$y3 * $z - $this.$z0 * $y, $this.$z0 * $x - $this.$x3 * $z, $this.$x3 * $y - $this.$y3 * $x);
}
function cbgm_Vector3__clinit_() {
    cbgm_Vector3_X = cbgm_Vector3__init_0(1.0, 0.0, 0.0);
    cbgm_Vector3_Y = cbgm_Vector3__init_0(0.0, 1.0, 0.0);
    cbgm_Vector3_Z = cbgm_Vector3__init_0(0.0, 0.0, 1.0);
    cbgm_Vector3_Zero = cbgm_Vector3__init_0(0.0, 0.0, 0.0);
    cbgm_Vector3_tmpMat = cbgm_Matrix4__init_();
}
function cbgu_IntArray() {
    var a = this; jl_Object.call(a);
    a.$items0 = null;
    a.$size11 = 0;
    a.$ordered0 = 0;
}
function cbgu_IntArray__init_() {
    var var_0 = new cbgu_IntArray();
    cbgu_IntArray__init_0(var_0);
    return var_0;
}
function cbgu_IntArray__init_1(var_0, var_1) {
    var var_2 = new cbgu_IntArray();
    cbgu_IntArray__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_IntArray__init_0($this) {
    cbgu_IntArray__init_2($this, 1, 16);
}
function cbgu_IntArray__init_2($this, $ordered, $capacity) {
    jl_Object__init_0($this);
    $this.$ordered0 = $ordered;
    $this.$items0 = $rt_createIntArray($capacity);
}
function cbgu_IntArray_add($this, $value) {
    var $items, var$3, var$4;
    $items = $this.$items0;
    var$3 = $items.data;
    if ($this.$size11 == var$3.length)
        $items = $this.$resize2(jl_Math_max(8, $this.$size11 * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size11;
    $this.$size11 = var$4 + 1 | 0;
    var$3[var$4] = $value;
}
function cbgu_IntArray_get($this, $index) {
    if ($index < $this.$size11)
        return $this.$items0.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(367))).$append0($index)).$append($rt_s(368))).$append0($this.$size11)).$toString()));
}
function cbgu_IntArray_clear($this) {
    $this.$size11 = 0;
}
function cbgu_IntArray_ensureCapacity($this, $additionalCapacity) {
    var $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(373))).$append0($additionalCapacity)).$toString()));
    $sizeNeeded = $this.$size11 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items0.data.length)
        $this.$resize2(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size11 * 1.75 | 0));
    return $this.$items0;
}
function cbgu_IntArray_resize($this, $newSize) {
    var $newItems, var$3, $items;
    $newItems = $rt_createIntArray($newSize);
    var$3 = $newItems.data;
    $items = $this.$items0;
    jl_System_arraycopy($items, 0, $newItems, 0, jl_Math_min($this.$size11, var$3.length));
    $this.$items0 = $newItems;
    return $newItems;
}
function cbgu_IntArray_hashCode($this) {
    var $items, $h, $i, $n, var$5;
    if (!$this.$ordered0)
        return jl_Object_hashCode($this);
    $items = $this.$items0;
    $h = 1;
    $i = 0;
    $n = $this.$size11;
    while ($i < $n) {
        var$5 = $items.data;
        $h = ($h * 31 | 0) + var$5[$i] | 0;
        $i = $i + 1 | 0;
    }
    return $h;
}
function cbgu_IntArray_equals($this, $object) {
    var $array, $n, $items1, $items2, $i, var$7;
    if ($object === $this)
        return 1;
    if (!$this.$ordered0)
        return 0;
    if (!($object instanceof cbgu_IntArray))
        return 0;
    $array = $object;
    if (!$array.$ordered0)
        return 0;
    $n = $this.$size11;
    if ($n != $array.$size11)
        return 0;
    $items1 = $this.$items0;
    $items2 = $array.$items0;
    $i = 0;
    while ($i < $n) {
        var$7 = $items2.data;
        if ($items1.data[$i] != var$7[$i])
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function cbgu_OrderedMap() {
    cbgu_ObjectMap.call(this);
    this.$keys = null;
}
function cbgu_OrderedMap__init_() {
    var var_0 = new cbgu_OrderedMap();
    cbgu_OrderedMap__init_0(var_0);
    return var_0;
}
function cbgu_OrderedMap__init_0($this) {
    cbgu_ObjectMap__init_0($this);
    $this.$keys = cbgu_Array__init_();
}
function cbgu_OrderedMap_put($this, $key, $value) {
    var $i, $oldValue, var$5;
    $i = $this.$locateKey1($key);
    if ($i >= 0) {
        $oldValue = $this.$valueTable1.data[$i];
        $this.$valueTable1.data[$i] = $value;
        return $oldValue;
    }
    var$5 =  -($i + 1 | 0) | 0;
    $this.$keyTable2.data[var$5] = $key;
    $this.$valueTable1.data[var$5] = $value;
    $this.$keys.$add3($key);
    var$5 = $this.$size9 + 1 | 0;
    $this.$size9 = var$5;
    if (var$5 >= $this.$threshold3)
        cbgu_ObjectMap_resize($this, $this.$keyTable2.data.length << 1);
    return null;
}
var jl_IllegalAccessException = $rt_classWithoutFields(jl_ReflectiveOperationException);
function jl_IllegalAccessException__init_() {
    var var_0 = new jl_IllegalAccessException();
    jl_IllegalAccessException__init_0(var_0);
    return var_0;
}
function jl_IllegalAccessException__init_0($this) {
    jl_ReflectiveOperationException__init_0($this);
}
function cbgur_Constructor() {
    jl_Object.call(this);
    this.$constructor0 = null;
}
function cbgur_Constructor__init_(var_0) {
    var var_1 = new cbgur_Constructor();
    cbgur_Constructor__init_0(var_1, var_0);
    return var_1;
}
function cbgur_Constructor__init_0($this, $constructor) {
    jl_Object__init_0($this);
    $this.$constructor0 = $constructor;
}
function cbgur_Constructor_getDeclaringClass($this) {
    return $this.$constructor0.$getDeclaringClass();
}
function cbgur_Constructor_setAccessible($this, $accessible) {
    $this.$constructor0.$setAccessible($accessible);
}
function cbgur_Constructor_newInstance($this, $args) {
    var var$2, $e, $$je;
    if ($args === null)
        $args = $rt_createArray(jl_Object, 0);
    a: {
        b: {
            c: {
                try {
                    var$2 = $this.$constructor0.$newInstance0($args);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_IllegalArgumentException) {
                        $e = $$je;
                        break c;
                    } else if ($$je instanceof jl_InstantiationException) {
                        $e = $$je;
                        break a;
                    } else if ($$je instanceof jl_IllegalAccessException) {
                        $e = $$je;
                        break b;
                    } else if ($$je instanceof jlr_InvocationTargetException) {
                        $e = $$je;
                        $rt_throw(cbgur_ReflectionException__init_((((jl_StringBuilder__init_()).$append($rt_s(528))).$append((cbgur_Constructor_getDeclaringClass($this)).$getName())).$toString(), $e));
                    } else {
                        throw $$e;
                    }
                }
                return var$2;
            }
            $rt_throw(cbgur_ReflectionException__init_((((jl_StringBuilder__init_()).$append($rt_s(529))).$append((cbgur_Constructor_getDeclaringClass($this)).$getName())).$toString(), $e));
        }
        $rt_throw(cbgur_ReflectionException__init_((((jl_StringBuilder__init_()).$append($rt_s(530))).$append((cbgur_Constructor_getDeclaringClass($this)).$getName())).$toString(), $e));
    }
    $rt_throw(cbgur_ReflectionException__init_((((jl_StringBuilder__init_()).$append($rt_s(530))).$append((cbgur_Constructor_getDeclaringClass($this)).$getName())).$toString(), $e));
}
function jn_ShortBufferOverArray() {
    var a = this; jn_ShortBufferImpl.call(a);
    a.$readOnly10 = 0;
    a.$start15 = 0;
    a.$array7 = null;
}
function jn_ShortBufferOverArray__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_ShortBufferOverArray();
    jn_ShortBufferOverArray__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_ShortBufferOverArray__init_0($this, $start, $capacity, $array, $position, $limit, $readOnly) {
    jn_ShortBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start15 = $start;
    $this.$readOnly10 = $readOnly;
    $this.$array7 = $array;
}
function jn_ShortBufferOverArray_getElement($this, $index) {
    return $this.$array7.data[$index + $this.$start15 | 0];
}
function jn_ShortBufferOverArray_putElement($this, $index, $value) {
    $this.$array7.data[$index + $this.$start15 | 0] = $value;
}
function jn_ShortBufferOverArray_readOnly($this) {
    return $this.$readOnly10;
}
function cgxgbwp_AssetDownloadImpl() {
    var a = this; jl_Object.call(a);
    a.$jsHelper = null;
    a.$queue = 0;
    a.$useBrowserCache = 0;
    a.$showLog = 0;
}
function cgxgbwp_AssetDownloadImpl__init_(var_0) {
    var var_1 = new cgxgbwp_AssetDownloadImpl();
    cgxgbwp_AssetDownloadImpl__init_0(var_1, var_0);
    return var_1;
}
function cgxgbwp_AssetDownloadImpl__init_0($this, $jsHelper) {
    jl_Object__init_0($this);
    $this.$useBrowserCache = 1;
    $this.$showLog = 1;
    $this.$jsHelper = $jsHelper;
}
function cgxgbwp_AssetDownloadImpl_isUseBrowserCache($this) {
    return 0;
}
function cgxgbwp_AssetDownloadImpl_getHostPageBaseURL($this) {
    var $currentWindow, $location, $href;
    $currentWindow = $this.$jsHelper.$getCurrentWindow();
    $location = $currentWindow.$getLocation();
    $href = $rt_str($location.href);
    return $href;
}
function cgxgbwp_AssetDownloadImpl_getQueue($this) {
    return $this.$queue;
}
function cgxgbwp_AssetDownloadImpl_subtractQueue($this) {
    $this.$queue = $this.$queue - 1 | 0;
}
function cgxgbwp_AssetDownloadImpl_addQueue($this) {
    $this.$queue = $this.$queue + 1 | 0;
}
function cgxgbwp_AssetDownloadImpl_load($this, $url, $type, $mimeType, $listener) {
    a: {
        cgxgbwp_AssetDownloadImpl$7_$callClinit();
        switch (cgxgbwp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backend$web$preloader$AssetType.data[jl_Enum_ordinal($type)]) {
            case 1:
                break;
            case 2:
                $this.$loadImage($url, $mimeType, $listener);
                break a;
            case 3:
                $this.$loadBinary($url, $listener);
                break a;
            case 4:
                $this.$loadAudio($url, $listener);
                break a;
            case 5:
                $listener.$onSuccess0($url, null);
                break a;
            default:
                $rt_throw(cbgu_GdxRuntimeException__init_((((jl_StringBuilder__init_()).$append($rt_s(531))).$append9($type)).$toString()));
        }
        $this.$loadText($url, $listener);
    }
}
function cgxgbwp_AssetDownloadImpl_loadText($this, $url, $listener) {
    var $request, var$4;
    if ($this.$showLog)
        (jl_System_out()).$println1((((jl_StringBuilder__init_()).$append($rt_s(532))).$append($url)).$toString());
    $request = $this.$jsHelper.$creatHttpRequest();
    var$4 = otji_JS_function(cgxgbwp_AssetDownloadImpl$1__init_($this, $request, $listener, $url), "handleEvent");
    $request.onreadystatechange = var$4;
    $this.$addQueue();
    cgxgbwp_AssetDownloadImpl_setOnProgress($this, $request, $listener);
    $request.open("GET", $rt_ustr($url));
    $request.setRequestHeader("Content-Type", "text/plain; charset=utf-8");
    $request.send();
}
function cgxgbwp_AssetDownloadImpl_loadScript($this, $url, $listener) {
    var $request, var$4;
    if ($this.$showLog)
        (jl_System_out()).$println1((((jl_StringBuilder__init_()).$append($rt_s(533))).$append($url)).$toString());
    $request = $this.$jsHelper.$creatHttpRequest();
    var$4 = otji_JS_function(cgxgbwp_AssetDownloadImpl$2__init_($this, $request, $listener, $url), "handleEvent");
    $request.onreadystatechange = var$4;
    $this.$addQueue();
    cgxgbwp_AssetDownloadImpl_setOnProgress($this, $request, $listener);
    $request.open("GET", $rt_ustr($url), !!0);
    $request.setRequestHeader("Content-Type", "text/plain; charset=utf-8");
    $request.send();
}
function cgxgbwp_AssetDownloadImpl_loadAudio($this, $url, $listener) {
    $this.$loadBinary($url, cgxgbwp_AssetDownloadImpl$3__init_($this, $listener));
}
function cgxgbwp_AssetDownloadImpl_loadBinary($this, $url, $listener) {
    var $request, var$4;
    if ($this.$showLog)
        (jl_System_out()).$println1((((jl_StringBuilder__init_()).$append($rt_s(532))).$append($url)).$toString());
    $request = $this.$jsHelper.$creatHttpRequest();
    var$4 = otji_JS_function(cgxgbwp_AssetDownloadImpl$4__init_($this, $request, $listener, $url), "handleEvent");
    $request.onreadystatechange = var$4;
    $this.$addQueue();
    cgxgbwp_AssetDownloadImpl_setOnProgress($this, $request, $listener);
    $request.open("GET", $rt_ustr($url));
    var$4 = "arraybuffer";
    $request.responseType = var$4;
    $request.send();
}
function cgxgbwp_AssetDownloadImpl_loadImage($this, $url, $mimeType, $listener) {
    $this.$loadImage0($url, $mimeType, null, $listener);
}
function cgxgbwp_AssetDownloadImpl_loadImage0($this, $url, $mimeType, $crossOrigin, $listener) {
    var $isUseInlineBase64;
    $isUseInlineBase64 = 0;
    $this.$loadBinary($url, cgxgbwp_AssetDownloadImpl$5__init_($this, $listener, $crossOrigin, $isUseInlineBase64, $mimeType));
}
function cgxgbwp_AssetDownloadImpl_hookImgListener($img, $listener) {
    $img.addEventListener("load", otji_JS_function($listener, "handleEvent"), !!0);
    $img.addEventListener("error", otji_JS_function($listener, "handleEvent"), !!0);
}
function cgxgbwp_AssetDownloadImpl_setOnProgress($this, $req, $listener) {
    var var$3;
    var$3 = otji_JS_function(cgxgbwp_AssetDownloadImpl$6__init_($this, $listener), "handleEvent");
    $req.onprogress = var$3;
}
function cgxgbwp_AssetDownloadImpl_access$000($x0) {
    return $x0.$showLog;
}
function cgxgbwp_AssetDownloadImpl_access$100($x0) {
    return $x0.$jsHelper;
}
var jlr_Modifier = $rt_classWithoutFields();
var jlr_Modifier_canonicalOrder = null;
function jlr_Modifier_$callClinit() {
    jlr_Modifier_$callClinit = $rt_eraseClinit(jlr_Modifier);
    jlr_Modifier__clinit_();
}
function jlr_Modifier_isPublic($mod) {
    jlr_Modifier_$callClinit();
    return !($mod & 1) ? 0 : 1;
}
function jlr_Modifier__clinit_() {
    jlr_Modifier_canonicalOrder = $rt_createIntArrayFromData([1, 4, 2, 1024, 8, 16, 128, 64, 32, 256, 2048, 512]);
}
var cbgu_NumberUtils = $rt_classWithoutFields();
function cbgu_NumberUtils_floatToIntBits($value) {
    return $rt_floatToIntBits($value);
}
function cbgu_NumberUtils_floatToRawIntBits($value) {
    return jl_Float_floatToRawIntBits($value);
}
function cbgu_NumberUtils_floatToIntColor($value) {
    var $intBits, var$3;
    $intBits = jl_Float_floatToRawIntBits($value);
    var$3 = $intBits | (($intBits >>> 24) * 1.003937005996704 | 0) << 24;
    return var$3;
}
function cbgu_NumberUtils_intToFloatColor($value) {
    return $rt_intBitsToFloat($value & (-16777217));
}
var jur_AbstractCharClass$LazyJavaIdentifierIgnorable = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function ju_HashMap() {
    var a = this; ju_AbstractMap.call(a);
    a.$elementCount0 = 0;
    a.$elementData0 = null;
    a.$modCount2 = 0;
    a.$loadFactor5 = 0.0;
    a.$threshold5 = 0;
}
function ju_HashMap__init_() {
    var var_0 = new ju_HashMap();
    ju_HashMap__init_0(var_0);
    return var_0;
}
function ju_HashMap__init_1(var_0) {
    var var_1 = new ju_HashMap();
    ju_HashMap__init_2(var_1, var_0);
    return var_1;
}
function ju_HashMap__init_3(var_0, var_1) {
    var var_2 = new ju_HashMap();
    ju_HashMap__init_4(var_2, var_0, var_1);
    return var_2;
}
function ju_HashMap_newElementArray($this, $s) {
    return $rt_createArray(ju_HashMap$HashEntry, $s);
}
function ju_HashMap__init_0($this) {
    ju_HashMap__init_2($this, 16);
}
function ju_HashMap__init_2($this, $capacity) {
    ju_HashMap__init_4($this, $capacity, 0.75);
}
function ju_HashMap_calculateCapacity($x) {
    var var$2, var$3;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
}
function ju_HashMap__init_4($this, $capacity, $loadFactor) {
    var var$3;
    ju_AbstractMap__init_($this);
    if ($capacity >= 0 && $loadFactor > 0.0) {
        var$3 = ju_HashMap_calculateCapacity($capacity);
        $this.$elementCount0 = 0;
        $this.$elementData0 = $this.$newElementArray0(var$3);
        $this.$loadFactor5 = $loadFactor;
        ju_HashMap_computeThreshold($this);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
}
function ju_HashMap_computeThreshold($this) {
    $this.$threshold5 = $this.$elementData0.data.length * $this.$loadFactor5 | 0;
}
function ju_HashMap_get($this, $key) {
    var $m;
    $m = ju_HashMap_getEntry($this, $key);
    if ($m === null)
        return null;
    return $m.$value3;
}
function ju_HashMap_getEntry($this, $key) {
    var $m, $hash, $index;
    if ($key === null)
        $m = ju_HashMap_findNullKeyEntry($this);
    else {
        $hash = ju_HashMap_computeHashCode($key);
        $index = $hash & ($this.$elementData0.data.length - 1 | 0);
        $m = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
    }
    return $m;
}
function ju_HashMap_findNonNullKeyEntry($this, $key, $index, $keyHash) {
    var $m, var$5;
    $m = $this.$elementData0.data[$index];
    while ($m !== null) {
        if ($m.$origKeyHash == $keyHash) {
            var$5 = $m.$key0;
            if (ju_HashMap_areEqualKeys($key, var$5))
                break;
        }
        $m = $m.$next3;
    }
    return $m;
}
function ju_HashMap_findNullKeyEntry($this) {
    var $m;
    $m = $this.$elementData0.data[0];
    while ($m !== null && $m.$key0 !== null) {
        $m = $m.$next3;
    }
    return $m;
}
function ju_HashMap_put($this, $key, $value) {
    return $this.$putImpl($key, $value);
}
function ju_HashMap_putImpl($this, $key, $value) {
    var $entry, var$4, $hash, $index, $result;
    if ($key === null) {
        $entry = ju_HashMap_findNullKeyEntry($this);
        if ($entry === null) {
            $this.$modCount2 = $this.$modCount2 + 1 | 0;
            $entry = $this.$createHashedEntry(null, 0, 0);
            var$4 = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = var$4;
            if (var$4 > $this.$threshold5)
                $this.$rehash();
        }
    } else {
        $hash = ju_HashMap_computeHashCode($key);
        $index = $hash & ($this.$elementData0.data.length - 1 | 0);
        $entry = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
        if ($entry === null) {
            $this.$modCount2 = $this.$modCount2 + 1 | 0;
            $entry = $this.$createHashedEntry($key, $index, $hash);
            var$4 = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = var$4;
            if (var$4 > $this.$threshold5)
                $this.$rehash();
        }
    }
    $result = $entry.$value3;
    $entry.$value3 = $value;
    return $result;
}
function ju_HashMap_createHashedEntry($this, $key, $index, $hash) {
    var $entry;
    $entry = ju_HashMap$HashEntry__init_($key, $hash);
    $entry.$next3 = $this.$elementData0.data[$index];
    $this.$elementData0.data[$index] = $entry;
    return $entry;
}
function ju_HashMap_rehash($this, $capacity) {
    var $length, $newData, $i, $entry, var$6, $index, $next;
    $length = ju_HashMap_calculateCapacity(!$capacity ? 1 : $capacity << 1);
    $newData = $this.$newElementArray0($length);
    $i = 0;
    while ($i < $this.$elementData0.data.length) {
        $entry = $this.$elementData0.data[$i];
        $this.$elementData0.data[$i] = null;
        while ($entry !== null) {
            var$6 = $newData.data;
            $index = $entry.$origKeyHash & ($length - 1 | 0);
            $next = $entry.$next3;
            $entry.$next3 = var$6[$index];
            var$6[$index] = $entry;
            $entry = $next;
        }
        $i = $i + 1 | 0;
    }
    $this.$elementData0 = $newData;
    ju_HashMap_computeThreshold($this);
}
function ju_HashMap_rehash0($this) {
    $this.$rehash0($this.$elementData0.data.length);
}
function ju_HashMap_remove($this, $key) {
    var $entry;
    $entry = ju_HashMap_removeEntry($this, $key);
    if ($entry === null)
        return null;
    return $entry.$value3;
}
function ju_HashMap_removeEntry($this, $key) {
    var $index, $last, $entry, $entry_0, $hash;
    a: {
        $index = 0;
        $last = null;
        if ($key === null) {
            $entry = $this.$elementData0.data[0];
            while ($entry !== null) {
                if ($entry.$key0 === null)
                    break a;
                $entry_0 = $entry.$next3;
                $last = $entry;
                $entry = $entry_0;
            }
        } else {
            $hash = ju_HashMap_computeHashCode($key);
            $index = $hash & ($this.$elementData0.data.length - 1 | 0);
            $entry = $this.$elementData0.data[$index];
            while ($entry !== null && !($entry.$origKeyHash == $hash && ju_HashMap_areEqualKeys($key, $entry.$key0))) {
                $entry_0 = $entry.$next3;
                $last = $entry;
                $entry = $entry_0;
            }
        }
    }
    if ($entry === null)
        return null;
    if ($last !== null)
        $last.$next3 = $entry.$next3;
    else
        $this.$elementData0.data[$index] = $entry.$next3;
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
    $this.$elementCount0 = $this.$elementCount0 - 1 | 0;
    return $entry;
}
function ju_HashMap_computeHashCode($key) {
    return $key.$hashCode0();
}
function ju_HashMap_areEqualKeys($key1, $key2) {
    return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
}
function jur_UMultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter2 = 0;
}
function jur_UMultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_UMultiLineEOLSet();
    jur_UMultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UMultiLineEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter2 = $counter;
}
function jur_UMultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $strDif;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getRightBound() - $strIndex | 0;
    if ($strDif <= 0) {
        $matchResult.$setConsumed($this.$consCounter2, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    if ($testString.$charAt($strIndex) != 10)
        return (-1);
    $matchResult.$setConsumed($this.$consCounter2, 1);
    return $this.$next.$matches($strIndex + 1 | 0, $testString, $matchResult);
}
function jur_UMultiLineEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter2) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter2, (-1));
    return $res;
}
function cbgu_FloatArray() {
    var a = this; jl_Object.call(a);
    a.$items1 = null;
    a.$size12 = 0;
    a.$ordered1 = 0;
}
function cbgu_FloatArray__init_() {
    var var_0 = new cbgu_FloatArray();
    cbgu_FloatArray__init_0(var_0);
    return var_0;
}
function cbgu_FloatArray__init_1(var_0, var_1) {
    var var_2 = new cbgu_FloatArray();
    cbgu_FloatArray__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_FloatArray__init_0($this) {
    cbgu_FloatArray__init_2($this, 1, 16);
}
function cbgu_FloatArray__init_2($this, $ordered, $capacity) {
    jl_Object__init_0($this);
    $this.$ordered1 = $ordered;
    $this.$items1 = $rt_createFloatArray($capacity);
}
function cbgu_FloatArray_add($this, $value) {
    var $items, var$3, var$4;
    $items = $this.$items1;
    var$3 = $items.data;
    if ($this.$size12 == var$3.length)
        $items = $this.$resize3(jl_Math_max(8, $this.$size12 * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size12;
    $this.$size12 = var$4 + 1 | 0;
    var$3[var$4] = $value;
}
function cbgu_FloatArray_addAll($this, $array) {
    $this.$addAll4($array.$items1, 0, $array.$size12);
}
function cbgu_FloatArray_addAll0($this, $array, $offset, $length) {
    if (($offset + $length | 0) <= $array.$size12) {
        $this.$addAll4($array.$items1, $offset, $length);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((((((jl_StringBuilder__init_()).$append($rt_s(534))).$append0($offset)).$append($rt_s(365))).$append0($length)).$append($rt_s(366))).$append0($array.$size12)).$toString()));
}
function cbgu_FloatArray_addAll1($this, $array, $offset, $length) {
    var $items, var$5, $sizeNeeded;
    $items = $this.$items1;
    var$5 = $items.data;
    $sizeNeeded = $this.$size12 + $length | 0;
    if ($sizeNeeded > var$5.length)
        $items = $this.$resize3(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size12 * 1.75 | 0));
    jl_System_arraycopy($array, $offset, $items, $this.$size12, $length);
    $this.$size12 = $this.$size12 + $length | 0;
}
function cbgu_FloatArray_get($this, $index) {
    if ($index < $this.$size12)
        return $this.$items1.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(367))).$append0($index)).$append($rt_s(368))).$append0($this.$size12)).$toString()));
}
function cbgu_FloatArray_removeRange($this, $start, $end) {
    var $n, $count, $lastIndex, var$6, var$7, $i;
    $n = $this.$size12;
    if ($end >= $n)
        $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(369))).$append0($end)).$append($rt_s(368))).$append0($this.$size12)).$toString()));
    if ($start > $end)
        $rt_throw(jl_IndexOutOfBoundsException__init_1((((((jl_StringBuilder__init_()).$append($rt_s(370))).$append0($start)).$append($rt_s(371))).$append0($end)).$toString()));
    $count = ($end - $start | 0) + 1 | 0;
    $lastIndex = $n - $count | 0;
    if ($this.$ordered1) {
        var$6 = $this.$items1;
        var$7 = $start + $count | 0;
        jl_System_arraycopy(var$6, var$7, $this.$items1, $start, $n - var$7 | 0);
    } else {
        $i = jl_Math_max($lastIndex, $end + 1 | 0);
        jl_System_arraycopy($this.$items1, $i, $this.$items1, $start, $n - $i | 0);
    }
    $this.$size12 = $lastIndex;
}
function cbgu_FloatArray_clear($this) {
    $this.$size12 = 0;
}
function cbgu_FloatArray_ensureCapacity($this, $additionalCapacity) {
    var $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append($rt_s(373))).$append0($additionalCapacity)).$toString()));
    $sizeNeeded = $this.$size12 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items1.data.length)
        $this.$resize3(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size12 * 1.75 | 0));
    return $this.$items1;
}
function cbgu_FloatArray_resize($this, $newSize) {
    var $newItems, var$3, $items;
    $newItems = $rt_createFloatArray($newSize);
    var$3 = $newItems.data;
    $items = $this.$items1;
    jl_System_arraycopy($items, 0, $newItems, 0, jl_Math_min($this.$size12, var$3.length));
    $this.$items1 = $newItems;
    return $newItems;
}
function cbgu_FloatArray_truncate($this, $newSize) {
    if ($this.$size12 > $newSize)
        $this.$size12 = $newSize;
}
function jnc_CoderResult() {
    var a = this; jl_Object.call(a);
    a.$kind = 0;
    a.$length6 = 0;
}
var jnc_CoderResult_UNDERFLOW = null;
var jnc_CoderResult_OVERFLOW = null;
function jnc_CoderResult_$callClinit() {
    jnc_CoderResult_$callClinit = $rt_eraseClinit(jnc_CoderResult);
    jnc_CoderResult__clinit_();
}
function jnc_CoderResult__init_(var_0, var_1) {
    var var_2 = new jnc_CoderResult();
    jnc_CoderResult__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnc_CoderResult__init_0($this, $kind, $length) {
    jnc_CoderResult_$callClinit();
    jl_Object__init_0($this);
    $this.$kind = $kind;
    $this.$length6 = $length;
}
function jnc_CoderResult_isUnderflow($this) {
    return $this.$kind ? 0 : 1;
}
function jnc_CoderResult_isOverflow($this) {
    return $this.$kind != 1 ? 0 : 1;
}
function jnc_CoderResult_isError($this) {
    return !$this.$isMalformed() && !$this.$isUnmappable() ? 0 : 1;
}
function jnc_CoderResult_isMalformed($this) {
    return $this.$kind != 2 ? 0 : 1;
}
function jnc_CoderResult_isUnmappable($this) {
    return $this.$kind != 3 ? 0 : 1;
}
function jnc_CoderResult_length($this) {
    if ($this.$isError())
        return $this.$length6;
    $rt_throw(jl_UnsupportedOperationException__init_());
}
function jnc_CoderResult_malformedForLength($length) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult__init_(2, $length);
}
function jnc_CoderResult_unmappableForLength($length) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult__init_(3, $length);
}
function jnc_CoderResult_throwException($this) {
    switch ($this.$kind) {
        case 0:
            $rt_throw(jnc_BufferUnderflowException__init_());
        case 1:
            $rt_throw(jnc_BufferOverflowException__init_());
        case 2:
            $rt_throw(jnc_MalformedInputException__init_($this.$length6));
        case 3:
            $rt_throw(jnc_UnmappableCharacterException__init_($this.$length6));
        default:
    }
}
function jnc_CoderResult__clinit_() {
    jnc_CoderResult_UNDERFLOW = jnc_CoderResult__init_(0, 0);
    jnc_CoderResult_OVERFLOW = jnc_CoderResult__init_(1, 0);
}
function jur_EOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter3 = 0;
}
function jur_EOLSet__init_0(var_0) {
    var var_1 = new jur_EOLSet();
    jur_EOLSet__init_(var_1, var_0);
    return var_1;
}
function jur_EOLSet__init_($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter3 = $counter;
}
function jur_EOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, var$5, var$6, $ch;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter3, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    var$5 = $rightBound - $strIndex | 0;
    if (var$5 == 2 && $testString.$charAt($strIndex) == 13) {
        var$6 = $strIndex + 1 | 0;
        if ($testString.$charAt(var$6) == 10) {
            $matchResult.$setConsumed($this.$consCounter3, 0);
            return $this.$next.$matches($strIndex, $testString, $matchResult);
        }
    }
    a: {
        if (var$5 == 1) {
            $ch = $testString.$charAt($strIndex);
            if ($ch == 10)
                break a;
            if ($ch == 13)
                break a;
            if ($ch == 133)
                break a;
            if (($ch | 1) == 8233)
                break a;
        }
        return (-1);
    }
    $matchResult.$setConsumed($this.$consCounter3, 0);
    return $this.$next.$matches($strIndex, $testString, $matchResult);
}
function jur_EOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter3) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter3, (-1));
    return $res;
}
var cbgggf_FreeType$SizeMetrics = $rt_classWithoutFields(cbgggf_FreeType$Pointer);
function cbgggf_FreeType$SizeMetrics__init_(var_0) {
    var var_1 = new cbgggf_FreeType$SizeMetrics();
    cbgggf_FreeType$SizeMetrics__init_0(var_1, var_0);
    return var_1;
}
function cbgggf_FreeType$SizeMetrics__init_0($this, $address) {
    cbgggf_FreeType$Pointer__init_0($this, $address);
}
function cbgggf_FreeType$SizeMetrics_getAscender($this) {
    return Module._c_SizeMetrics_getAscender($this.$address);
}
function cbgggf_FreeType$SizeMetrics_getDescender($this) {
    return Module._c_SizeMetrics_getDescender($this.$address);
}
function cbgggf_FreeType$SizeMetrics_getHeight($this) {
    return Module._c_SizeMetrics_getHeight($this.$address);
}
var cgxgbw_WebApplication$2 = $rt_classWithoutFields();
var cgxgbw_WebApplication$2_$SwitchMap$com$github$xpenatan$gdx$backend$web$WebApplication$AppState = null;
function cgxgbw_WebApplication$2_$callClinit() {
    cgxgbw_WebApplication$2_$callClinit = $rt_eraseClinit(cgxgbw_WebApplication$2);
    cgxgbw_WebApplication$2__clinit_();
}
function cgxgbw_WebApplication$2__clinit_() {
    cgxgbw_WebApplication$2_$SwitchMap$com$github$xpenatan$gdx$backend$web$WebApplication$AppState = $rt_createIntArray((cgxgbw_WebApplication$AppState_values()).data.length);
    cgxgbw_WebApplication$2_$SwitchMap$com$github$xpenatan$gdx$backend$web$WebApplication$AppState.data[jl_Enum_ordinal(cgxgbw_WebApplication$AppState_IDLE)] = 1;
    cgxgbw_WebApplication$2_$SwitchMap$com$github$xpenatan$gdx$backend$web$WebApplication$AppState.data[jl_Enum_ordinal(cgxgbw_WebApplication$AppState_APP_CREATE)] = 2;
    cgxgbw_WebApplication$2_$SwitchMap$com$github$xpenatan$gdx$backend$web$WebApplication$AppState.data[jl_Enum_ordinal(cgxgbw_WebApplication$AppState_APP_READY)] = 3;
    cgxgbw_WebApplication$2_$SwitchMap$com$github$xpenatan$gdx$backend$web$WebApplication$AppState.data[jl_Enum_ordinal(cgxgbw_WebApplication$AppState_QUEUE_ASSETS_LOADED)] = 4;
}
function jur_Lexer() {
    var a = this; jl_Object.call(a);
    a.$pattern1 = null;
    a.$flags0 = 0;
    a.$mode1 = 0;
    a.$savedMode = 0;
    a.$lookBack = 0;
    a.$ch4 = 0;
    a.$lookAhead0 = 0;
    a.$patternFullLength = 0;
    a.$curST = null;
    a.$lookAheadST = null;
    a.$index4 = 0;
    a.$prevNW = 0;
    a.$curToc = 0;
    a.$lookAheadToc = 0;
    a.$orig = null;
}
var jur_Lexer_decompTable = null;
var jur_Lexer_singleDecompTable = null;
var jur_Lexer_singleDecompTableSize = 0;
function jur_Lexer__init_(var_0, var_1) {
    var var_2 = new jur_Lexer();
    jur_Lexer__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Lexer__init_0($this, $pattern, $flags) {
    jl_Object__init_0($this);
    $this.$mode1 = 1;
    $this.$orig = $pattern;
    if (($flags & 16) > 0)
        $pattern = jur_Pattern_quote($pattern);
    else if (($flags & 128) > 0)
        $pattern = jur_Lexer_normalize($pattern);
    $this.$pattern1 = $rt_createCharArray($pattern.$length() + 2 | 0);
    jl_System_arraycopy($pattern.$toCharArray(), 0, $this.$pattern1, 0, $pattern.$length());
    $this.$pattern1.data[$this.$pattern1.data.length - 1 | 0] = 0;
    $this.$pattern1.data[$this.$pattern1.data.length - 2 | 0] = 0;
    $this.$patternFullLength = $this.$pattern1.data.length;
    $this.$flags0 = $flags;
    jur_Lexer_movePointer($this);
    jur_Lexer_movePointer($this);
}
function jur_Lexer_peek($this) {
    return $this.$ch4;
}
function jur_Lexer_setMode($this, $mode) {
    if ($mode > 0 && $mode < 3)
        $this.$mode1 = $mode;
    if ($mode == 1)
        jur_Lexer_reread($this);
}
function jur_Lexer_restoreFlags($this, $flags) {
    $this.$flags0 = $flags;
    $this.$lookAhead0 = $this.$ch4;
    $this.$lookAheadST = $this.$curST;
    $this.$index4 = $this.$curToc + 1 | 0;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
}
function jur_Lexer_peekSpecial($this) {
    return $this.$curST;
}
function jur_Lexer_isSpecial($this) {
    return $this.$curST === null ? 0 : 1;
}
function jur_Lexer_isNextSpecial($this) {
    return $this.$lookAheadST === null ? 0 : 1;
}
function jur_Lexer_next($this) {
    jur_Lexer_movePointer($this);
    return $this.$lookBack;
}
function jur_Lexer_nextSpecial($this) {
    var $res;
    $res = $this.$curST;
    jur_Lexer_movePointer($this);
    return $res;
}
function jur_Lexer_lookAhead($this) {
    return $this.$lookAhead0;
}
function jur_Lexer_back($this) {
    return $this.$lookBack;
}
function jur_Lexer_normalize($input) {
    return $input;
}
function jur_Lexer_reread($this) {
    $this.$lookAhead0 = $this.$ch4;
    $this.$lookAheadST = $this.$curST;
    $this.$index4 = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
}
function jur_Lexer_movePointer($this) {
    var $reread, $nonCap, $behind, $mod, var$5, $cs, $negative, $$je;
    $this.$lookBack = $this.$ch4;
    $this.$ch4 = $this.$lookAhead0;
    $this.$curST = $this.$lookAheadST;
    $this.$curToc = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$index4;
    while (true) {
        $reread = 0;
        $this.$lookAhead0 = $this.$index4 >= $this.$pattern1.data.length ? 0 : jur_Lexer_nextCodePoint($this);
        $this.$lookAheadST = null;
        if ($this.$mode1 == 4) {
            if ($this.$lookAhead0 != 92)
                return;
            $this.$lookAhead0 = $this.$index4 >= $this.$pattern1.data.length ? 0 : $this.$pattern1.data[jur_Lexer_nextIndex($this)];
            switch ($this.$lookAhead0) {
                case 69:
                    break;
                default:
                    $this.$lookAhead0 = 92;
                    $this.$index4 = $this.$prevNW;
                    return;
            }
            $this.$mode1 = $this.$savedMode;
            $this.$lookAhead0 = $this.$index4 > ($this.$pattern1.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
        }
        a: {
            if ($this.$lookAhead0 != 92) {
                if ($this.$mode1 == 1)
                    switch ($this.$lookAhead0) {
                        case 36:
                            $this.$lookAhead0 = (-536870876);
                            break a;
                        case 40:
                            if ($this.$pattern1.data[$this.$index4] != 63) {
                                $this.$lookAhead0 = (-2147483608);
                                break a;
                            }
                            jur_Lexer_nextIndex($this);
                            $nonCap = $this.$pattern1.data[$this.$index4];
                            $behind = 0;
                            while (true) {
                                b: {
                                    if ($behind) {
                                        $behind = 0;
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 61:
                                                $this.$lookAhead0 = (-134217688);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
                                        }
                                        $this.$lookAhead0 = (-67108824);
                                        jur_Lexer_nextIndex($this);
                                    } else {
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 60:
                                                jur_Lexer_nextIndex($this);
                                                $nonCap = $this.$pattern1.data[$this.$index4];
                                                $behind = 1;
                                                break b;
                                            case 61:
                                                $this.$lookAhead0 = (-536870872);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            case 62:
                                                $this.$lookAhead0 = (-33554392);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $this.$lookAhead0 = jur_Lexer_readFlags($this);
                                                if ($this.$lookAhead0 < 256) {
                                                    $this.$flags0 = $this.$lookAhead0;
                                                    $this.$lookAhead0 = $this.$lookAhead0 << 16;
                                                    $this.$lookAhead0 = (-1073741784) | $this.$lookAhead0;
                                                    break b;
                                                }
                                                $this.$lookAhead0 = $this.$lookAhead0 & 255;
                                                $this.$flags0 = $this.$lookAhead0;
                                                $this.$lookAhead0 = $this.$lookAhead0 << 16;
                                                $this.$lookAhead0 = (-16777176) | $this.$lookAhead0;
                                                break b;
                                        }
                                        $this.$lookAhead0 = (-268435416);
                                        jur_Lexer_nextIndex($this);
                                    }
                                }
                                if (!$behind)
                                    break;
                            }
                            break a;
                        case 41:
                            $this.$lookAhead0 = (-536870871);
                            break a;
                        case 42:
                        case 43:
                        case 63:
                            $mod = $this.$index4 >= $this.$pattern1.data.length ? 42 : $this.$pattern1.data[$this.$index4];
                            switch ($mod) {
                                case 43:
                                    $this.$lookAhead0 = $this.$lookAhead0 | (-2147483648);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                case 63:
                                    $this.$lookAhead0 = $this.$lookAhead0 | (-1073741824);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                default:
                            }
                            $this.$lookAhead0 = $this.$lookAhead0 | (-536870912);
                            break a;
                        case 46:
                            $this.$lookAhead0 = (-536870866);
                            break a;
                        case 91:
                            $this.$lookAhead0 = (-536870821);
                            $this.$setMode(2);
                            break a;
                        case 93:
                            if ($this.$mode1 != 2)
                                break a;
                            $this.$lookAhead0 = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead0 = (-536870818);
                            break a;
                        case 123:
                            $this.$lookAheadST = jur_Lexer_processQuantifier($this, $this.$lookAhead0);
                            break a;
                        case 124:
                            $this.$lookAhead0 = (-536870788);
                            break a;
                        default:
                    }
                else if ($this.$mode1 == 2)
                    switch ($this.$lookAhead0) {
                        case 38:
                            $this.$lookAhead0 = (-536870874);
                            break a;
                        case 45:
                            $this.$lookAhead0 = (-536870867);
                            break a;
                        case 91:
                            $this.$lookAhead0 = (-536870821);
                            break a;
                        case 93:
                            $this.$lookAhead0 = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead0 = (-536870818);
                            break a;
                        default:
                    }
            } else {
                var$5 = $this.$index4 >= ($this.$pattern1.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                c: {
                    $this.$lookAhead0 = var$5;
                    switch ($this.$lookAhead0) {
                        case -1:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 118:
                            break;
                        case 48:
                            $this.$lookAhead0 = jur_Lexer_readOctals($this);
                            break a;
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            if ($this.$mode1 != 1)
                                break a;
                            $this.$lookAhead0 = (-2147483648) | $this.$lookAhead0;
                            break a;
                        case 65:
                            $this.$lookAhead0 = (-2147483583);
                            break a;
                        case 66:
                            $this.$lookAhead0 = (-2147483582);
                            break a;
                        case 67:
                        case 69:
                        case 70:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 88:
                        case 89:
                        case 103:
                        case 104:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 109:
                        case 111:
                        case 113:
                        case 121:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
                        case 68:
                        case 83:
                        case 87:
                        case 100:
                        case 115:
                        case 119:
                            $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass(jl_String__init_0($this.$pattern1, $this.$prevNW, 1), 0);
                            $this.$lookAhead0 = 0;
                            break a;
                        case 71:
                            $this.$lookAhead0 = (-2147483577);
                            break a;
                        case 80:
                        case 112:
                            break c;
                        case 81:
                            $this.$savedMode = $this.$mode1;
                            $this.$mode1 = 4;
                            $reread = 1;
                            break a;
                        case 90:
                            $this.$lookAhead0 = (-2147483558);
                            break a;
                        case 97:
                            $this.$lookAhead0 = 7;
                            break a;
                        case 98:
                            $this.$lookAhead0 = (-2147483550);
                            break a;
                        case 99:
                            if ($this.$index4 >= ($this.$pattern1.data.length - 2 | 0))
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
                            $this.$lookAhead0 = $this.$pattern1.data[jur_Lexer_nextIndex($this)] & 31;
                            break a;
                        case 101:
                            $this.$lookAhead0 = 27;
                            break a;
                        case 102:
                            $this.$lookAhead0 = 12;
                            break a;
                        case 110:
                            $this.$lookAhead0 = 10;
                            break a;
                        case 114:
                            $this.$lookAhead0 = 13;
                            break a;
                        case 116:
                            $this.$lookAhead0 = 9;
                            break a;
                        case 117:
                            $this.$lookAhead0 = jur_Lexer_readHex($this, 4);
                            break a;
                        case 120:
                            $this.$lookAhead0 = jur_Lexer_readHex($this, 2);
                            break a;
                        case 122:
                            $this.$lookAhead0 = (-2147483526);
                            break a;
                        default:
                    }
                    break a;
                }
                $cs = jur_Lexer_parseCharClassName($this);
                $negative = 0;
                if ($this.$lookAhead0 == 80)
                    $negative = 1;
                try {
                    $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ju_MissingResourceException) {
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
                    } else {
                        throw $$e;
                    }
                }
                $this.$lookAhead0 = 0;
            }
        }
        if ($reread)
            continue;
        else
            break;
    }
}
function jur_Lexer_parseCharClassName($this) {
    var $sb, $ch, $res;
    $sb = jl_StringBuilder__init_0(10);
    if ($this.$index4 < ($this.$pattern1.data.length - 2 | 0)) {
        if ($this.$pattern1.data[$this.$index4] != 123)
            return (((jl_StringBuilder__init_()).$append($rt_s(535))).$append(jl_String__init_0($this.$pattern1, jur_Lexer_nextIndex($this), 1))).$toString();
        jur_Lexer_nextIndex($this);
        $ch = 0;
        a: {
            while ($this.$index4 < ($this.$pattern1.data.length - 2 | 0)) {
                $ch = $this.$pattern1.data[jur_Lexer_nextIndex($this)];
                if ($ch == 125)
                    break a;
                $sb.$append8($ch);
            }
        }
        if ($ch != 125)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
    }
    if (!$sb.$length())
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
    $res = $sb.$toString();
    if ($res.$length() == 1)
        return (((jl_StringBuilder__init_()).$append($rt_s(535))).$append($res)).$toString();
    b: {
        c: {
            if ($res.$length() > 3) {
                if ($res.$startsWith1($rt_s(535)))
                    break c;
                if ($res.$startsWith1($rt_s(536)))
                    break c;
            }
            break b;
        }
        $res = $res.$substring0(2);
    }
    return $res;
}
function jur_Lexer_processQuantifier($this, $ch) {
    var $sb, $min, $max, $mod, $$je;
    $sb = jl_StringBuilder__init_0(4);
    $min = (-1);
    $max = 2147483647;
    a: {
        while (true) {
            if ($this.$index4 >= $this.$pattern1.data.length)
                break a;
            $ch = $this.$pattern1.data[jur_Lexer_nextIndex($this)];
            if ($ch == 125)
                break a;
            if ($ch == 44 && $min < 0)
                try {
                    $min = jl_Integer_parseInt($sb.$toString(), 10);
                    $sb.$delete0(0, $sb.$length());
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break;
                    } else {
                        throw $$e;
                    }
                }
            $sb.$append8($ch & 65535);
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
    }
    if ($ch != 125)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
    if ($sb.$length() > 0)
        b: {
            try {
                $max = jl_Integer_parseInt($sb.$toString(), 10);
                if ($min >= 0)
                    break b;
                $min = $max;
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
        }
    else if ($min < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
    if (($min | $max | ($max - $min | 0)) < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
    $mod = $this.$index4 >= $this.$pattern1.data.length ? 42 : $this.$pattern1.data[$this.$index4];
    c: {
        switch ($mod) {
            case 43:
                $this.$lookAhead0 = (-2147483525);
                jur_Lexer_nextIndex($this);
                break c;
            case 63:
                $this.$lookAhead0 = (-1073741701);
                jur_Lexer_nextIndex($this);
                break c;
            default:
        }
        $this.$lookAhead0 = (-536870789);
    }
    return jur_Quantifier__init_($min, $max);
}
function jur_Lexer_toString($this) {
    return $this.$orig;
}
function jur_Lexer_isEmpty($this) {
    return !$this.$ch4 && !$this.$lookAhead0 && $this.$index4 == $this.$patternFullLength && !$this.$isSpecial() ? 1 : 0;
}
function jur_Lexer_isLetter($ch) {
    return $ch < 0 ? 0 : 1;
}
function jur_Lexer_isLetter0($this) {
    return !$this.$isEmpty() && !$this.$isSpecial() && jur_Lexer_isLetter($this.$ch4) ? 1 : 0;
}
function jur_Lexer_isHighSurrogate0($this) {
    return $this.$ch4 <= 56319 && $this.$ch4 >= 55296 ? 1 : 0;
}
function jur_Lexer_isLowSurrogate0($this) {
    return $this.$ch4 <= 57343 && $this.$ch4 >= 56320 ? 1 : 0;
}
function jur_Lexer_isHighSurrogate($ch) {
    return $ch <= 56319 && $ch >= 55296 ? 1 : 0;
}
function jur_Lexer_isLowSurrogate($ch) {
    return $ch <= 57343 && $ch >= 56320 ? 1 : 0;
}
function jur_Lexer_readHex($this, $max) {
    var $st, $length, $i, var$5, $$je;
    $st = jl_StringBuilder__init_0($max);
    $length = $this.$pattern1.data.length - 2 | 0;
    $i = 0;
    while (true) {
        var$5 = $rt_compare($i, $max);
        if (var$5 >= 0)
            break;
        if ($this.$index4 >= $length)
            break;
        $st.$append8($this.$pattern1.data[jur_Lexer_nextIndex($this)]);
        $i = $i + 1 | 0;
    }
    if (!var$5)
        a: {
            try {
                var$5 = jl_Integer_parseInt($st.$toString(), 16);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$5;
        }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
}
function jur_Lexer_readOctals($this) {
    var $max, $i, $length, $res, var$5;
    $max = 3;
    $i = 1;
    $length = $this.$pattern1.data.length - 2 | 0;
    $res = jl_Character_digit($this.$pattern1.data[$this.$index4], 8);
    switch ($res) {
        case -1:
            break;
        default:
            if ($res > 3)
                $max = 2;
            jur_Lexer_nextIndex($this);
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if ($this.$index4 >= $length)
                        break a;
                    var$5 = jl_Character_digit($this.$pattern1.data[$this.$index4], 8);
                    if (var$5 < 0)
                        break;
                    $res = ($res * 8 | 0) + var$5 | 0;
                    jur_Lexer_nextIndex($this);
                    $i = $i + 1 | 0;
                }
            }
            return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
}
function jur_Lexer_readFlags($this) {
    var $pos, $res, $ch;
    $pos = 1;
    $res = $this.$flags0;
    a: while (true) {
        if ($this.$index4 >= $this.$pattern1.data.length)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
        b: {
            c: {
                $ch = $this.$pattern1.data[$this.$index4];
                switch ($ch) {
                    case 41:
                        jur_Lexer_nextIndex($this);
                        return $res | 256;
                    case 45:
                        if (!$pos)
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(88), $this.$toString(), $this.$index4));
                        $pos = 0;
                        break b;
                    case 58:
                        break a;
                    case 100:
                        break c;
                    case 105:
                        $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                        break b;
                    case 109:
                        $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                        break b;
                    case 115:
                        $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                        break b;
                    case 117:
                        $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                        break b;
                    case 120:
                        $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                        break b;
                    default:
                }
                break b;
            }
            $res = $pos ? $res | 1 : ($res ^ 1) & $res;
        }
        jur_Lexer_nextIndex($this);
    }
    jur_Lexer_nextIndex($this);
    return $res;
}
function jur_Lexer_nextIndex($this) {
    $this.$prevNW = $this.$index4;
    if ($this.$flags0 & 4)
        jur_Lexer_skipComments($this);
    else
        $this.$index4 = $this.$index4 + 1 | 0;
    return $this.$prevNW;
}
function jur_Lexer_skipComments($this) {
    var $length;
    $length = $this.$pattern1.data.length - 2 | 0;
    $this.$index4 = $this.$index4 + 1 | 0;
    a: while (true) {
        if ($this.$index4 < $length && jl_Character_isWhitespace($this.$pattern1.data[$this.$index4])) {
            $this.$index4 = $this.$index4 + 1 | 0;
            continue;
        }
        if ($this.$index4 >= $length)
            break;
        if ($this.$pattern1.data[$this.$index4] != 35)
            break;
        $this.$index4 = $this.$index4 + 1 | 0;
        while (true) {
            if ($this.$index4 >= $length)
                continue a;
            if (jur_Lexer_isLineSeparator($this, $this.$pattern1.data[$this.$index4]))
                continue a;
            $this.$index4 = $this.$index4 + 1 | 0;
        }
    }
    return $this.$index4;
}
function jur_Lexer_isLineSeparator($this, $ch) {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
}
function jur_Lexer_getDecomposition($ch) {
    return jur_Lexer_decompTable.$get17($ch);
}
function jur_Lexer_getHangulDecomposition($ch) {
    var $sIndex, $l, $v, $t, $decomp, var$7;
    $sIndex = $ch - 44032 | 0;
    if ($sIndex >= 0 && $sIndex < 11172) {
        $l = 4352 + ($sIndex / 588 | 0) | 0;
        $v = 4449 + (($sIndex % 588 | 0) / 28 | 0) | 0;
        $t = $sIndex % 28 | 0;
        if (!$t)
            $decomp = $rt_createIntArrayFromData([$l, $v]);
        else {
            var$7 = 4519 + $t | 0;
            $decomp = $rt_createIntArrayFromData([$l, $v, var$7]);
        }
        return $decomp;
    }
    return null;
}
function jur_Lexer_hasSingleCodepointDecomposition($ch) {
    var $hasSingleDecomp;
    $hasSingleDecomp = jur_Lexer_singleDecompTable.$get4($ch);
    return $hasSingleDecomp == jur_Lexer_singleDecompTableSize ? 0 : 1;
}
function jur_Lexer_hasDecompositionNonNullCanClass($ch) {
    return ($ch != 832 ? 0 : 1) | ($ch != 833 ? 0 : 1) | ($ch != 835 ? 0 : 1) | ($ch != 836 ? 0 : 1);
}
function jur_Lexer_nextCodePoint($this) {
    var $high, $lowExpectedIndex, $low;
    $high = $this.$pattern1.data[jur_Lexer_nextIndex($this)];
    if (jl_Character_isHighSurrogate($high)) {
        $lowExpectedIndex = $this.$prevNW + 1 | 0;
        if ($lowExpectedIndex < $this.$pattern1.data.length) {
            $low = $this.$pattern1.data[$lowExpectedIndex];
            if (jl_Character_isLowSurrogate($low)) {
                jur_Lexer_nextIndex($this);
                return jl_Character_toCodePoint($high, $low);
            }
        }
    }
    return $high;
}
function jur_Lexer_getIndex($this) {
    return $this.$curToc;
}
var jur_AbstractCharClass$LazySpecialsBlock = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazySpecialsBlock__init_() {
    var var_0 = new jur_AbstractCharClass$LazySpecialsBlock();
    jur_AbstractCharClass$LazySpecialsBlock__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpecialsBlock__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazySpecialsBlock_computeValue($this) {
    return ((jur_CharClass__init_()).$add0(65279, 65279)).$add0(65520, 65533);
}
var jur_AbstractCharClass$LazyNonSpace = $rt_classWithoutFields(jur_AbstractCharClass$LazySpace);
function jur_AbstractCharClass$LazyNonSpace__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonSpace();
    jur_AbstractCharClass$LazyNonSpace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonSpace__init_0($this) {
    jur_AbstractCharClass$LazySpace__init_0($this);
}
function jur_AbstractCharClass$LazyNonSpace_computeValue($this) {
    var $chCl;
    $chCl = (jur_AbstractCharClass$LazySpace_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var otjt_Int32Array = $rt_classWithoutFields(otjt_ArrayBufferView);
function cgxgbw_WebApplication$1() {
    cgxgbw_AssetLoaderListener.call(this);
    this.$this$047 = null;
}
function cgxgbw_WebApplication$1__init_(var_0) {
    var var_1 = new cgxgbw_WebApplication$1();
    cgxgbw_WebApplication$1__init_0(var_1, var_0);
    return var_1;
}
function cgxgbw_WebApplication$1__init_0($this, $this$0) {
    $this.$this$047 = $this$0;
    cgxgbw_AssetLoaderListener__init_0($this);
}
function cgxgbw_WebApplication$1_onSuccess($this, $url, $result) {
    var $jsHelper, $soundManager;
    $jsHelper = cgxgbw_WebApplicationConfiguration_JSHelper;
    $soundManager = $jsHelper.$createSoundManager();
    $soundManager.$setup(cgxgbw_WebApplication_access$000($this.$this$047), cgxgbw_WebApplication$1$1__init_($this, $soundManager));
    $jsHelper.$createSoundManager();
    return 1;
}
function cgxgbw_WebApplication$1$1() {
    var a = this; jl_Object.call(a);
    a.$val$soundManager = null;
    a.$this$11 = null;
}
function cgxgbw_WebApplication$1$1__init_(var_0, var_1) {
    var var_2 = new cgxgbw_WebApplication$1$1();
    cgxgbw_WebApplication$1$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbw_WebApplication$1$1__init_0($this, $this$1, var$2) {
    $this.$this$11 = $this$1;
    $this.$val$soundManager = var$2;
    jl_Object__init_0($this);
}
function cgxgbw_WebApplication$1$1_onready($this) {
    cgxgbw_WebApplication_access$102($this.$this$11.$this$047, cgxgbw_WebAudio__init_($this.$val$soundManager));
    cbg_Gdx_audio = cgxgbw_WebApplication_access$100($this.$this$11.$this$047);
    (cgxgbwp_AssetDownloader_getInstance()).$subtractQueue();
}
function cgxgbw_WebApplication$1$1_ontimeout($this) {
    (cgxgbwp_AssetDownloader_getInstance()).$subtractQueue();
}
function cgxgbw_WebApplication$1$1_onready$exported$0(var$0) {
    var$0.$onready();
}
function cgxgbw_WebApplication$1$1_ontimeout$exported$1(var$0) {
    var$0.$ontimeout();
}
var jn_ShortBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_ShortBufferOverByteBuffer);
function jn_ShortBufferOverByteBufferBigEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_ShortBufferOverByteBufferBigEndian();
    jn_ShortBufferOverByteBufferBigEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_ShortBufferOverByteBufferBigEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_ShortBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_ShortBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer2.$array0.data;
    var$3 = $this.$start5;
    var$4 = $index * 2 | 0;
    $value = (var$2[var$3 + var$4 | 0] & 255) << 8 | $this.$byteByffer2.$array0.data[($this.$start5 + var$4 | 0) + 1 | 0] & 255;
    return $value << 16 >> 16;
}
function jn_ShortBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer2.$array0.data;
    var$4 = $this.$start5;
    var$5 = $index * 2 | 0;
    var$3[var$4 + var$5 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer2.$array0.data[($this.$start5 + var$5 | 0) + 1 | 0] = $value << 24 >> 24;
}
function cgxgbw_WebGraphics() {
    var a = this; jl_Object.call(a);
    a.$context0 = null;
    a.$canvas2 = null;
    a.$config0 = null;
    a.$gl20 = null;
    a.$fps = 0.0;
    a.$lastTimeStamp = Long_ZERO;
    a.$frameId = Long_ZERO;
    a.$deltaTime = 0.0;
    a.$time = 0.0;
    a.$frames = 0;
}
function cgxgbw_WebGraphics__init_(var_0) {
    var var_1 = new cgxgbw_WebGraphics();
    cgxgbw_WebGraphics__init_0(var_1, var_0);
    return var_1;
}
function cgxgbw_WebGraphics__init_0($this, $config) {
    jl_Object__init_0($this);
    $this.$fps = 0.0;
    $this.$lastTimeStamp = jl_System_currentTimeMillis();
    $this.$frameId = Long_fromInt(-1);
    $this.$deltaTime = 0.0;
    $this.$time = 0.0;
    $this.$config0 = $config;
    $this.$canvas2 = cgxgbw_WebApplicationConfiguration_JSHelper.$getCanvas();
    $this.$context0 = cgxgbw_WebApplicationConfiguration_JSHelper.$getGLContext($config);
    $this.$gl20 = cgxgbw_WebGL20__init_($this.$context0);
    $this.$gl20.$glViewport(0, 0, $this.$canvas2.width, $this.$canvas2.height);
    $this.$gl20.$glClearColor(0.0, 0.0, 0.0, 1.0);
    $this.$gl20.$glClear(16384);
}
function cgxgbw_WebGraphics_update($this) {
    var $currTimeStamp;
    $currTimeStamp = jl_System_currentTimeMillis();
    $this.$deltaTime = Long_toNumber(Long_sub($currTimeStamp, $this.$lastTimeStamp)) / 1000.0;
    $this.$lastTimeStamp = $currTimeStamp;
    $this.$time = $this.$time + $this.$deltaTime;
    $this.$frames = $this.$frames + 1 | 0;
    if ($this.$time > 1.0) {
        $this.$fps = $this.$frames;
        $this.$time = 0.0;
        $this.$frames = 0;
    }
}
function cgxgbw_WebGraphics_getGL20($this) {
    return $this.$gl20;
}
function cgxgbw_WebGraphics_getWidth($this) {
    return $this.$canvas2.width;
}
function cgxgbw_WebGraphics_getHeight($this) {
    return $this.$canvas2.height;
}
function cgxgbw_WebGraphics_supportsExtension($this, $extension) {
    return 0;
}
$rt_packages([-1, "com", 0, "github", 1, "xpenatan", 2, "gdx", 3, "backend", 4, "web", 5, "preloader", 0, "badlogic", 7, "gdx", 8, "utils", 9, "reflect", 8, "graphics", 11, "g2d", -1, "java", 13, "util", 14, "regex", 13, "nio", 16, "charset", 13, "lang"
]);
$rt_metadata([jl_Object, "Object", 18, 0, [], 0, 3, 0, 0, ["$isEmptyMonitor", $rt_wrapFunction0(jl_Object_isEmptyMonitor), "$getClass0", $rt_wrapFunction0(jl_Object_getClass), "$hashCode0", $rt_wrapFunction0(jl_Object_hashCode), "$equals", $rt_wrapFunction1(jl_Object_equals), "$toString", $rt_wrapFunction0(jl_Object_toString), "$identity", $rt_wrapFunction0(jl_Object_identity), "$clone", $rt_wrapFunction0(jl_Object_clone)],
jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyCharClass__init_), "$getValue", $rt_wrapFunction1(jur_AbstractCharClass$LazyCharClass_getValue)],
jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank_computeValue)],
jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl_computeValue)],
cbgggf_FreeType$Pointer, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgggf_FreeType$Pointer__init_0)],
cbgggf_FreeType$GlyphSlot, 0, cbgggf_FreeType$Pointer, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgggf_FreeType$GlyphSlot__init_0), "$getMetrics0", $rt_wrapFunction0(cbgggf_FreeType$GlyphSlot_getMetrics), "$getFormat0", $rt_wrapFunction0(cbgggf_FreeType$GlyphSlot_getFormat), "$getGlyph1", $rt_wrapFunction0(cbgggf_FreeType$GlyphSlot_getGlyph)],
ju_Enumeration, 0, jl_Object, [], 3, 3, 0, 0, 0,
jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_10", $rt_wrapFunction2(jnci_BufferedEncoder$Controller__init_0), "$hasMoreInput0", $rt_wrapFunction0(jnci_BufferedEncoder$Controller_hasMoreInput), "$hasMoreInput", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_hasMoreInput0), "$hasMoreOutput", $rt_wrapFunction0(jnci_BufferedEncoder$Controller_hasMoreOutput), "$hasMoreOutput0", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_hasMoreOutput0), "$setInPosition", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_setInPosition),
"$setOutPosition", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_setOutPosition)],
cbgur_ClassReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0, 0,
ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_OutputStream__init_), "$write0", $rt_wrapFunction3(ji_OutputStream_write)],
ji_ByteArrayOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(ji_ByteArrayOutputStream__init_0), "$write0", $rt_wrapFunction3(ji_ByteArrayOutputStream_write), "$toByteArray", $rt_wrapFunction0(ji_ByteArrayOutputStream_toByteArray)],
cbgu_StreamUtils$OptimizedByteArrayOutputStream, 0, ji_ByteArrayOutputStream, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgu_StreamUtils$OptimizedByteArrayOutputStream__init_0), "$toByteArray", $rt_wrapFunction0(cbgu_StreamUtils$OptimizedByteArrayOutputStream_toByteArray)],
ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Number__init_)],
jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Integer, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Integer_$callClinit, ["$_init_3", $rt_wrapFunction1(jl_Integer__init_0), "$intValue", $rt_wrapFunction0(jl_Integer_intValue), "$toString", $rt_wrapFunction0(jl_Integer_toString1), "$hashCode0", $rt_wrapFunction0(jl_Integer_hashCode0), "$equals", $rt_wrapFunction1(jl_Integer_equals)],
jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, 0, jl_AbstractStringBuilder$Constants_$callClinit, 0,
cbgu_Disposable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggf_FreeType$Stroker, 0, cbgggf_FreeType$Pointer, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgggf_FreeType$Stroker__init_0), "$set8", $rt_wrapFunction4(cbgggf_FreeType$Stroker_set), "$dispose", $rt_wrapFunction0(cbgggf_FreeType$Stroker_dispose)],
jur_AbstractSet, 0, jl_Object, [], 1, 0, 0, jur_AbstractSet_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractSet__init_), "$_init_14", $rt_wrapFunction1(jur_AbstractSet__init_0), "$find", $rt_wrapFunction3(jur_AbstractSet_find), "$findBack", $rt_wrapFunction4(jur_AbstractSet_findBack), "$setType", $rt_wrapFunction1(jur_AbstractSet_setType), "$getType0", $rt_wrapFunction0(jur_AbstractSet_getType), "$getNext", $rt_wrapFunction0(jur_AbstractSet_getNext), "$setNext", $rt_wrapFunction1(jur_AbstractSet_setNext),
"$first", $rt_wrapFunction1(jur_AbstractSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_AbstractSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_AbstractSet_processSecondPass)],
jur_JointSet, 0, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_JointSet__init_0), "$_init_33", $rt_wrapFunction2(jur_JointSet__init_2), "$matches", $rt_wrapFunction3(jur_JointSet_matches), "$setNext", $rt_wrapFunction1(jur_JointSet_setNext), "$first", $rt_wrapFunction1(jur_JointSet_first), "$hasConsumed", $rt_wrapFunction1(jur_JointSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_JointSet_processSecondPass)],
jur_SingleSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_12", $rt_wrapFunction2(jur_SingleSet__init_0), "$matches", $rt_wrapFunction3(jur_SingleSet_matches), "$find", $rt_wrapFunction3(jur_SingleSet_find), "$findBack", $rt_wrapFunction4(jur_SingleSet_findBack), "$first", $rt_wrapFunction1(jur_SingleSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_SingleSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_SingleSet_processSecondPass)],
jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_7", $rt_wrapFunction4(jnc_CharsetEncoder__init_), "$_init_9", $rt_wrapFunction3(jnc_CharsetEncoder__init_0), "$onMalformedInput", $rt_wrapFunction1(jnc_CharsetEncoder_onMalformedInput), "$implOnMalformedInput", $rt_wrapFunction1(jnc_CharsetEncoder_implOnMalformedInput), "$onUnmappableCharacter", $rt_wrapFunction1(jnc_CharsetEncoder_onUnmappableCharacter), "$implOnUnmappableCharacter", $rt_wrapFunction1(jnc_CharsetEncoder_implOnUnmappableCharacter), "$encode",
$rt_wrapFunction3(jnc_CharsetEncoder_encode), "$encode0", $rt_wrapFunction1(jnc_CharsetEncoder_encode0), "$flush", $rt_wrapFunction1(jnc_CharsetEncoder_flush), "$implFlush", $rt_wrapFunction1(jnc_CharsetEncoder_implFlush), "$reset", $rt_wrapFunction0(jnc_CharsetEncoder_reset), "$implReset", $rt_wrapFunction0(jnc_CharsetEncoder_implReset)],
jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, 0, ["$_init_9", $rt_wrapFunction3(jnci_BufferedEncoder__init_), "$encodeLoop", $rt_wrapFunction2(jnci_BufferedEncoder_encodeLoop)],
jnci_UTF16Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_45", $rt_wrapFunction3(jnci_UTF16Encoder__init_0), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF16Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
jl_Runnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Thread, 0, jl_Object, [jl_Runnable], 0, 3, 0, jl_Thread_$callClinit, ["$_init_", $rt_wrapFunction1(jl_Thread__init_0), "$_init_11", $rt_wrapFunction2(jl_Thread__init_2)],
jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha_computeValue)],
jur_BackReferencedSingleSet, 0, jur_SingleSet, [], 0, 0, 0, 0, ["$_init_6", $rt_wrapFunction1(jur_BackReferencedSingleSet__init_0), "$find", $rt_wrapFunction3(jur_BackReferencedSingleSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferencedSingleSet_findBack), "$processBackRefReplacement", $rt_wrapFunction0(jur_BackReferencedSingleSet_processBackRefReplacement)],
jl_Throwable, 0, jl_Object, [], 0, 3, 0, 0, ["$fillInStackTrace", $rt_wrapFunction0(jl_Throwable_fillInStackTrace), "$getMessage", $rt_wrapFunction0(jl_Throwable_getMessage), "$getLocalizedMessage", $rt_wrapFunction0(jl_Throwable_getLocalizedMessage), "$printStackTrace0", $rt_wrapFunction0(jl_Throwable_printStackTrace), "$printStackTrace", $rt_wrapFunction1(jl_Throwable_printStackTrace0)],
jl_Exception, 0, jl_Throwable, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Exception__init_0), "$_init_5", $rt_wrapFunction2(jl_Exception__init_2), "$_init_", $rt_wrapFunction1(jl_Exception__init_4), "$_init_8", $rt_wrapFunction1(jl_Exception__init_6)],
jl_RuntimeException, "RuntimeException", 18, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_RuntimeException__init_1), "$_init_5", $rt_wrapFunction2(jl_RuntimeException__init_3), "$_init_", $rt_wrapFunction1(jl_RuntimeException__init_4), "$_init_8", $rt_wrapFunction1(jl_RuntimeException__init_6)],
jnc_BufferOverflowException, "BufferOverflowException", 17, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_BufferOverflowException__init_0)],
otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0, 0,
otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord_computeValue)],
jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord_computeValue)],
jl_Enum, 0, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, 0, ["$_init_13", $rt_wrapFunction2(jl_Enum__init_), "$name5", $rt_wrapFunction0(jl_Enum_name), "$ordinal0", $rt_wrapFunction0(jl_Enum_ordinal), "$toString", $rt_wrapFunction0(jl_Enum_toString)],
cbg_Application$ApplicationType, 0, jl_Enum, [], 12, 3, 0, cbg_Application$ApplicationType_$callClinit, 0,
cgxgbwp_AssetDownloader, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$_init_14", $rt_wrapFunction1(jur_LeafSet__init_), "$_init_0", $rt_wrapFunction0(jur_LeafSet__init_0), "$matches", $rt_wrapFunction3(jur_LeafSet_matches), "$charCount0", $rt_wrapFunction0(jur_LeafSet_charCount), "$hasConsumed", $rt_wrapFunction1(jur_LeafSet_hasConsumed)],
jur_CISequenceSet, 0, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_88", $rt_wrapFunction1(jur_CISequenceSet__init_0), "$accepts", $rt_wrapFunction2(jur_CISequenceSet_accepts)],
jl_CharSequence, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0, ["$_init_5", $rt_wrapFunction2(jl_Error__init_0), "$_init_", $rt_wrapFunction1(jl_Error__init_2), "$_init_8", $rt_wrapFunction1(jl_Error__init_4)],
jl_LinkageError, 0, jl_Error, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_LinkageError__init_0)],
cbgu_IntSet, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_IntSet__init_0), "$_init_15", $rt_wrapFunction2(cbgu_IntSet__init_2), "$place", $rt_wrapFunction1(cbgu_IntSet_place), "$add2", $rt_wrapFunction1(cbgu_IntSet_add), "$remove0", $rt_wrapFunction1(cbgu_IntSet_remove)],
jl_IndexOutOfBoundsException, "IndexOutOfBoundsException", 18, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IndexOutOfBoundsException__init_0), "$_init_", $rt_wrapFunction1(jl_IndexOutOfBoundsException__init_2)]]);
$rt_metadata([jl_StringIndexOutOfBoundsException, "StringIndexOutOfBoundsException", 18, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_StringIndexOutOfBoundsException__init_0)],
ju_MissingResourceException, "MissingResourceException", 14, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_27", $rt_wrapFunction3(ju_MissingResourceException__init_0)],
cbgu_Pools, 0, jl_Object, [], 0, 3, 0, cbgu_Pools_$callClinit, 0,
jur_CIBackReferenceSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction2(jur_CIBackReferenceSet__init_0), "$matches", $rt_wrapFunction3(jur_CIBackReferenceSet_matches), "$setNext", $rt_wrapFunction1(jur_CIBackReferenceSet_setNext), "$getString", $rt_wrapFunction1(jur_CIBackReferenceSet_getString), "$hasConsumed", $rt_wrapFunction1(jur_CIBackReferenceSet_hasConsumed)],
jur_UCIBackReferenceSet, 0, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction2(jur_UCIBackReferenceSet__init_0), "$matches", $rt_wrapFunction3(jur_UCIBackReferenceSet_matches)],
cbgu_StreamUtils, 0, jl_Object, [], 4, 3, 0, cbgu_StreamUtils_$callClinit, 0,
jn_ByteOrder, 0, jl_Object, [], 4, 3, 0, jn_ByteOrder_$callClinit, 0,
cbgg_TextureData$TextureDataType, 0, jl_Enum, [], 12, 3, 0, cbgg_TextureData$TextureDataType_$callClinit, 0,
cgxgbw_WebApplication$AppState, 0, jl_Enum, [], 12, 3, 0, cgxgbw_WebApplication$AppState_$callClinit, 0,
jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_28", $rt_wrapFunction2(jur_AbstractCharClass$LazyCategory__init_0), "$_init_29", $rt_wrapFunction3(jur_AbstractCharClass$LazyCategory__init_2), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategory_computeValue)],
otcic_StdoutOutputStream, 0, ji_OutputStream, [], 0, 3, 0, otcic_StdoutOutputStream_$callClinit, ["$write", $rt_wrapFunction1(otcic_StdoutOutputStream_write)],
jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$_init_18", $rt_wrapFunction3(jur_QuantifierSet__init_), "$getInnerSet", $rt_wrapFunction0(jur_QuantifierSet_getInnerSet), "$first", $rt_wrapFunction1(jur_QuantifierSet_first), "$hasConsumed", $rt_wrapFunction1(jur_QuantifierSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_QuantifierSet_processSecondPass)],
jur_DotAllQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_18", $rt_wrapFunction3(jur_DotAllQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_DotAllQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_DotAllQuantifierSet_find)],
cbgu_LongMap$MapIterator, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_19", $rt_wrapFunction1(cbgu_LongMap$MapIterator__init_0), "$reset0", $rt_wrapFunction0(cbgu_LongMap$MapIterator_reset), "$findNextIndex", $rt_wrapFunction0(cbgu_LongMap$MapIterator_findNextIndex)],
jl_Iterable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Iterator, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_LongMap$Values, 0, cbgu_LongMap$MapIterator, [jl_Iterable, ju_Iterator], 0, 3, 0, 0, ["$_init_19", $rt_wrapFunction1(cbgu_LongMap$Values__init_0), "$hasNext", $rt_wrapFunction0(cbgu_LongMap$Values_hasNext), "$next0", $rt_wrapFunction0(cbgu_LongMap$Values_next), "$iterator", $rt_wrapFunction0(cbgu_LongMap$Values_iterator), "$reset0", $rt_wrapFunction0(cbgu_LongMap$Values_reset)],
jur_FSet, 0, jur_AbstractSet, [], 0, 0, 0, jur_FSet_$callClinit, ["$_init_3", $rt_wrapFunction1(jur_FSet__init_0), "$matches", $rt_wrapFunction3(jur_FSet_matches), "$getGroupIndex", $rt_wrapFunction0(jur_FSet_getGroupIndex), "$hasConsumed", $rt_wrapFunction1(jur_FSet_hasConsumed)],
jur_BehindFSet, 0, jur_FSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_BehindFSet__init_0), "$matches", $rt_wrapFunction3(jur_BehindFSet_matches)],
cbg_Input, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbwd_EventListenerWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbw_WebInput, 0, jl_Object, [cbg_Input, cgxgbwd_EventListenerWrapper], 0, 3, 0, 0, ["$_init_100", $rt_wrapFunction1(cgxgbw_WebInput__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbw_WebInput_handleEvent), "$reset0", $rt_wrapFunction0(cgxgbw_WebInput_reset), "$setDelta", $rt_wrapFunction3(cgxgbw_WebInput_setDelta), "$getRelativeX", $rt_wrapFunction2(cgxgbw_WebInput_getRelativeX0), "$getRelativeY", $rt_wrapFunction2(cgxgbw_WebInput_getRelativeY0), "$getRelativeX0", $rt_wrapFunction2(cgxgbw_WebInput_getRelativeX1),
"$getRelativeY0", $rt_wrapFunction2(cgxgbw_WebInput_getRelativeY1), "$isCursorCatched", $rt_wrapFunction0(cgxgbw_WebInput_isCursorCatched), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbw_WebInput_handleEvent$exported$0)],
cbggg_PixmapPacker$PackStrategy, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_LowHighSurrogateRangeSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_96", $rt_wrapFunction1(jur_LowHighSurrogateRangeSet__init_0), "$setNext", $rt_wrapFunction1(jur_LowHighSurrogateRangeSet_setNext), "$matches", $rt_wrapFunction3(jur_LowHighSurrogateRangeSet_matches)],
jur_GroupQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_18", $rt_wrapFunction3(jur_GroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_GroupQuantifierSet_matches)],
jur_ReluctantGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_18", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet_matches)],
cbg_Application, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_PixmapPacker$Page, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_23", $rt_wrapFunction1(cbggg_PixmapPacker$Page__init_0), "$updateTexture", $rt_wrapFunction3(cbggg_PixmapPacker$Page_updateTexture)],
cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage, 0, cbggg_PixmapPacker$Page, [], 0, 0, 0, 0, ["$_init_23", $rt_wrapFunction1(cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage__init_0)],
jnci_AsciiEncoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_48", $rt_wrapFunction1(jnci_AsciiEncoder__init_0), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_AsciiEncoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
cbg_Gdx, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_ReflectiveOperationException, 0, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_ReflectiveOperationException__init_0)],
jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_AccessibleObject, 0, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jlr_AccessibleObject__init_0), "$setAccessible", $rt_wrapFunction1(jlr_AccessibleObject_setAccessible)],
jlr_Member, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_Constructor, 0, jlr_AccessibleObject, [jlr_Member], 0, 3, 0, 0, ["$_init_61", function(var_1, var_2, var_3, var_4, var_5, var_6) { jlr_Constructor__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getDeclaringClass", $rt_wrapFunction0(jlr_Constructor_getDeclaringClass), "$getModifiers0", $rt_wrapFunction0(jlr_Constructor_getModifiers), "$getParameterTypes", $rt_wrapFunction0(jlr_Constructor_getParameterTypes), "$newInstance0", $rt_wrapFunction1(jlr_Constructor_newInstance)],
jnc_CoderMalfunctionError, "CoderMalfunctionError", 17, jl_Error, [], 0, 3, 0, 0, ["$_init_8", $rt_wrapFunction1(jnc_CoderMalfunctionError__init_0)],
cbg_Audio, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbw_WebAudio, 0, jl_Object, [cbg_Audio], 0, 3, 0, 0, ["$_init_154", $rt_wrapFunction1(cgxgbw_WebAudio__init_0)],
jur_PosPlusGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_18", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet_matches)],
cgxgbwd_TimerWrapper, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbwd_TimerWrapper__init_)],
jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_AbstractStringBuilder__init_1), "$_init_3", $rt_wrapFunction1(jl_AbstractStringBuilder__init_2), "$append13", $rt_wrapFunction1(jl_AbstractStringBuilder_append), "$append14", $rt_wrapFunction1(jl_AbstractStringBuilder_append0), "$insert0", $rt_wrapFunction2(jl_AbstractStringBuilder_insert), "$append15", $rt_wrapFunction1(jl_AbstractStringBuilder_append1), "$append1", $rt_wrapFunction2(jl_AbstractStringBuilder_append2),
"$insert1", $rt_wrapFunction3(jl_AbstractStringBuilder_insert0), "$append16", $rt_wrapFunction1(jl_AbstractStringBuilder_append3), "$insert2", $rt_wrapFunction2(jl_AbstractStringBuilder_insert1), "$insert3", $rt_wrapFunction3(jl_AbstractStringBuilder_insert2), "$append17", $rt_wrapFunction1(jl_AbstractStringBuilder_append4), "$insert4", $rt_wrapFunction2(jl_AbstractStringBuilder_insert3), "$append4", $rt_wrapFunction1(jl_AbstractStringBuilder_append5), "$insert5", $rt_wrapFunction2(jl_AbstractStringBuilder_insert4),
"$insert", $rt_wrapFunction2(jl_AbstractStringBuilder_insert5), "$ensureCapacity", $rt_wrapFunction1(jl_AbstractStringBuilder_ensureCapacity), "$toString", $rt_wrapFunction0(jl_AbstractStringBuilder_toString), "$length", $rt_wrapFunction0(jl_AbstractStringBuilder_length), "$charAt", $rt_wrapFunction1(jl_AbstractStringBuilder_charAt), "$append3", $rt_wrapFunction3(jl_AbstractStringBuilder_append6), "$insert6", $rt_wrapFunction4(jl_AbstractStringBuilder_insert6), "$append5", $rt_wrapFunction1(jl_AbstractStringBuilder_append7),
"$getChars", $rt_wrapFunction4(jl_AbstractStringBuilder_getChars), "$setLength", $rt_wrapFunction1(jl_AbstractStringBuilder_setLength), "$deleteCharAt0", $rt_wrapFunction1(jl_AbstractStringBuilder_deleteCharAt), "$delete", $rt_wrapFunction2(jl_AbstractStringBuilder_delete)],
jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_StringBuffer, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_StringBuffer__init_0), "$append11", $rt_wrapFunction1(jl_StringBuffer_append), "$append6", $rt_wrapFunction3(jl_StringBuffer_append0), "$append12", $rt_wrapFunction1(jl_StringBuffer_append1), "$insert7", $rt_wrapFunction4(jl_StringBuffer_insert), "$insert8", $rt_wrapFunction2(jl_StringBuffer_insert0), "$insert6", $rt_wrapFunction4(jl_StringBuffer_insert1), "$append3", $rt_wrapFunction3(jl_StringBuffer_append2),
"$charAt", $rt_wrapFunction1(jl_StringBuffer_charAt), "$length", $rt_wrapFunction0(jl_StringBuffer_length), "$toString", $rt_wrapFunction0(jl_StringBuffer_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuffer_ensureCapacity), "$insert5", $rt_wrapFunction2(jl_StringBuffer_insert2)],
cbgu_Pool$Poolable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_Buffer, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(jn_Buffer__init_), "$capacity0", $rt_wrapFunction0(jn_Buffer_capacity), "$position0", $rt_wrapFunction0(jn_Buffer_position), "$position2", $rt_wrapFunction1(jn_Buffer_position0), "$limit1", $rt_wrapFunction0(jn_Buffer_limit), "$limit0", $rt_wrapFunction1(jn_Buffer_limit0), "$clear0", $rt_wrapFunction0(jn_Buffer_clear), "$flip0", $rt_wrapFunction0(jn_Buffer_flip), "$remaining", $rt_wrapFunction0(jn_Buffer_remaining), "$hasRemaining", $rt_wrapFunction0(jn_Buffer_hasRemaining)],
cbgg_Colors, 0, jl_Object, [], 4, 3, 0, cbgg_Colors_$callClinit, 0,
jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_SpecialToken__init_)],
jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, 0, jur_AbstractCharClass_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass__init_), "$getBits", $rt_wrapFunction0(jur_AbstractCharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getLowHighSurrogates), "$hasLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_hasLowHighSurrogates), "$mayContainSupplCodepoints2", $rt_wrapFunction0(jur_AbstractCharClass_mayContainSupplCodepoints), "$getInstance", $rt_wrapFunction0(jur_AbstractCharClass_getInstance),
"$getSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getSurrogates), "$getWithoutSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getWithoutSurrogates), "$hasUCI", $rt_wrapFunction0(jur_AbstractCharClass_hasUCI), "$setNegative", $rt_wrapFunction1(jur_AbstractCharClass_setNegative), "$isNegative", $rt_wrapFunction0(jur_AbstractCharClass_isNegative)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_83", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains)]]);
$rt_metadata([jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, 0, jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$PredefinedCharacterClasses__init_0), "$getObject", $rt_wrapFunction1(jur_AbstractCharClass$PredefinedCharacterClasses_getObject)],
jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit_computeValue)],
jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter_computeValue)],
cbgg_Pixmap$DrawType, 0, jl_Enum, [], 12, 0, 0, cbgg_Pixmap$DrawType_$callClinit, 0,
jur_DecomposedCharSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_31", $rt_wrapFunction2(jur_DecomposedCharSet__init_0), "$setNext", $rt_wrapFunction1(jur_DecomposedCharSet_setNext), "$matches", $rt_wrapFunction3(jur_DecomposedCharSet_matches), "$codePointAt", $rt_wrapFunction3(jur_DecomposedCharSet_codePointAt), "$first", $rt_wrapFunction1(jur_DecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_DecomposedCharSet_hasConsumed)],
jur_CIDecomposedCharSet, 0, jur_DecomposedCharSet, [], 0, 0, 0, 0, ["$_init_31", $rt_wrapFunction2(jur_CIDecomposedCharSet__init_0)],
otjw_WebGLContextAttributes, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cbggg_PixmapPacker$GuillotineStrategy, 0, jl_Object, [cbggg_PixmapPacker$PackStrategy], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_PixmapPacker$GuillotineStrategy__init_0), "$pack1", $rt_wrapFunction3(cbggg_PixmapPacker$GuillotineStrategy_pack)],
cbgu_TimeUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbwu_KeyCodes, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Pixmap, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, cbgg_Pixmap_$callClinit, ["$_init_34", $rt_wrapFunction1(cbgg_Pixmap__init_1), "$_init_20", $rt_wrapFunction3(cbgg_Pixmap__init_2), "$getContext", $rt_wrapFunction0(cbgg_Pixmap_getContext), "$setBlending", $rt_wrapFunction1(cbgg_Pixmap_setBlending), "$getFormat", $rt_wrapFunction0(cbgg_Pixmap_getFormat), "$getGLInternalFormat", $rt_wrapFunction0(cbgg_Pixmap_getGLInternalFormat), "$getGLFormat", $rt_wrapFunction0(cbgg_Pixmap_getGLFormat), "$getGLType", $rt_wrapFunction0(cbgg_Pixmap_getGLType),
"$getWidth", $rt_wrapFunction0(cbgg_Pixmap_getWidth), "$getHeight", $rt_wrapFunction0(cbgg_Pixmap_getHeight), "$getPixels", $rt_wrapFunction0(cbgg_Pixmap_getPixels), "$dispose", $rt_wrapFunction0(cbgg_Pixmap_dispose), "$getCanvasElement", $rt_wrapFunction0(cbgg_Pixmap_getCanvasElement), "$canUseImageElement", $rt_wrapFunction0(cbgg_Pixmap_canUseImageElement), "$getImageElement", $rt_wrapFunction0(cbgg_Pixmap_getImageElement), "$canUseVideoElement", $rt_wrapFunction0(cbgg_Pixmap_canUseVideoElement), "$getVideoElement",
$rt_wrapFunction0(cbgg_Pixmap_getVideoElement), "$setColor1", $rt_wrapFunction1(cbgg_Pixmap_setColor), "$setColor0", $rt_wrapFunction4(cbgg_Pixmap_setColor0), "$setColor", $rt_wrapFunction1(cbgg_Pixmap_setColor1), "$fill", $rt_wrapFunction0(cbgg_Pixmap_fill), "$drawPixmap0", $rt_wrapFunction3(cbgg_Pixmap_drawPixmap), "$drawPixmap", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { cbgg_Pixmap_drawPixmap0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$drawPixmap1", function(var_1, var_2,
var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbgg_Pixmap_drawPixmap1(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$getPixel", $rt_wrapFunction2(cbgg_Pixmap_getPixel), "$drawPixel", $rt_wrapFunction2(cbgg_Pixmap_drawPixel), "$drawPixel0", $rt_wrapFunction3(cbgg_Pixmap_drawPixel0)],
jur_AheadFSet, 0, jur_FSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AheadFSet__init_0), "$matches", $rt_wrapFunction3(jur_AheadFSet_matches)],
ju_Map, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_AbstractMap__init_)],
jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_EnumMap, 0, ju_AbstractMap, [ji_Serializable, jl_Cloneable], 0, 3, 0, 0, ["$_init_32", $rt_wrapFunction1(ju_EnumMap__init_0), "$get1", $rt_wrapFunction1(ju_EnumMap_get), "$put3", $rt_wrapFunction2(ju_EnumMap_put)],
cgxgetf_FreeTypePackTest$FontMap, 0, ju_EnumMap, [], 0, 0, 0, 0, ["$_init_76", $rt_wrapFunction1(cgxgetf_FreeTypePackTest$FontMap__init_0)],
jur_NonCapJointSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_33", $rt_wrapFunction2(jur_NonCapJointSet__init_0), "$matches", $rt_wrapFunction3(jur_NonCapJointSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_NonCapJointSet_hasConsumed)],
jur_AtomicJointSet, 0, jur_NonCapJointSet, [], 0, 0, 0, 0, ["$_init_33", $rt_wrapFunction2(jur_AtomicJointSet__init_0), "$matches", $rt_wrapFunction3(jur_AtomicJointSet_matches), "$setNext", $rt_wrapFunction1(jur_AtomicJointSet_setNext)],
jur_PositiveLookAhead, 0, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_33", $rt_wrapFunction2(jur_PositiveLookAhead__init_0), "$matches", $rt_wrapFunction3(jur_PositiveLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookAhead_hasConsumed)],
ju_Comparator, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_String$_clinit_$lambda$_84_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_String$_clinit_$lambda$_84_0__init_0)],
jur_NegativeLookAhead, 0, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_33", $rt_wrapFunction2(jur_NegativeLookAhead__init_0), "$matches", $rt_wrapFunction3(jur_NegativeLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookAhead_hasConsumed)],
cbgg_TextureData, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_FileTextureData, 0, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, ["$_init_125", $rt_wrapFunction4(cbggg_FileTextureData__init_0), "$isPrepared0", $rt_wrapFunction0(cbggg_FileTextureData_isPrepared), "$prepare", $rt_wrapFunction0(cbggg_FileTextureData_prepare), "$consumePixmap", $rt_wrapFunction0(cbggg_FileTextureData_consumePixmap), "$disposePixmap", $rt_wrapFunction0(cbggg_FileTextureData_disposePixmap), "$getWidth", $rt_wrapFunction0(cbggg_FileTextureData_getWidth), "$getHeight", $rt_wrapFunction0(cbggg_FileTextureData_getHeight),
"$getFormat", $rt_wrapFunction0(cbggg_FileTextureData_getFormat), "$useMipMaps0", $rt_wrapFunction0(cbggg_FileTextureData_useMipMaps), "$isManaged", $rt_wrapFunction0(cbggg_FileTextureData_isManaged), "$getType", $rt_wrapFunction0(cbggg_FileTextureData_getType), "$consumeCustomData", $rt_wrapFunction1(cbggg_FileTextureData_consumeCustomData)],
cgxgbw_WebJSHelper, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtd_TeaJSHelper, 0, jl_Object, [cgxgbw_WebJSHelper, otj_JSObject], 0, 3, 0, 0, ["$_init_121", $rt_wrapFunction2(cgxgbtd_TeaJSHelper__init_0), "$getGLContext", $rt_wrapFunction1(cgxgbtd_TeaJSHelper_getGLContext), "$getCanvas", $rt_wrapFunction0(cgxgbtd_TeaJSHelper_getCanvas), "$getCurrentWindow", $rt_wrapFunction0(cgxgbtd_TeaJSHelper_getCurrentWindow), "$getAgentInfo", $rt_wrapFunction0(cgxgbtd_TeaJSHelper_getAgentInfo), "$createImageElement", $rt_wrapFunction0(cgxgbtd_TeaJSHelper_createImageElement), "$creatHttpRequest",
$rt_wrapFunction0(cgxgbtd_TeaJSHelper_creatHttpRequest), "$createSoundManager", $rt_wrapFunction0(cgxgbtd_TeaJSHelper_createSoundManager)],
jl_UnsupportedOperationException, "UnsupportedOperationException", 18, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_UnsupportedOperationException__init_0)],
jn_ReadOnlyBufferException, "ReadOnlyBufferException", 16, jl_UnsupportedOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_ReadOnlyBufferException__init_0)],
jl_Readable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_CharBuffer__init_), "$get0", $rt_wrapFunction3(jn_CharBuffer_get), "$put16", $rt_wrapFunction1(jn_CharBuffer_put), "$position", $rt_wrapFunction1(jn_CharBuffer_position)],
jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_CharBufferImpl__init_), "$isReadOnly", $rt_wrapFunction0(jn_CharBufferImpl_isReadOnly)],
jn_CharBufferOverByteBuffer, 0, jn_CharBufferImpl, [], 1, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_CharBufferOverByteBuffer__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$readOnly", $rt_wrapFunction0(jn_CharBufferOverByteBuffer_readOnly)],
jn_CharBufferOverByteBufferLittleEndian, 0, jn_CharBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_CharBufferOverByteBufferLittleEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getChar", $rt_wrapFunction1(jn_CharBufferOverByteBufferLittleEndian_getChar), "$putChar", $rt_wrapFunction2(jn_CharBufferOverByteBufferLittleEndian_putChar)],
jlr_Array, 0, jl_Object, [], 4, 3, 0, 0, 0,
otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcit_DoubleAnalyzer$Result__init_0)],
jl_IncompatibleClassChangeError, 0, jl_LinkageError, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_IncompatibleClassChangeError__init_0)],
jl_NoSuchFieldError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_NoSuchFieldError__init_0)],
jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit_computeValue)],
ju_Collection, 0, jl_Object, [jl_Iterable], 3, 3, 0, 0, 0,
ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_AbstractCollection__init_), "$toArray", $rt_wrapFunction1(ju_AbstractCollection_toArray)],
ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_InputStream__init_), "$read", $rt_wrapFunction1(ji_InputStream_read), "$read0", $rt_wrapFunction3(ji_InputStream_read0), "$close", $rt_wrapFunction0(ji_InputStream_close)],
ji_ByteArrayInputStream, 0, ji_InputStream, [], 0, 3, 0, 0, ["$_init_39", $rt_wrapFunction3(ji_ByteArrayInputStream__init_0), "$_init_80", $rt_wrapFunction1(ji_ByteArrayInputStream__init_2), "$read1", $rt_wrapFunction0(ji_ByteArrayInputStream_read), "$read0", $rt_wrapFunction3(ji_ByteArrayInputStream_read0), "$close", $rt_wrapFunction0(ji_ByteArrayInputStream_close)],
otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0, 0,
jn_IntBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_IntBuffer__init_), "$put18", $rt_wrapFunction1(jn_IntBuffer_put), "$put4", $rt_wrapFunction3(jn_IntBuffer_put0), "$put9", $rt_wrapFunction1(jn_IntBuffer_put1), "$clear1", $rt_wrapFunction0(jn_IntBuffer_clear), "$clear0", $rt_wrapFunction0(jn_IntBuffer_clear0)],
jur_LeafQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_42", $rt_wrapFunction3(jur_LeafQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_LeafQuantifierSet_matches)],
jur_AltQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_42", $rt_wrapFunction3(jur_AltQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_AltQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltQuantifierSet_setNext)],
jur_PossessiveAltQuantifierSet, 0, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$_init_42", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet_matches)],
cgxgbt_TeaLauncher, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_SecurityException, 0, jl_RuntimeException, [], 0, 3, 0, 0, 0]);
$rt_metadata([otji_JS, 0, jl_Object, [], 4, 0, 0, 0, 0,
cbgu_LongMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_LongMap__init_0), "$_init_15", $rt_wrapFunction2(cbgu_LongMap__init_2), "$place0", $rt_wrapFunction1(cbgu_LongMap_place), "$put12", $rt_wrapFunction2(cbgu_LongMap_put), "$get9", $rt_wrapFunction1(cbgu_LongMap_get), "$remove2", $rt_wrapFunction1(cbgu_LongMap_remove), "$values8", $rt_wrapFunction0(cbgu_LongMap_values)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_104", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains)],
jnc_Charset, 0, jl_Object, [jl_Comparable], 1, 3, 0, 0, ["$_init_44", $rt_wrapFunction2(jnc_Charset__init_), "$name5", $rt_wrapFunction0(jnc_Charset_name), "$encode0", $rt_wrapFunction1(jnc_Charset_encode)],
jnci_UTF16Charset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$_init_64", $rt_wrapFunction3(jnci_UTF16Charset__init_0), "$newEncoder", $rt_wrapFunction0(jnci_UTF16Charset_newEncoder)],
otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$_init_1", $rt_wrapFunction4(jl_Object$monitorEnterWait$lambda$_6_0__init_0), "$run", $rt_wrapFunction0(jl_Object$monitorEnterWait$lambda$_6_0_run)],
cgxgbw_AssetLoaderListener, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbw_AssetLoaderListener__init_0), "$onProgress", $rt_wrapFunction1(cgxgbw_AssetLoaderListener_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbw_AssetLoaderListener_onFailure)],
cgxgbwp_Preloader$1$1, 0, cgxgbw_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_81", $rt_wrapFunction1(cgxgbwp_Preloader$1$1__init_0), "$onProgress", $rt_wrapFunction1(cgxgbwp_Preloader$1$1_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbwp_Preloader$1$1_onFailure), "$onSuccess0", $rt_wrapFunction2(cgxgbwp_Preloader$1$1_onSuccess)],
ju_Objects, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum_computeValue)],
jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph_computeValue)],
jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint_computeValue)],
jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar_computeValue)],
jur_PositiveLookBehind, 0, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_33", $rt_wrapFunction2(jur_PositiveLookBehind__init_0), "$matches", $rt_wrapFunction3(jur_PositiveLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookBehind_hasConsumed)],
jur_SequenceSet, 0, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_88", $rt_wrapFunction1(jur_SequenceSet__init_0), "$accepts", $rt_wrapFunction2(jur_SequenceSet_accepts), "$find", $rt_wrapFunction3(jur_SequenceSet_find), "$findBack", $rt_wrapFunction4(jur_SequenceSet_findBack), "$first", $rt_wrapFunction1(jur_SequenceSet_first), "$indexOf", $rt_wrapFunction3(jur_SequenceSet_indexOf), "$lastIndexOf", $rt_wrapFunction3(jur_SequenceSet_lastIndexOf), "$startsWith", $rt_wrapFunction2(jur_SequenceSet_startsWith)],
cgxgbwp_AssetDownloader$AssetDownload, 0, jl_Object, [], 3, 3, 0, 0, 0,
jnci_AsciiCharset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnci_AsciiCharset__init_0), "$newEncoder", $rt_wrapFunction0(jnci_AsciiCharset_newEncoder)],
jn_LongBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_LongBuffer__init_), "$put19", $rt_wrapFunction1(jn_LongBuffer_put)],
jn_LongBufferImpl, 0, jn_LongBuffer, [], 1, 0, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_LongBufferImpl__init_), "$isReadOnly", $rt_wrapFunction0(jn_LongBufferImpl_isReadOnly)],
cbggg_PixmapPacker$GuillotineStrategy$Node, 0, jl_Object, [], 4, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_PixmapPacker$GuillotineStrategy$Node__init_0)],
jl_ArrayStoreException, "ArrayStoreException", 18, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_ArrayStoreException__init_0)],
cbgur_ReflectionException, "ReflectionException", 10, jl_Exception, [], 0, 3, 0, 0, ["$_init_5", $rt_wrapFunction2(cbgur_ReflectionException__init_0)],
jur_AltGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_18", $rt_wrapFunction3(jur_AltGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_AltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltGroupQuantifierSet_setNext)],
cgxgbwp_Preloader$Asset, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_82", $rt_wrapFunction4(cgxgbwp_Preloader$Asset__init_0)],
jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, 0, ["$_init_138", function(var_1, var_2, var_3, var_4, var_5, var_6) { jur_MatchResultImpl__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setConsumed", $rt_wrapFunction2(jur_MatchResultImpl_setConsumed), "$getConsumed", $rt_wrapFunction1(jur_MatchResultImpl_getConsumed), "$end0", $rt_wrapFunction0(jur_MatchResultImpl_end), "$end", $rt_wrapFunction1(jur_MatchResultImpl_end0), "$setStart", $rt_wrapFunction2(jur_MatchResultImpl_setStart),
"$setEnd", $rt_wrapFunction2(jur_MatchResultImpl_setEnd), "$getStart", $rt_wrapFunction1(jur_MatchResultImpl_getStart), "$getEnd", $rt_wrapFunction1(jur_MatchResultImpl_getEnd), "$getGroupNoCheck", $rt_wrapFunction1(jur_MatchResultImpl_getGroupNoCheck), "$start10", $rt_wrapFunction0(jur_MatchResultImpl_start), "$start0", $rt_wrapFunction1(jur_MatchResultImpl_start0), "$finalizeMatch", $rt_wrapFunction0(jur_MatchResultImpl_finalizeMatch), "$getEnterCounter", $rt_wrapFunction1(jur_MatchResultImpl_getEnterCounter),
"$setEnterCounter", $rt_wrapFunction2(jur_MatchResultImpl_setEnterCounter), "$setValid", $rt_wrapFunction0(jur_MatchResultImpl_setValid), "$isValid", $rt_wrapFunction0(jur_MatchResultImpl_isValid), "$reset1", $rt_wrapFunction3(jur_MatchResultImpl_reset), "$reset0", $rt_wrapFunction0(jur_MatchResultImpl_reset0), "$setStartIndex", $rt_wrapFunction1(jur_MatchResultImpl_setStartIndex), "$getLeftBound", $rt_wrapFunction0(jur_MatchResultImpl_getLeftBound), "$getRightBound", $rt_wrapFunction0(jur_MatchResultImpl_getRightBound),
"$setMode", $rt_wrapFunction1(jur_MatchResultImpl_setMode), "$mode0", $rt_wrapFunction0(jur_MatchResultImpl_mode), "$hasAnchoringBounds", $rt_wrapFunction0(jur_MatchResultImpl_hasAnchoringBounds), "$hasTransparentBounds", $rt_wrapFunction0(jur_MatchResultImpl_hasTransparentBounds), "$getPreviousMatchEnd", $rt_wrapFunction0(jur_MatchResultImpl_getPreviousMatchEnd)],
cbggg_PixmapPacker$SkylineStrategy$SkylinePage, 0, cbggg_PixmapPacker$Page, [], 0, 0, 0, 0, ["$_init_23", $rt_wrapFunction1(cbggg_PixmapPacker$SkylineStrategy$SkylinePage__init_0)],
jur_UCIRangeSet, 0, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_96", $rt_wrapFunction1(jur_UCIRangeSet__init_0), "$accepts", $rt_wrapFunction2(jur_UCIRangeSet_accepts)],
cbggg_BitmapFont$Glyph, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_BitmapFont$Glyph__init_0), "$getKerning0", $rt_wrapFunction1(cbggg_BitmapFont$Glyph_getKerning), "$setKerning", $rt_wrapFunction2(cbggg_BitmapFont$Glyph_setKerning)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_54", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains)],
cbgu_GdxRuntimeException, "GdxRuntimeException", 9, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_5", $rt_wrapFunction2(cbgu_GdxRuntimeException__init_1), "$_init_", $rt_wrapFunction1(cbgu_GdxRuntimeException__init_2), "$_init_8", $rt_wrapFunction1(cbgu_GdxRuntimeException__init_4)],
cbgg_GLTexture, 0, jl_Object, [cbgu_Disposable], 1, 3, 0, cbgg_GLTexture_$callClinit, ["$_init_17", $rt_wrapFunction2(cbgg_GLTexture__init_), "$bind", $rt_wrapFunction0(cbgg_GLTexture_bind), "$unsafeSetWrap", $rt_wrapFunction3(cbgg_GLTexture_unsafeSetWrap), "$unsafeSetFilter", $rt_wrapFunction3(cbgg_GLTexture_unsafeSetFilter), "$setFilter", $rt_wrapFunction2(cbgg_GLTexture_setFilter), "$unsafeSetAnisotropicFilter", $rt_wrapFunction2(cbgg_GLTexture_unsafeSetAnisotropicFilter)],
cbgg_Texture, 0, cbgg_GLTexture, [], 0, 3, 0, cbgg_Texture_$callClinit, ["$_init_118", $rt_wrapFunction2(cbgg_Texture__init_0), "$_init_49", $rt_wrapFunction3(cbgg_Texture__init_2), "$_init_50", $rt_wrapFunction1(cbgg_Texture__init_4), "$_init_51", $rt_wrapFunction3(cbgg_Texture__init_6), "$load", $rt_wrapFunction1(cbgg_Texture_load), "$getWidth", $rt_wrapFunction0(cbgg_Texture_getWidth), "$getHeight", $rt_wrapFunction0(cbgg_Texture_getHeight), "$getTextureData", $rt_wrapFunction0(cbgg_Texture_getTextureData)],
otp_Platform, 0, jl_Object, [], 4, 3, 0, 0, 0,
jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, 0, jnc_CodingErrorAction_$callClinit, ["$_init_", $rt_wrapFunction1(jnc_CodingErrorAction__init_0)],
jl_Boolean, 0, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, 0, jl_Boolean_$callClinit, ["$_init_52", $rt_wrapFunction1(jl_Boolean__init_0), "$booleanValue", $rt_wrapFunction0(jl_Boolean_booleanValue)],
jl_IllegalArgumentException, "IllegalArgumentException", 18, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalArgumentException__init_1), "$_init_", $rt_wrapFunction1(jl_IllegalArgumentException__init_2)],
jnc_IllegalCharsetNameException, "IllegalCharsetNameException", 17, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jnc_IllegalCharsetNameException__init_0)],
ju_NoSuchElementException, "NoSuchElementException", 14, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_NoSuchElementException__init_0), "$_init_", $rt_wrapFunction1(ju_NoSuchElementException__init_2)],
ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, ["$_init_53", $rt_wrapFunction1(ji_FilterOutputStream__init_0)],
ji_PrintStream, 0, ji_FilterOutputStream, [], 0, 3, 0, 0, ["$_init_136", $rt_wrapFunction2(ji_PrintStream__init_0), "$write0", $rt_wrapFunction3(ji_PrintStream_write), "$print1", $rt_wrapFunction1(ji_PrintStream_print0), "$print", $rt_wrapFunction1(ji_PrintStream_print1), "$println1", $rt_wrapFunction1(ji_PrintStream_println), "$println0", $rt_wrapFunction1(ji_PrintStream_println0), "$println", $rt_wrapFunction0(ji_PrintStream_println1)],
jur_NegativeLookBehind, 0, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_33", $rt_wrapFunction2(jur_NegativeLookBehind__init_0), "$matches", $rt_wrapFunction3(jur_NegativeLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookBehind_hasConsumed)],
jn_IntBufferImpl, 0, jn_IntBuffer, [], 1, 0, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_IntBufferImpl__init_), "$get16", $rt_wrapFunction0(jn_IntBufferImpl_get), "$put13", $rt_wrapFunction1(jn_IntBufferImpl_put), "$get4", $rt_wrapFunction1(jn_IntBufferImpl_get0), "$put7", $rt_wrapFunction2(jn_IntBufferImpl_put0), "$isReadOnly", $rt_wrapFunction0(jn_IntBufferImpl_isReadOnly)],
jn_IntBufferOverByteBuffer, 0, jn_IntBufferImpl, [], 1, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_IntBufferOverByteBuffer__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$readOnly", $rt_wrapFunction0(jn_IntBufferOverByteBuffer_readOnly)],
jn_IntBufferOverByteBufferLittleEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_IntBufferOverByteBufferLittleEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement", $rt_wrapFunction1(jn_IntBufferOverByteBufferLittleEndian_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverByteBufferLittleEndian_putElement)],
jur_BackReferenceSet, 0, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction2(jur_BackReferenceSet__init_0), "$matches", $rt_wrapFunction3(jur_BackReferenceSet_matches), "$find", $rt_wrapFunction3(jur_BackReferenceSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferenceSet_findBack), "$first", $rt_wrapFunction1(jur_BackReferenceSet_first)],
jur_DotQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_92", $rt_wrapFunction4(jur_DotQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_DotQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_DotQuantifierSet_find)],
jn_DoubleBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_DoubleBuffer__init_), "$put21", $rt_wrapFunction1(jn_DoubleBuffer_put)]]);
$rt_metadata([jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue)],
otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, 0, otcit_FloatAnalyzer_$callClinit, 0,
cbgg_Composite, 0, jl_Enum, [], 12, 3, 0, cbgg_Composite_$callClinit, ["$getValue0", $rt_wrapFunction0(cbgg_Composite_getValue)],
cgxgbwp_AssetType, "AssetType", 6, jl_Enum, [], 12, 3, 0, cgxgbwp_AssetType_$callClinit, 0,
cbgg_Color, "Color", 11, jl_Object, [], 0, 3, 0, cbgg_Color_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgg_Color__init_0), "$_init_3", $rt_wrapFunction1(cbgg_Color__init_2), "$_init_57", $rt_wrapFunction4(cbgg_Color__init_4), "$_init_56", $rt_wrapFunction1(cbgg_Color__init_6), "$set1", $rt_wrapFunction1(cbgg_Color_set), "$mul1", $rt_wrapFunction1(cbgg_Color_mul), "$mul2", $rt_wrapFunction1(cbgg_Color_mul0), "$add10", $rt_wrapFunction1(cbgg_Color_add), "$sub1", $rt_wrapFunction1(cbgg_Color_sub), "$clamp", $rt_wrapFunction0(cbgg_Color_clamp),
"$set6", $rt_wrapFunction4(cbgg_Color_set0), "$set9", $rt_wrapFunction1(cbgg_Color_set1), "$add11", $rt_wrapFunction4(cbgg_Color_add0), "$sub2", $rt_wrapFunction4(cbgg_Color_sub0), "$mul3", $rt_wrapFunction4(cbgg_Color_mul1), "$lerp", $rt_wrapFunction2(cbgg_Color_lerp), "$lerp0", function(var_1, var_2, var_3, var_4, var_5) { return cbgg_Color_lerp0(this, var_1, var_2, var_3, var_4, var_5); }, "$premultiplyAlpha", $rt_wrapFunction0(cbgg_Color_premultiplyAlpha), "$equals", $rt_wrapFunction1(cbgg_Color_equals),
"$hashCode0", $rt_wrapFunction0(cbgg_Color_hashCode), "$toFloatBits", $rt_wrapFunction0(cbgg_Color_toFloatBits), "$toIntBits", $rt_wrapFunction0(cbgg_Color_toIntBits), "$toString", $rt_wrapFunction0(cbgg_Color_toString), "$fromHsv", $rt_wrapFunction3(cbgg_Color_fromHsv), "$fromHsv0", $rt_wrapFunction1(cbgg_Color_fromHsv0), "$toHsv", $rt_wrapFunction1(cbgg_Color_toHsv), "$cpy", $rt_wrapFunction0(cbgg_Color_cpy)],
cbgg_VertexAttribute, 0, jl_Object, [], 4, 3, 0, 0, ["$_init_107", $rt_wrapFunction3(cbgg_VertexAttribute__init_0), "$_init_58", $rt_wrapFunction4(cbgg_VertexAttribute__init_2), "$_init_59", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbgg_VertexAttribute__init_4(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getSizeInBytes", $rt_wrapFunction0(cbgg_VertexAttribute_getSizeInBytes)],
jur_UnifiedQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_91", $rt_wrapFunction1(jur_UnifiedQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_UnifiedQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_UnifiedQuantifierSet_find)],
cbggg_ShaderProgram, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, cbggg_ShaderProgram_$callClinit, ["$_init_108", $rt_wrapFunction2(cbggg_ShaderProgram__init_0), "$createProgram", $rt_wrapFunction0(cbggg_ShaderProgram_createProgram), "$getLog", $rt_wrapFunction0(cbggg_ShaderProgram_getLog), "$isCompiled0", $rt_wrapFunction0(cbggg_ShaderProgram_isCompiled), "$fetchUniformLocation", $rt_wrapFunction2(cbggg_ShaderProgram_fetchUniformLocation0), "$setUniformi", $rt_wrapFunction2(cbggg_ShaderProgram_setUniformi), "$setUniformMatrix1",
$rt_wrapFunction2(cbggg_ShaderProgram_setUniformMatrix), "$setUniformMatrix", $rt_wrapFunction3(cbggg_ShaderProgram_setUniformMatrix0), "$setUniformMatrix0", $rt_wrapFunction3(cbggg_ShaderProgram_setUniformMatrix1), "$setVertexAttribute", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbggg_ShaderProgram_setVertexAttribute(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$bind", $rt_wrapFunction0(cbggg_ShaderProgram_bind), "$disableVertexAttribute", $rt_wrapFunction1(cbggg_ShaderProgram_disableVertexAttribute),
"$disableVertexAttribute0", $rt_wrapFunction1(cbggg_ShaderProgram_disableVertexAttribute0), "$enableVertexAttribute", $rt_wrapFunction1(cbggg_ShaderProgram_enableVertexAttribute), "$getAttributeLocation", $rt_wrapFunction1(cbggg_ShaderProgram_getAttributeLocation)],
cbg_Files$FileType, "Files$FileType", 8, jl_Enum, [], 12, 3, 0, cbg_Files$FileType_$callClinit, 0,
jn_DoubleBufferImpl, 0, jn_DoubleBuffer, [], 1, 0, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_DoubleBufferImpl__init_), "$isReadOnly", $rt_wrapFunction0(jn_DoubleBufferImpl_isReadOnly)],
jlr_Type, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Class, 0, jl_Object, [jlr_AnnotatedElement, jlr_Type], 0, 3, 0, 0, ["$getPlatformClass", $rt_wrapFunction0(jl_Class_getPlatformClass), "$isInstance", $rt_wrapFunction1(jl_Class_isInstance), "$getName", $rt_wrapFunction0(jl_Class_getName), "$isPrimitive", $rt_wrapFunction0(jl_Class_isPrimitive), "$isArray", $rt_wrapFunction0(jl_Class_isArray), "$getComponentType", $rt_wrapFunction0(jl_Class_getComponentType), "$getDeclaredConstructors", $rt_wrapFunction0(jl_Class_getDeclaredConstructors), "$getConstructors",
$rt_wrapFunction0(jl_Class_getConstructors), "$getDeclaredConstructor", $rt_wrapFunction1(jl_Class_getDeclaredConstructor), "$getConstructor", $rt_wrapFunction1(jl_Class_getConstructor)],
otjt_ArrayBufferView, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otjt_Int16Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_BitSet__init_1), "$_init_3", $rt_wrapFunction1(ju_BitSet__init_2), "$set7", $rt_wrapFunction1(ju_BitSet_set), "$set", $rt_wrapFunction2(ju_BitSet_set0), "$clear6", $rt_wrapFunction1(ju_BitSet_clear), "$clear7", $rt_wrapFunction2(ju_BitSet_clear0), "$get8", $rt_wrapFunction1(ju_BitSet_get), "$nextSetBit", $rt_wrapFunction1(ju_BitSet_nextSetBit), "$nextClearBit", $rt_wrapFunction1(ju_BitSet_nextClearBit), "$intersects",
$rt_wrapFunction1(ju_BitSet_intersects), "$and", $rt_wrapFunction1(ju_BitSet_and), "$andNot", $rt_wrapFunction1(ju_BitSet_andNot), "$or", $rt_wrapFunction1(ju_BitSet_or), "$xor", $rt_wrapFunction1(ju_BitSet_xor), "$isEmpty", $rt_wrapFunction0(ju_BitSet_isEmpty)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_116", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains)],
cbgg_Camera, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgg_Camera__init_)],
cbgg_OrthographicCamera, 0, cbgg_Camera, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgg_OrthographicCamera__init_0), "$update1", $rt_wrapFunction0(cbgg_OrthographicCamera_update), "$update", $rt_wrapFunction1(cbgg_OrthographicCamera_update0), "$setToOrtho0", $rt_wrapFunction3(cbgg_OrthographicCamera_setToOrtho)],
cbggg_IndexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_IndexBufferObject, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$_init_67", $rt_wrapFunction2(cbggg_IndexBufferObject__init_0), "$_init_3", $rt_wrapFunction1(cbggg_IndexBufferObject__init_2), "$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumMaxIndices), "$setIndices0", $rt_wrapFunction3(cbggg_IndexBufferObject_setIndices), "$getBuffer0", $rt_wrapFunction0(cbggg_IndexBufferObject_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObject_bind),
"$unbind0", $rt_wrapFunction0(cbggg_IndexBufferObject_unbind)],
cbggg_IndexArray, 0, cbggg_IndexBufferObject, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbggg_IndexArray__init_0)],
cgxgbw_WebTool, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggf_FreeType$Bitmap, 0, cbgggf_FreeType$Pointer, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgggf_FreeType$Bitmap__init_0), "$getRows", $rt_wrapFunction0(cbgggf_FreeType$Bitmap_getRows), "$getWidth", $rt_wrapFunction0(cbgggf_FreeType$Bitmap_getWidth), "$getPitch", $rt_wrapFunction0(cbgggf_FreeType$Bitmap_getPitch), "$getBuffer", $rt_wrapFunction0(cbgggf_FreeType$Bitmap_getBuffer), "$getPixmap", $rt_wrapFunction3(cbgggf_FreeType$Bitmap_getPixmap), "$getPixelMode", $rt_wrapFunction0(cbgggf_FreeType$Bitmap_getPixelMode)],
jl_Float, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Float_$callClinit, ["$floatValue", $rt_wrapFunction0(jl_Float_floatValue)],
ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_CharSet, 0, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_90", $rt_wrapFunction1(jur_CharSet__init_0), "$charCount0", $rt_wrapFunction0(jur_CharSet_charCount), "$accepts", $rt_wrapFunction2(jur_CharSet_accepts), "$find", $rt_wrapFunction3(jur_CharSet_find), "$findBack", $rt_wrapFunction4(jur_CharSet_findBack), "$getChar0", $rt_wrapFunction0(jur_CharSet_getChar), "$first", $rt_wrapFunction1(jur_CharSet_first)],
cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter__init_0)],
jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_111", $rt_wrapFunction3(jur_CharClass$3__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$3_contains)],
jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_109", $rt_wrapFunction4(jur_CharClass$4__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$4_contains)],
jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_110", $rt_wrapFunction2(jur_CharClass$1__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$1_contains)],
otjb_AnimationFrameCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_111", $rt_wrapFunction3(jur_CharClass$2__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$2_contains)],
jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_110", $rt_wrapFunction2(jur_CharClass$7__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$7_contains)],
jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_112", $rt_wrapFunction3(jur_CharClass$8__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$8_contains)],
cbggg_VertexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_109", $rt_wrapFunction4(jur_CharClass$5__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$5_contains)],
jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_110", $rt_wrapFunction2(jur_CharClass$6__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$6_contains)],
jur_DotSet, 0, jur_JointSet, [], 4, 0, 0, 0, ["$_init_94", $rt_wrapFunction1(jur_DotSet__init_0), "$matches", $rt_wrapFunction3(jur_DotSet_matches), "$setNext", $rt_wrapFunction1(jur_DotSet_setNext), "$getType0", $rt_wrapFunction0(jur_DotSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotSet_hasConsumed)],
jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_112", $rt_wrapFunction3(jur_CharClass$9__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$9_contains)],
jl_Character, 0, jl_Object, [jl_Comparable], 0, 3, 0, jl_Character_$callClinit, 0,
jur_CICharSet, 0, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_90", $rt_wrapFunction1(jur_CICharSet__init_0), "$accepts", $rt_wrapFunction2(jur_CICharSet_accepts)],
jur_SupplCharSet, 0, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_SupplCharSet__init_0), "$accepts", $rt_wrapFunction2(jur_SupplCharSet_accepts), "$find", $rt_wrapFunction3(jur_SupplCharSet_find), "$findBack", $rt_wrapFunction4(jur_SupplCharSet_findBack), "$getCodePoint", $rt_wrapFunction0(jur_SupplCharSet_getCodePoint), "$first", $rt_wrapFunction1(jur_SupplCharSet_first)],
jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_28", $rt_wrapFunction2(jur_AbstractCharClass$LazyCategoryScope__init_1), "$_init_29", $rt_wrapFunction3(jur_AbstractCharClass$LazyCategoryScope__init_2), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategoryScope_computeValue)],
otjc_JSNumber, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
jn_CharBufferOverByteBufferBigEndian, 0, jn_CharBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_CharBufferOverByteBufferBigEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getChar", $rt_wrapFunction1(jn_CharBufferOverByteBufferBigEndian_getChar), "$putChar", $rt_wrapFunction2(jn_CharBufferOverByteBufferBigEndian_putChar)],
jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator__init_)],
jn_CharBufferOverArray, 0, jn_CharBufferImpl, [], 0, 0, 0, 0, ["$_init_35", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_CharBufferOverArray__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getChar", $rt_wrapFunction1(jn_CharBufferOverArray_getChar)],
jn_LongBufferOverByteBuffer, 0, jn_LongBufferImpl, [], 1, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_LongBufferOverByteBuffer__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$readOnly", $rt_wrapFunction0(jn_LongBufferOverByteBuffer_readOnly)],
jn_LongBufferOverByteBufferLittleEndian, 0, jn_LongBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_LongBufferOverByteBufferLittleEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement0", $rt_wrapFunction1(jn_LongBufferOverByteBufferLittleEndian_getElement), "$putElement0", $rt_wrapFunction2(jn_LongBufferOverByteBufferLittleEndian_putElement)],
cbgu_IntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgu_IntMap__init_0), "$_init_15", $rt_wrapFunction2(cbgu_IntMap__init_2), "$place", $rt_wrapFunction1(cbgu_IntMap_place), "$put2", $rt_wrapFunction2(cbgu_IntMap_put), "$get", $rt_wrapFunction1(cbgu_IntMap_get), "$remove", $rt_wrapFunction1(cbgu_IntMap_remove), "$containsValue", $rt_wrapFunction2(cbgu_IntMap_containsValue)]]);
$rt_metadata([jnci_Iso8859Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_48", $rt_wrapFunction1(jnci_Iso8859Encoder__init_0), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_Iso8859Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_135", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1_contains)],
cbgm_Quaternion, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Quaternion_$callClinit, ["$_init_57", $rt_wrapFunction4(cbgm_Quaternion__init_0), "$_init_0", $rt_wrapFunction0(cbgm_Quaternion__init_2), "$set5", $rt_wrapFunction4(cbgm_Quaternion_set), "$idt", $rt_wrapFunction0(cbgm_Quaternion_idt)],
jnc_StandardCharsets, 0, jl_Object, [], 4, 3, 0, jnc_StandardCharsets_$callClinit, 0,
jn_LongBufferOverByteBufferBigEndian, 0, jn_LongBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_LongBufferOverByteBufferBigEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement0", $rt_wrapFunction1(jn_LongBufferOverByteBufferBigEndian_getElement), "$putElement0", $rt_wrapFunction2(jn_LongBufferOverByteBufferBigEndian_putElement)],
cbggg_MipMapGenerator, 0, jl_Object, [], 0, 3, 0, cbggg_MipMapGenerator_$callClinit, 0,
jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_144", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1_contains)],
jnc_UnsupportedCharsetException, "UnsupportedCharsetException", 17, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jnc_UnsupportedCharsetException__init_0)],
jn_ShortBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_ShortBuffer__init_), "$put17", $rt_wrapFunction1(jn_ShortBuffer_put), "$put8", $rt_wrapFunction3(jn_ShortBuffer_put0), "$clear3", $rt_wrapFunction0(jn_ShortBuffer_clear), "$flip2", $rt_wrapFunction0(jn_ShortBuffer_flip), "$limit2", $rt_wrapFunction1(jn_ShortBuffer_limit), "$position5", $rt_wrapFunction1(jn_ShortBuffer_position), "$flip0", $rt_wrapFunction0(jn_ShortBuffer_flip0), "$clear0", $rt_wrapFunction0(jn_ShortBuffer_clear0),
"$limit0", $rt_wrapFunction1(jn_ShortBuffer_limit0), "$position2", $rt_wrapFunction1(jn_ShortBuffer_position0)],
jn_ShortBufferImpl, 0, jn_ShortBuffer, [], 1, 0, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_ShortBufferImpl__init_), "$get15", $rt_wrapFunction1(jn_ShortBufferImpl_get), "$isReadOnly", $rt_wrapFunction0(jn_ShortBufferImpl_isReadOnly)],
jn_ShortBufferOverByteBuffer, 0, jn_ShortBufferImpl, [], 1, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_ShortBufferOverByteBuffer__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$readOnly", $rt_wrapFunction0(jn_ShortBufferOverByteBuffer_readOnly)],
jn_ShortBufferOverByteBufferLittleEndian, 0, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_ShortBufferOverByteBufferLittleEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement2", $rt_wrapFunction1(jn_ShortBufferOverByteBufferLittleEndian_getElement), "$putElement2", $rt_wrapFunction2(jn_ShortBufferOverByteBufferLittleEndian_putElement)],
jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_145", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1_contains)],
jn_FloatBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_FloatBuffer__init_), "$put20", $rt_wrapFunction1(jn_FloatBuffer_put), "$put10", $rt_wrapFunction3(jn_FloatBuffer_put0), "$clear4", $rt_wrapFunction0(jn_FloatBuffer_clear), "$flip3", $rt_wrapFunction0(jn_FloatBuffer_flip), "$limit3", $rt_wrapFunction1(jn_FloatBuffer_limit), "$position6", $rt_wrapFunction1(jn_FloatBuffer_position), "$flip0", $rt_wrapFunction0(jn_FloatBuffer_flip0), "$clear0", $rt_wrapFunction0(jn_FloatBuffer_clear0),
"$limit0", $rt_wrapFunction1(jn_FloatBuffer_limit0), "$position2", $rt_wrapFunction1(jn_FloatBuffer_position0)],
jn_FloatBufferImpl, 0, jn_FloatBuffer, [], 1, 0, 0, 0, ["$_init_36", $rt_wrapFunction3(jn_FloatBufferImpl__init_), "$get5", $rt_wrapFunction1(jn_FloatBufferImpl_get), "$put14", $rt_wrapFunction2(jn_FloatBufferImpl_put), "$isReadOnly", $rt_wrapFunction0(jn_FloatBufferImpl_isReadOnly)],
jn_FloatBufferOverByteBuffer, 0, jn_FloatBufferImpl, [], 1, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_FloatBufferOverByteBuffer__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$readOnly", $rt_wrapFunction0(jn_FloatBufferOverByteBuffer_readOnly)],
jur_UEOLSet, 0, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_UEOLSet__init_0), "$matches", $rt_wrapFunction3(jur_UEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UEOLSet_hasConsumed)],
jur_UCICharSet, 0, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_90", $rt_wrapFunction1(jur_UCICharSet__init_0), "$accepts", $rt_wrapFunction2(jur_UCICharSet_accepts)],
cbgggf_FreeType$GlyphMetrics, 0, cbgggf_FreeType$Pointer, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgggf_FreeType$GlyphMetrics__init_0), "$getHeight", $rt_wrapFunction0(cbgggf_FreeType$GlyphMetrics_getHeight), "$getHoriAdvance", $rt_wrapFunction0(cbgggf_FreeType$GlyphMetrics_getHoriAdvance)],
cbgu_Array, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Array__init_0), "$_init_3", $rt_wrapFunction1(cbgu_Array__init_2), "$_init_67", $rt_wrapFunction2(cbgu_Array__init_4), "$add3", $rt_wrapFunction1(cbgu_Array_add), "$addAll0", $rt_wrapFunction1(cbgu_Array_addAll), "$addAll3", $rt_wrapFunction3(cbgu_Array_addAll0), "$addAll", $rt_wrapFunction3(cbgu_Array_addAll1), "$get", $rt_wrapFunction1(cbgu_Array_get), "$removeRange", $rt_wrapFunction2(cbgu_Array_removeRange), "$pop",
$rt_wrapFunction0(cbgu_Array_pop), "$peek", $rt_wrapFunction0(cbgu_Array_peek), "$first0", $rt_wrapFunction0(cbgu_Array_first), "$clear", $rt_wrapFunction0(cbgu_Array_clear), "$ensureCapacity1", $rt_wrapFunction1(cbgu_Array_ensureCapacity), "$resize0", $rt_wrapFunction1(cbgu_Array_resize), "$iterator0", $rt_wrapFunction0(cbgu_Array_iterator), "$truncate0", $rt_wrapFunction1(cbgu_Array_truncate), "$hashCode0", $rt_wrapFunction0(cbgu_Array_hashCode), "$equals", $rt_wrapFunction1(cbgu_Array_equals)],
jnci_Iso8859Charset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnci_Iso8859Charset__init_0), "$newEncoder", $rt_wrapFunction0(jnci_Iso8859Charset_newEncoder)],
jur_AtomicFSet, 0, jur_FSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_AtomicFSet__init_0), "$matches", $rt_wrapFunction3(jur_AtomicFSet_matches), "$getIndex", $rt_wrapFunction0(jur_AtomicFSet_getIndex), "$hasConsumed", $rt_wrapFunction1(jur_AtomicFSet_hasConsumed)],
cbgg_Texture$TextureWrap, 0, jl_Enum, [], 12, 3, 0, cbgg_Texture$TextureWrap_$callClinit, ["$getGLEnum", $rt_wrapFunction0(cbgg_Texture$TextureWrap_getGLEnum)],
jur_LowSurrogateCharSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_90", $rt_wrapFunction1(jur_LowSurrogateCharSet__init_0), "$setNext", $rt_wrapFunction1(jur_LowSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_LowSurrogateCharSet_matches), "$find", $rt_wrapFunction3(jur_LowSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_LowSurrogateCharSet_findBack), "$first", $rt_wrapFunction1(jur_LowSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_LowSurrogateCharSet_hasConsumed)],
jl_AssertionError, "AssertionError", 18, jl_Error, [], 0, 3, 0, 0, ["$_init_5", $rt_wrapFunction2(jl_AssertionError__init_0)],
jur_CompositeGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_71", function(var_1, var_2, var_3, var_4, var_5) { jur_CompositeGroupQuantifierSet__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_CompositeGroupQuantifierSet_matches)],
jur_RelCompositeGroupQuantifierSet, 0, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_71", function(var_1, var_2, var_3, var_4, var_5) { jur_RelCompositeGroupQuantifierSet__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_RelCompositeGroupQuantifierSet_matches)],
cbggg_Batch, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
ju_List, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_AbstractList__init_), "$iterator", $rt_wrapFunction0(ju_AbstractList_iterator)],
ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_ArrayList, 0, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_ArrayList__init_0), "$_init_3", $rt_wrapFunction1(ju_ArrayList__init_2), "$ensureCapacity", $rt_wrapFunction1(ju_ArrayList_ensureCapacity), "$get", $rt_wrapFunction1(ju_ArrayList_get), "$size", $rt_wrapFunction0(ju_ArrayList_size), "$add5", $rt_wrapFunction1(ju_ArrayList_add), "$add1", $rt_wrapFunction2(ju_ArrayList_add0), "$remove", $rt_wrapFunction1(ju_ArrayList_remove)],
jl_IllegalMonitorStateException, "IllegalMonitorStateException", 18, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalMonitorStateException__init_0)],
jur_CompositeQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_93", $rt_wrapFunction4(jur_CompositeQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_CompositeQuantifierSet_matches)],
cbgggf_FreeTypeFontGenerator$1, 0, jl_Object, [], 32, 0, 0, cbgggf_FreeTypeFontGenerator$1_$callClinit, 0,
jur_SupplRangeSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_96", $rt_wrapFunction1(jur_SupplRangeSet__init_0), "$matches", $rt_wrapFunction3(jur_SupplRangeSet_matches), "$contains", $rt_wrapFunction1(jur_SupplRangeSet_contains), "$first", $rt_wrapFunction1(jur_SupplRangeSet_first), "$getChars0", $rt_wrapFunction0(jur_SupplRangeSet_getChars), "$setNext", $rt_wrapFunction1(jur_SupplRangeSet_setNext), "$hasConsumed", $rt_wrapFunction1(jur_SupplRangeSet_hasConsumed)],
jur_RelAltGroupQuantifierSet, 0, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_18", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet_matches)],
otcir_Flags, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_String, "String", 18, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, 0, jl_String_$callClinit, ["$_init_40", $rt_wrapFunction1(jl_String__init_1), "$_init_24", $rt_wrapFunction3(jl_String__init_2), "$_init_73", $rt_wrapFunction3(jl_String__init_4), "$charAt", $rt_wrapFunction1(jl_String_charAt), "$length", $rt_wrapFunction0(jl_String_length), "$isEmpty", $rt_wrapFunction0(jl_String_isEmpty), "$startsWith0", $rt_wrapFunction2(jl_String_startsWith), "$startsWith1", $rt_wrapFunction1(jl_String_startsWith0),
"$endsWith", $rt_wrapFunction1(jl_String_endsWith), "$indexOf1", $rt_wrapFunction2(jl_String_indexOf), "$lastIndexOf1", $rt_wrapFunction2(jl_String_lastIndexOf), "$lastIndexOf2", $rt_wrapFunction1(jl_String_lastIndexOf0), "$indexOf0", $rt_wrapFunction2(jl_String_indexOf0), "$lastIndexOf0", $rt_wrapFunction2(jl_String_lastIndexOf1), "$substring", $rt_wrapFunction2(jl_String_substring), "$substring0", $rt_wrapFunction1(jl_String_substring0), "$subSequence", $rt_wrapFunction2(jl_String_subSequence), "$contains1",
$rt_wrapFunction1(jl_String_contains), "$replace", $rt_wrapFunction2(jl_String_replace), "$trim", $rt_wrapFunction0(jl_String_trim), "$toString", $rt_wrapFunction0(jl_String_toString), "$toCharArray", $rt_wrapFunction0(jl_String_toCharArray), "$equals", $rt_wrapFunction1(jl_String_equals), "$getBytes0", $rt_wrapFunction1(jl_String_getBytes), "$getBytes1", $rt_wrapFunction0(jl_String_getBytes0), "$getBytes", $rt_wrapFunction1(jl_String_getBytes1), "$hashCode0", $rt_wrapFunction0(jl_String_hashCode), "$toUpperCase0",
$rt_wrapFunction0(jl_String_toUpperCase), "$split0", $rt_wrapFunction1(jl_String_split)],
otcic_StderrOutputStream, 0, ji_OutputStream, [], 0, 3, 0, otcic_StderrOutputStream_$callClinit, ["$write", $rt_wrapFunction1(otcic_StderrOutputStream_write)],
jnc_Charset$Charsets, 0, jl_Object, [], 0, 0, 0, jnc_Charset$Charsets_$callClinit, 0,
otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otjde_FocusEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
jn_IntBufferOverArray, 0, jn_IntBufferImpl, [], 0, 0, 0, 0, ["$_init_41", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_IntBufferOverArray__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement", $rt_wrapFunction1(jn_IntBufferOverArray_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverArray_putElement), "$readOnly", $rt_wrapFunction0(jn_IntBufferOverArray_readOnly)],
jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_48", $rt_wrapFunction1(jnci_UTF8Encoder__init_0), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
ju_Dictionary, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Dictionary__init_)],
ju_Hashtable, 0, ju_Dictionary, [ju_Map, jl_Cloneable, ji_Serializable], 0, 3, 0, ju_Hashtable_$callClinit, ["$_init_0", $rt_wrapFunction0(ju_Hashtable__init_0), "$_init_3", $rt_wrapFunction1(ju_Hashtable__init_2), "$put1", $rt_wrapFunction2(ju_Hashtable_put), "$rehash", $rt_wrapFunction0(ju_Hashtable_rehash)],
ju_Properties, 0, ju_Hashtable, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Properties__init_0), "$_init_137", $rt_wrapFunction1(ju_Properties__init_2)],
jn_FloatBufferOverArray, 0, jn_FloatBufferImpl, [], 0, 0, 0, 0, ["$_init_66", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_FloatBufferOverArray__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement3", $rt_wrapFunction1(jn_FloatBufferOverArray_getElement), "$putElement3", $rt_wrapFunction2(jn_FloatBufferOverArray_putElement), "$readOnly", $rt_wrapFunction0(jn_FloatBufferOverArray_readOnly)],
jur_FSet$PossessiveFSet, 0, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_FSet$PossessiveFSet__init_0), "$matches", $rt_wrapFunction3(jur_FSet$PossessiveFSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_FSet$PossessiveFSet_hasConsumed)]]);
$rt_metadata([cbg_ApplicationListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgetf_FreeTypePackTest, 0, jl_Object, [cbg_ApplicationListener], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgetf_FreeTypePackTest__init_0), "$create", $rt_wrapFunction0(cgxgetf_FreeTypePackTest_create), "$resize1", $rt_wrapFunction2(cgxgetf_FreeTypePackTest_resize), "$render", $rt_wrapFunction0(cgxgetf_FreeTypePackTest_render), "$getFont", $rt_wrapFunction2(cgxgetf_FreeTypePackTest_getFont), "$createFonts", $rt_wrapFunction0(cgxgetf_FreeTypePackTest_createFonts)],
jur_PosCompositeGroupQuantifierSet, 0, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_71", function(var_1, var_2, var_3, var_4, var_5) { jur_PosCompositeGroupQuantifierSet__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_PosCompositeGroupQuantifierSet_matches)],
cbgg_Texture$TextureFilter, 0, jl_Enum, [], 12, 3, 0, cbgg_Texture$TextureFilter_$callClinit, ["$getGLEnum", $rt_wrapFunction0(cbgg_Texture$TextureFilter_getGLEnum)],
jnci_UTF8Charset, 0, jnc_Charset, [], 0, 3, 0, jnci_UTF8Charset_$callClinit, ["$newEncoder", $rt_wrapFunction0(jnci_UTF8Charset_newEncoder)],
otjde_KeyboardEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
jur_MultiLineEOLSet, 0, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_MultiLineEOLSet__init_0), "$matches", $rt_wrapFunction3(jur_MultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineEOLSet_hasConsumed)],
cgxgbwp_Preloader, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(cgxgbwp_Preloader__init_0), "$preload", $rt_wrapFunction1(cgxgbwp_Preloader_preload), "$loadAsset", $rt_wrapFunction4(cgxgbwp_Preloader_loadAsset), "$loadScript", $rt_wrapFunction2(cgxgbwp_Preloader_loadScript), "$putAssetInMap", $rt_wrapFunction3(cgxgbwp_Preloader_putAssetInMap), "$read3", $rt_wrapFunction1(cgxgbwp_Preloader_read), "$contains0", $rt_wrapFunction1(cgxgbwp_Preloader_contains), "$length4", $rt_wrapFunction1(cgxgbwp_Preloader_length)],
cbgggf_FreeType$Face, 0, cbgggf_FreeType$Pointer, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_134", $rt_wrapFunction2(cbgggf_FreeType$Face__init_0), "$dispose", $rt_wrapFunction0(cbgggf_FreeType$Face_dispose), "$getFaceFlags", $rt_wrapFunction0(cbgggf_FreeType$Face_getFaceFlags), "$getNumGlyphs", $rt_wrapFunction0(cbgggf_FreeType$Face_getNumGlyphs), "$getMaxAdvanceWidth", $rt_wrapFunction0(cbgggf_FreeType$Face_getMaxAdvanceWidth), "$setPixelSizes0", $rt_wrapFunction2(cbgggf_FreeType$Face_setPixelSizes), "$loadChar",
$rt_wrapFunction2(cbgggf_FreeType$Face_loadChar), "$getGlyph", $rt_wrapFunction0(cbgggf_FreeType$Face_getGlyph), "$getSize", $rt_wrapFunction0(cbgggf_FreeType$Face_getSize), "$hasKerning", $rt_wrapFunction0(cbgggf_FreeType$Face_hasKerning), "$getKerning", $rt_wrapFunction3(cbgggf_FreeType$Face_getKerning), "$getCharIndex", $rt_wrapFunction1(cbgggf_FreeType$Face_getCharIndex)],
jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_38", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1_contains)],
jl_NoSuchMethodException, "NoSuchMethodException", 18, jl_ReflectiveOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_NoSuchMethodException__init_0)],
otcir_Converter, 0, jl_Object, [], 4, 3, 0, 0, 0,
jn_IntBufferOverByteBufferBigEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_IntBufferOverByteBufferBigEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement", $rt_wrapFunction1(jn_IntBufferOverByteBufferBigEndian_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverByteBufferBigEndian_putElement)],
cgxgbwp_Preloader$1, 0, cgxgbw_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_78", $rt_wrapFunction2(cgxgbwp_Preloader$1__init_0), "$onProgress", $rt_wrapFunction1(cgxgbwp_Preloader$1_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbwp_Preloader$1_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbwp_Preloader$1_onSuccess), "$onSuccess0", $rt_wrapFunction2(cgxgbwp_Preloader$1_onSuccess0)],
jl_NullPointerException, "NullPointerException", 18, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_NullPointerException__init_1), "$_init_0", $rt_wrapFunction0(jl_NullPointerException__init_2)],
cgxgbwp_Preloader$3, 0, jl_Object, [], 32, 0, 0, cgxgbwp_Preloader$3_$callClinit, 0,
cgxgbwp_Preloader$2, 0, cgxgbw_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_79", $rt_wrapFunction4(cgxgbwp_Preloader$2__init_0), "$onProgress", $rt_wrapFunction1(cgxgbwp_Preloader$2_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbwp_Preloader$2_onFailure), "$onSuccess0", $rt_wrapFunction2(cgxgbwp_Preloader$2_onSuccess)],
jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_47", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1_contains)],
jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Object$Monitor__init_0)],
cbgggf_FreeType$Glyph, 0, cbgggf_FreeType$Pointer, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgggf_FreeType$Glyph__init_0), "$dispose", $rt_wrapFunction0(cbgggf_FreeType$Glyph_dispose), "$strokeBorder", $rt_wrapFunction2(cbgggf_FreeType$Glyph_strokeBorder), "$toBitmap", $rt_wrapFunction1(cbgggf_FreeType$Glyph_toBitmap), "$getBitmap", $rt_wrapFunction0(cbgggf_FreeType$Glyph_getBitmap), "$getLeft", $rt_wrapFunction0(cbgggf_FreeType$Glyph_getLeft), "$getTop", $rt_wrapFunction0(cbgggf_FreeType$Glyph_getTop)],
jl_Math, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_VertexBufferObjectSubData, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$_init_128", $rt_wrapFunction3(cbggg_VertexBufferObjectSubData__init_0), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObjectSubData_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_bind), "$unbind", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_unbind)],
cbg_Files, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtd_TeaWebAgent, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue)],
cgxgbwd_WindowWrapper, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_PatternSyntaxException, "PatternSyntaxException", 15, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_86", $rt_wrapFunction3(jur_PatternSyntaxException__init_0), "$getMessage", $rt_wrapFunction0(jur_PatternSyntaxException_getMessage)],
cbgu_Pool, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_17", $rt_wrapFunction2(cbgu_Pool__init_), "$obtain", $rt_wrapFunction0(cbgu_Pool_obtain), "$free", $rt_wrapFunction1(cbgu_Pool_free), "$reset2", $rt_wrapFunction1(cbgu_Pool_reset), "$discard", $rt_wrapFunction1(cbgu_Pool_discard), "$freeAll0", $rt_wrapFunction1(cbgu_Pool_freeAll)],
cbgu_ReflectionPool, 0, cbgu_Pool, [], 0, 3, 0, 0, ["$_init_16", $rt_wrapFunction3(cbgu_ReflectionPool__init_0), "$newObject", $rt_wrapFunction0(cbgu_ReflectionPool_newObject)],
jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined_computeValue)],
cbgm_Vector, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgg_Mesh$VertexDataType, 0, jl_Enum, [], 12, 3, 0, cbgg_Mesh$VertexDataType_$callClinit, 0,
cgxgbwp_Blob$1, 0, ji_InputStream, [], 0, 0, 0, 0, ["$_init_140", $rt_wrapFunction1(cgxgbwp_Blob$1__init_0), "$read1", $rt_wrapFunction0(cgxgbwp_Blob$1_read)],
cbgu_ObjectMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, cbgu_ObjectMap_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgu_ObjectMap__init_0), "$_init_15", $rt_wrapFunction2(cbgu_ObjectMap__init_2), "$place1", $rt_wrapFunction1(cbgu_ObjectMap_place), "$locateKey1", $rt_wrapFunction1(cbgu_ObjectMap_locateKey), "$put1", $rt_wrapFunction2(cbgu_ObjectMap_put), "$get1", $rt_wrapFunction1(cbgu_ObjectMap_get), "$clear", $rt_wrapFunction0(cbgu_ObjectMap_clear), "$containsKey", $rt_wrapFunction1(cbgu_ObjectMap_containsKey),
"$resize", $rt_wrapFunction1(cbgu_ObjectMap_resize)],
jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, ["$matcher", $rt_wrapFunction1(jur_Pattern_matcher), "$split1", $rt_wrapFunction2(jur_Pattern_split0), "$split", $rt_wrapFunction1(jur_Pattern_split), "$pattern0", $rt_wrapFunction0(jur_Pattern_pattern), "$groupCount0", $rt_wrapFunction0(jur_Pattern_groupCount), "$compCount0", $rt_wrapFunction0(jur_Pattern_compCount), "$consCount0", $rt_wrapFunction0(jur_Pattern_consCount)],
ji_IOException, 0, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_IOException__init_0)],
ji_UnsupportedEncodingException, 0, ji_IOException, [], 0, 3, 0, 0, 0,
jn_DoubleBufferOverByteBuffer, 0, jn_DoubleBufferImpl, [], 0, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_DoubleBufferOverByteBuffer__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement1", $rt_wrapFunction1(jn_DoubleBufferOverByteBuffer_getElement), "$putElement1", $rt_wrapFunction2(jn_DoubleBufferOverByteBuffer_putElement), "$readOnly", $rt_wrapFunction0(jn_DoubleBufferOverByteBuffer_readOnly)],
jur_PosAltGroupQuantifierSet, 0, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_18", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_PosAltGroupQuantifierSet_setNext)],
jn_BufferOverflowException, "BufferOverflowException", 16, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_BufferOverflowException__init_0)],
cgxgbw_WebApplication, 0, jl_Object, [cbg_Application, jl_Runnable], 0, 3, 0, 0, ["$_init_43", $rt_wrapFunction2(cgxgbw_WebApplication__init_), "$run", $rt_wrapFunction0(cgxgbw_WebApplication_run), "$getPreloader", $rt_wrapFunction0(cgxgbw_WebApplication_getPreloader), "$log0", $rt_wrapFunction2(cgxgbw_WebApplication_log), "$getType2", $rt_wrapFunction0(cgxgbw_WebApplication_getType)],
ju_Set, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
ju_AbstractSet, 0, ju_AbstractCollection, [ju_Set], 1, 3, 0, 0, 0,
cbgm_Shape2D, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Rectangle, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, cbgm_Rectangle_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Rectangle__init_0), "$_init_57", $rt_wrapFunction4(cbgm_Rectangle__init_2), "$set0", $rt_wrapFunction4(cbgm_Rectangle_set), "$getWidth0", $rt_wrapFunction0(cbgm_Rectangle_getWidth), "$getHeight0", $rt_wrapFunction0(cbgm_Rectangle_getHeight), "$hashCode0", $rt_wrapFunction0(cbgm_Rectangle_hashCode), "$equals", $rt_wrapFunction1(cbgm_Rectangle_equals)],
jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue)],
otciu_UnicodeHelper$Range, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_46", $rt_wrapFunction3(otciu_UnicodeHelper$Range__init_0)],
jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator$2__init_0), "$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$2_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$2_isAfterLineTerminator)],
jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator$1__init_0), "$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$1_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$1_isAfterLineTerminator)],
jl_NoClassDefFoundError, 0, jl_LinkageError, [], 0, 3, 0, 0, 0]);
$rt_metadata([jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue)],
cbgu_Collections, 0, jl_Object, [], 0, 3, 0, 0, 0,
otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_40", $rt_wrapFunction1(otci_CharFlow__init_0)],
jur_RangeSet, 0, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_96", $rt_wrapFunction1(jur_RangeSet__init_0), "$accepts", $rt_wrapFunction2(jur_RangeSet_accepts), "$first", $rt_wrapFunction1(jur_RangeSet_first), "$getChars0", $rt_wrapFunction0(jur_RangeSet_getChars)],
jur_UnicodeCategory, "UnicodeCategory", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_UnicodeCategory__init_0), "$contains", $rt_wrapFunction1(jur_UnicodeCategory_contains)],
jur_UnicodeCategoryScope, "UnicodeCategoryScope", 15, jur_UnicodeCategory, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_UnicodeCategoryScope__init_0), "$contains", $rt_wrapFunction1(jur_UnicodeCategoryScope_contains)],
cbggg_SpriteBatch, 0, jl_Object, [cbggg_Batch], 0, 3, 0, cbggg_SpriteBatch_$callClinit, ["$_init_0", $rt_wrapFunction0(cbggg_SpriteBatch__init_0), "$_init_105", $rt_wrapFunction2(cbggg_SpriteBatch__init_2), "$begin", $rt_wrapFunction0(cbggg_SpriteBatch_begin), "$end2", $rt_wrapFunction0(cbggg_SpriteBatch_end), "$setColor0", $rt_wrapFunction4(cbggg_SpriteBatch_setColor), "$draw3", $rt_wrapFunction4(cbggg_SpriteBatch_draw), "$draw0", $rt_wrapFunction3(cbggg_SpriteBatch_draw0), "$draw1", function(var_1, var_2,
var_3, var_4, var_5) { cbggg_SpriteBatch_draw1(this, var_1, var_2, var_3, var_4, var_5); }, "$flush0", $rt_wrapFunction0(cbggg_SpriteBatch_flush), "$setProjectionMatrix", $rt_wrapFunction1(cbggg_SpriteBatch_setProjectionMatrix), "$setupMatrices", $rt_wrapFunction0(cbggg_SpriteBatch_setupMatrices), "$switchTexture", $rt_wrapFunction1(cbggg_SpriteBatch_switchTexture), "$isBlendingEnabled", $rt_wrapFunction0(cbggg_SpriteBatch_isBlendingEnabled)],
cbgg_Mesh$1, 0, jl_Object, [], 32, 0, 0, cbgg_Mesh$1_$callClinit, 0,
otjt_Float32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_CharacterCodingException__init_0)],
jnc_UnmappableCharacterException, "UnmappableCharacterException", 17, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(jnc_UnmappableCharacterException__init_0), "$getMessage", $rt_wrapFunction0(jnc_UnmappableCharacterException_getMessage)],
jur_CharClass, "CharClass", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_CharClass__init_2), "$_init_87", $rt_wrapFunction2(jur_CharClass__init_3), "$_init_95", $rt_wrapFunction3(jur_CharClass__init_4), "$add", $rt_wrapFunction1(jur_CharClass_add), "$add6", $rt_wrapFunction1(jur_CharClass_add0), "$add0", $rt_wrapFunction2(jur_CharClass_add1), "$union", $rt_wrapFunction1(jur_CharClass_union), "$intersection", $rt_wrapFunction1(jur_CharClass_intersection), "$contains", $rt_wrapFunction1(jur_CharClass_contains),
"$getBits", $rt_wrapFunction0(jur_CharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_CharClass_getLowHighSurrogates), "$getInstance", $rt_wrapFunction0(jur_CharClass_getInstance), "$toString", $rt_wrapFunction0(jur_CharClass_toString), "$hasUCI", $rt_wrapFunction0(jur_CharClass_hasUCI)],
jn_BufferUnderflowException, "BufferUnderflowException", 16, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_BufferUnderflowException__init_0)],
cbgggf_FreeTypeFontGenerator, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, cbgggf_FreeTypeFontGenerator_$callClinit, ["$_init_34", $rt_wrapFunction1(cbgggf_FreeTypeFontGenerator__init_0), "$_init_114", $rt_wrapFunction2(cbgggf_FreeTypeFontGenerator__init_2), "$generateData", $rt_wrapFunction1(cbgggf_FreeTypeFontGenerator_generateData), "$setPixelSizes", $rt_wrapFunction2(cbgggf_FreeTypeFontGenerator_setPixelSizes), "$generateData0", $rt_wrapFunction2(cbgggf_FreeTypeFontGenerator_generateData0), "$createGlyph",
function(var_1, var_2, var_3, var_4, var_5, var_6) { return cbgggf_FreeTypeFontGenerator_createGlyph(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$dispose", $rt_wrapFunction0(cbgggf_FreeTypeFontGenerator_dispose)],
otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcit_FloatAnalyzer$Result__init_0)],
jur_UCIDecomposedCharSet, 0, jur_DecomposedCharSet, [], 0, 0, 0, 0, ["$_init_31", $rt_wrapFunction2(jur_UCIDecomposedCharSet__init_0)],
jn_FloatBufferOverByteBufferLittleEndian, 0, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_FloatBufferOverByteBufferLittleEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement3", $rt_wrapFunction1(jn_FloatBufferOverByteBufferLittleEndian_getElement), "$putElement3", $rt_wrapFunction2(jn_FloatBufferOverByteBufferLittleEndian_putElement)],
jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_141", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1_contains)],
jnc_MalformedInputException, "MalformedInputException", 17, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(jnc_MalformedInputException__init_0), "$getMessage", $rt_wrapFunction0(jnc_MalformedInputException_getMessage)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue)],
cbgg_Pixmap$Blending, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Blending_$callClinit, 0,
cbgg_Pixmap$Filter, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Filter_$callClinit, 0,
cgxgbws_SoundManagerCallbackWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
jl_CloneNotSupportedException, "CloneNotSupportedException", 18, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_CloneNotSupportedException__init_0)],
cbgu_ScreenUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
otjt_Uint8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
jl_Long, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Long_$callClinit, 0,
cgxgbwdt_TypedArrays, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbwdt_TypedArrays__init_)],
cgxgbws_SoundManagerWrapper, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtdi_TeaSoundManager, 0, jl_Object, [cgxgbws_SoundManagerWrapper], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtdi_TeaSoundManager__init_0), "$setup", $rt_wrapFunction2(cgxgbtdi_TeaSoundManager_setup)],
cbgggf_FreeType, 0, jl_Object, [], 0, 3, 0, cbgggf_FreeType_$callClinit, 0,
jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_SequenceSet$IntHash__init_0), "$put5", $rt_wrapFunction2(jur_SequenceSet$IntHash_put), "$get4", $rt_wrapFunction1(jur_SequenceSet$IntHash_get)],
otjc_JSArrayReader, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otjc_JSArray, 0, jl_Object, [otjc_JSArrayReader], 1, 3, 0, 0, ["$get$exported$0", $rt_wrapFunction1(otjc_JSArray_get$exported$0), "$getLength$exported$1", $rt_wrapFunction0(otjc_JSArray_getLength$exported$1)],
cbggg_TextureRegion, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_117", $rt_wrapFunction1(cbggg_TextureRegion__init_0), "$setRegion", $rt_wrapFunction4(cbggg_TextureRegion_setRegion), "$setRegion0", $rt_wrapFunction4(cbggg_TextureRegion_setRegion0), "$getTexture", $rt_wrapFunction0(cbggg_TextureRegion_getTexture), "$getRegionWidth", $rt_wrapFunction0(cbggg_TextureRegion_getRegionWidth), "$getRegionHeight", $rt_wrapFunction0(cbggg_TextureRegion_getRegionHeight)],
jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit_computeValue)],
cbggg_BitmapFont, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_77", $rt_wrapFunction3(cbggg_BitmapFont__init_0), "$load1", $rt_wrapFunction1(cbggg_BitmapFont_load), "$draw", $rt_wrapFunction4(cbggg_BitmapFont_draw), "$getRegions", $rt_wrapFunction0(cbggg_BitmapFont_getRegions), "$getLineHeight", $rt_wrapFunction0(cbggg_BitmapFont_getLineHeight), "$getCapHeight", $rt_wrapFunction0(cbggg_BitmapFont_getCapHeight), "$newFontCache", $rt_wrapFunction0(cbggg_BitmapFont_newFontCache)],
ju_EnumSet, 0, ju_AbstractSet, [jl_Cloneable, ji_Serializable], 1, 3, 0, 0, 0,
jur_AbstractCharClass$1, "AbstractCharClass$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_25", $rt_wrapFunction2(jur_AbstractCharClass$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$1_contains)],
jur_AbstractCharClass$2, "AbstractCharClass$2", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_26", $rt_wrapFunction3(jur_AbstractCharClass$2__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$2_contains)],
cbgg_Pixmap$Format, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Format_$callClinit, 0,
jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase_computeValue)],
otjde_GamepadEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
jur_PossessiveCompositeQuantifierSet, 0, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$_init_93", $rt_wrapFunction4(jur_PossessiveCompositeQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PossessiveCompositeQuantifierSet_matches)],
cgxgbw_WebApplicationConfiguration, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbw_WebApplicationConfiguration__init_0)],
cgxgbt_TeaApplicationConfiguration, 0, cgxgbw_WebApplicationConfiguration, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(cgxgbt_TeaApplicationConfiguration__init_0)],
otjde_LoadEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
cbg_Graphics, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_103", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains)],
jur_CharClass$18, "CharClass$18", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_113", $rt_wrapFunction2(jur_CharClass$18__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$18_contains), "$toString", $rt_wrapFunction0(jur_CharClass$18_toString)]]);
$rt_metadata([jur_PossessiveGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_18", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet_matches)],
cbggg_BitmapFontCache, 0, jl_Object, [], 0, 3, 0, cbggg_BitmapFontCache_$callClinit, ["$_init_119", $rt_wrapFunction2(cbggg_BitmapFontCache__init_0), "$draw2", $rt_wrapFunction1(cbggg_BitmapFontCache_draw), "$clear", $rt_wrapFunction0(cbggg_BitmapFontCache_clear), "$addText", $rt_wrapFunction3(cbggg_BitmapFontCache_addText), "$addText0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { return cbggg_BitmapFontCache_addText0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8,
var_9); }, "$addText1", $rt_wrapFunction3(cbggg_BitmapFontCache_addText1)],
jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_110", $rt_wrapFunction2(jur_CharClass$13__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$13_contains)],
cbggg_PixmapPacker, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, cbggg_PixmapPacker_$callClinit, ["$_init_75", function(var_1, var_2, var_3, var_4, var_5) { cbggg_PixmapPacker__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$_init_115", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbggg_PixmapPacker__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$_init_122", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { cbggg_PixmapPacker__init_4(this, var_1, var_2, var_3, var_4,
var_5, var_6, var_7, var_8); }, "$pack", $rt_wrapFunction1(cbggg_PixmapPacker_pack), "$pack0", $rt_wrapFunction2(cbggg_PixmapPacker_pack0), "$getPages", $rt_wrapFunction0(cbggg_PixmapPacker_getPages), "$getRect", $rt_wrapFunction1(cbggg_PixmapPacker_getRect), "$dispose", $rt_wrapFunction0(cbggg_PixmapPacker_dispose), "$updateTextureRegions", $rt_wrapFunction4(cbggg_PixmapPacker_updateTextureRegions), "$updatePageTextures", $rt_wrapFunction3(cbggg_PixmapPacker_updatePageTextures), "$setPackToTexture", $rt_wrapFunction1(cbggg_PixmapPacker_setPackToTexture),
"$getTransparentColor", $rt_wrapFunction0(cbggg_PixmapPacker_getTransparentColor), "$setTransparentColor", $rt_wrapFunction1(cbggg_PixmapPacker_setTransparentColor)],
jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_110", $rt_wrapFunction2(jur_CharClass$12__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$12_contains)],
jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_109", $rt_wrapFunction4(jur_CharClass$11__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$11_contains)],
otci_Base46, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_109", $rt_wrapFunction4(jur_CharClass$10__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$10_contains)],
ju_GenericEnumSet, 0, ju_EnumSet, [], 0, 0, 0, 0, 0,
jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_109", $rt_wrapFunction4(jur_CharClass$17__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$17_contains)],
jur_UCISequenceSet, 0, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_88", $rt_wrapFunction1(jur_UCISequenceSet__init_0), "$accepts", $rt_wrapFunction2(jur_UCISequenceSet_accepts)],
jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_109", $rt_wrapFunction4(jur_CharClass$16__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$16_contains)],
jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_112", $rt_wrapFunction3(jur_CharClass$15__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$15_contains)],
jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_84", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1_contains)],
jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_112", $rt_wrapFunction3(jur_CharClass$14__init_0), "$contains", $rt_wrapFunction1(jur_CharClass$14_contains)],
otjt_Int8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
jl_StringBuilder, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(jl_StringBuilder__init_1), "$_init_0", $rt_wrapFunction0(jl_StringBuilder__init_2), "$append9", $rt_wrapFunction1(jl_StringBuilder_append), "$append", $rt_wrapFunction1(jl_StringBuilder_append0), "$append0", $rt_wrapFunction1(jl_StringBuilder_append1), "$append10", $rt_wrapFunction1(jl_StringBuilder_append2), "$append2", $rt_wrapFunction1(jl_StringBuilder_append3), "$append8", $rt_wrapFunction1(jl_StringBuilder_append4),
"$append18", $rt_wrapFunction3(jl_StringBuilder_append5), "$append7", $rt_wrapFunction1(jl_StringBuilder_append6), "$insert14", $rt_wrapFunction2(jl_StringBuilder_insert), "$insert13", $rt_wrapFunction2(jl_StringBuilder_insert0), "$insert10", $rt_wrapFunction4(jl_StringBuilder_insert1), "$insert11", $rt_wrapFunction2(jl_StringBuilder_insert2), "$insert12", $rt_wrapFunction2(jl_StringBuilder_insert3), "$delete0", $rt_wrapFunction2(jl_StringBuilder_delete), "$deleteCharAt", $rt_wrapFunction1(jl_StringBuilder_deleteCharAt),
"$insert15", $rt_wrapFunction2(jl_StringBuilder_insert4), "$setLength", $rt_wrapFunction1(jl_StringBuilder_setLength), "$getChars", $rt_wrapFunction4(jl_StringBuilder_getChars), "$insert6", $rt_wrapFunction4(jl_StringBuilder_insert5), "$append3", $rt_wrapFunction3(jl_StringBuilder_append7), "$length", $rt_wrapFunction0(jl_StringBuilder_length), "$toString", $rt_wrapFunction0(jl_StringBuilder_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuilder_ensureCapacity), "$insert", $rt_wrapFunction2(jl_StringBuilder_insert6),
"$insert5", $rt_wrapFunction2(jl_StringBuilder_insert7), "$insert4", $rt_wrapFunction2(jl_StringBuilder_insert8), "$insert2", $rt_wrapFunction2(jl_StringBuilder_insert9), "$insert0", $rt_wrapFunction2(jl_StringBuilder_insert10)],
cbgf_FileHandle, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgf_FileHandle__init_0)],
cgxgbw_WebFileHandle, 0, cbgf_FileHandle, [], 0, 3, 0, 0, ["$_init_130", $rt_wrapFunction3(cgxgbw_WebFileHandle__init_0), "$path", $rt_wrapFunction0(cgxgbw_WebFileHandle_path), "$name5", $rt_wrapFunction0(cgxgbw_WebFileHandle_name), "$nameWithoutExtension", $rt_wrapFunction0(cgxgbw_WebFileHandle_nameWithoutExtension), "$read2", $rt_wrapFunction0(cgxgbw_WebFileHandle_read), "$length5", $rt_wrapFunction0(cgxgbw_WebFileHandle_length)],
jur_CompositeRangeSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_97", $rt_wrapFunction2(jur_CompositeRangeSet__init_0), "$matches", $rt_wrapFunction3(jur_CompositeRangeSet_matches), "$setNext", $rt_wrapFunction1(jur_CompositeRangeSet_setNext), "$hasConsumed", $rt_wrapFunction1(jur_CompositeRangeSet_hasConsumed), "$first", $rt_wrapFunction1(jur_CompositeRangeSet_first)],
ju_ConcurrentModificationException, "ConcurrentModificationException", 14, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_ConcurrentModificationException__init_0)],
ju_Hashtable$1, 0, jl_Object, [ju_Enumeration], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Hashtable$1__init_0)],
ju_Hashtable$2, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Hashtable$2__init_0)],
ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, 0, ["$_init_74", $rt_wrapFunction2(ju_MapEntry__init_0)],
ju_Hashtable$Entry, 0, ju_MapEntry, [], 0, 0, 0, 0, ["$_init_74", $rt_wrapFunction2(ju_Hashtable$Entry__init_0), "$getKeyHash", $rt_wrapFunction0(ju_Hashtable$Entry_getKeyHash), "$equalsKey", $rt_wrapFunction2(ju_Hashtable$Entry_equalsKey)],
jur_FinalSet, 0, jur_FSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_FinalSet__init_0), "$matches", $rt_wrapFunction3(jur_FinalSet_matches)],
jur_EmptySet, 0, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_14", $rt_wrapFunction1(jur_EmptySet__init_0), "$accepts", $rt_wrapFunction2(jur_EmptySet_accepts), "$find", $rt_wrapFunction3(jur_EmptySet_find), "$findBack", $rt_wrapFunction4(jur_EmptySet_findBack), "$hasConsumed", $rt_wrapFunction1(jur_EmptySet_hasConsumed)],
cgxgetf_FreeTypePackTest$FontStyle, 0, jl_Enum, [], 12, 0, 0, cgxgetf_FreeTypePackTest$FontStyle_$callClinit, 0,
cbgg_VertexAttributes, 0, jl_Object, [jl_Iterable, jl_Comparable], 4, 3, 0, 0, ["$_init_127", $rt_wrapFunction1(cbgg_VertexAttributes__init_0), "$size", $rt_wrapFunction0(cbgg_VertexAttributes_size), "$get10", $rt_wrapFunction1(cbgg_VertexAttributes_get)],
cbggg_TextureAtlas$AtlasRegion, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
jn_FloatBufferOverByteBufferBigEndian, 0, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_FloatBufferOverByteBufferBigEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement3", $rt_wrapFunction1(jn_FloatBufferOverByteBufferBigEndian_getElement), "$putElement3", $rt_wrapFunction2(jn_FloatBufferOverByteBufferBigEndian_putElement)],
cbggg_BitmapFont$BitmapFontData, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_BitmapFont$BitmapFontData__init_0), "$setGlyphRegion", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData_setGlyphRegion), "$setGlyph", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData_setGlyph), "$getGlyph0", $rt_wrapFunction1(cbggg_BitmapFont$BitmapFontData_getGlyph), "$getGlyphs", function(var_1, var_2, var_3, var_4, var_5) { cbggg_BitmapFont$BitmapFontData_getGlyphs(this, var_1, var_2, var_3, var_4, var_5);
}, "$getWrapIndex", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData_getWrapIndex), "$isBreakChar", $rt_wrapFunction1(cbggg_BitmapFont$BitmapFontData_isBreakChar), "$isWhitespace0", $rt_wrapFunction1(cbggg_BitmapFont$BitmapFontData_isWhitespace)],
cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData, 0, cbggg_BitmapFont$BitmapFontData, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData__init_0), "$getGlyph0", $rt_wrapFunction1(cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyph), "$getGlyphs", function(var_1, var_2, var_3, var_4, var_5) { cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyphs(this, var_1, var_2, var_3, var_4, var_5); }],
jl_NoSuchMethodError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_NoSuchMethodError__init_0)],
jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII_computeValue)],
cbggg_GlyphLayout, "GlyphLayout", 12, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbggg_GlyphLayout_$callClinit, ["$_init_0", $rt_wrapFunction0(cbggg_GlyphLayout__init_), "$_init_156", $rt_wrapFunction2(cbggg_GlyphLayout__init_0), "$_init_157", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbggg_GlyphLayout__init_1(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$_init_158", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbggg_GlyphLayout__init_2(this, var_1, var_2, var_3,
var_4, var_5, var_6, var_7, var_8, var_9); }, "$setText0", $rt_wrapFunction2(cbggg_GlyphLayout_setText), "$setText1", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbggg_GlyphLayout_setText0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setText", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbggg_GlyphLayout_setText1(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$reset0", $rt_wrapFunction0(cbggg_GlyphLayout_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout_toString)],
cbggg_PixmapPacker$Page$1, 0, cbgg_Texture, [], 0, 0, 0, 0, ["$_init_21", $rt_wrapFunction2(cbggg_PixmapPacker$Page$1__init_0)],
cbgg_TextureData$Factory, 0, jl_Object, [], 0, 3, 0, 0, 0,
ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_72", $rt_wrapFunction1(ju_AbstractList$1__init_0), "$hasNext", $rt_wrapFunction0(ju_AbstractList$1_hasNext), "$next0", $rt_wrapFunction0(ju_AbstractList$1_next)],
jur_Quantifier, "Quantifier", 15, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction2(jur_Quantifier__init_0), "$min1", $rt_wrapFunction0(jur_Quantifier_min), "$max1", $rt_wrapFunction0(jur_Quantifier_max), "$toString", $rt_wrapFunction0(jur_Quantifier_toString)],
jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_139", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1_contains)],
ju_Random, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Random__init_0)],
cbgg_GL20, 0, jl_Object, [], 3, 3, 0, 0, 0,
otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0, 0,
cgxgetf_FreeTypePackTest$FontSize, 0, jl_Enum, [], 12, 0, 0, cgxgetf_FreeTypePackTest$FontSize_$callClinit, 0,
jur_PossessiveQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_42", $rt_wrapFunction3(jur_PossessiveQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PossessiveQuantifierSet_matches)],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_150", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains)],
jl_Thread$UncaughtExceptionHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_DefaultUncaughtExceptionHandler, 0, jl_Object, [jl_Thread$UncaughtExceptionHandler], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_DefaultUncaughtExceptionHandler__init_0)]]);
$rt_metadata([jl_InstantiationException, "InstantiationException", 18, jl_ReflectiveOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_InstantiationException__init_0)],
jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_30", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1_contains)],
cgxgbtdi_TeaWindow, 0, jl_Object, [cgxgbwd_WindowWrapper, otjb_AnimationFrameCallback], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtdi_TeaWindow__init_0), "$getDocument", $rt_wrapFunction0(cgxgbtdi_TeaWindow_getDocument), "$requestAnimationFrame", $rt_wrapFunction1(cgxgbtdi_TeaWindow_requestAnimationFrame), "$onAnimationFrame", $rt_wrapFunction1(cgxgbtdi_TeaWindow_onAnimationFrame), "$getLocation", $rt_wrapFunction0(cgxgbtdi_TeaWindow_getLocation), "$onAnimationFrame$exported$0", $rt_wrapFunction1(cgxgbtdi_TeaWindow_onAnimationFrame$exported$0)],
jur_ReluctantQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_42", $rt_wrapFunction3(jur_ReluctantQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_ReluctantQuantifierSet_matches)],
cbgur_ArrayReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgggf_FreeType$1, 0, cgxgbw_AssetLoaderListener, [], 4, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggf_FreeType$1__init_0), "$onSuccess0", $rt_wrapFunction2(cbgggf_FreeType$1_onSuccess), "$onFailure", $rt_wrapFunction1(cbgggf_FreeType$1_onFailure)],
cbgg_Mesh, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, cbgg_Mesh_$callClinit, ["$_init_106", function(var_1, var_2, var_3, var_4, var_5) { cbgg_Mesh__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$_init_126", function(var_1, var_2, var_3, var_4, var_5) { cbgg_Mesh__init_2(this, var_1, var_2, var_3, var_4, var_5); }, "$setVertices", $rt_wrapFunction3(cbgg_Mesh_setVertices), "$setIndices", $rt_wrapFunction1(cbgg_Mesh_setIndices), "$bind1", $rt_wrapFunction1(cbgg_Mesh_bind), "$bind0", $rt_wrapFunction2(cbgg_Mesh_bind0),
"$unbind1", $rt_wrapFunction1(cbgg_Mesh_unbind), "$unbind", $rt_wrapFunction2(cbgg_Mesh_unbind0), "$render0", $rt_wrapFunction4(cbgg_Mesh_render), "$render1", function(var_1, var_2, var_3, var_4, var_5) { cbgg_Mesh_render0(this, var_1, var_2, var_3, var_4, var_5); }, "$getIndicesBuffer", $rt_wrapFunction0(cbgg_Mesh_getIndicesBuffer)],
cgxgbw_WebFiles, 0, jl_Object, [cbg_Files], 0, 3, 0, 0, ["$_init_101", $rt_wrapFunction1(cgxgbw_WebFiles__init_0), "$getFileHandle", $rt_wrapFunction2(cgxgbw_WebFiles_getFileHandle), "$internal", $rt_wrapFunction1(cgxgbw_WebFiles_internal)],
ju_HashMap$HashEntry, 0, ju_MapEntry, [], 0, 0, 0, 0, ["$_init_151", $rt_wrapFunction2(ju_HashMap$HashEntry__init_0)],
cbgu_ObjectSet, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
jur_EOISet, 0, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_EOISet__init_0), "$matches", $rt_wrapFunction3(jur_EOISet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOISet_hasConsumed)],
cbgg_FreeTypePixmap, 0, cbgg_Pixmap, [], 0, 3, 0, 0, ["$_init_20", $rt_wrapFunction3(cbgg_FreeTypePixmap__init_), "$setPixelsNull", $rt_wrapFunction0(cbgg_FreeTypePixmap_setPixelsNull), "$getRealPixels", $rt_wrapFunction0(cbgg_FreeTypePixmap_getRealPixels), "$putPixelsBack", $rt_wrapFunction1(cbgg_FreeTypePixmap_putPixelsBack)],
cbgg_FreeTypeUtil, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_ObjectIntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_ObjectIntMap__init_0), "$_init_15", $rt_wrapFunction2(cbgu_ObjectIntMap__init_2), "$place1", $rt_wrapFunction1(cbgu_ObjectIntMap_place), "$locateKey1", $rt_wrapFunction1(cbgu_ObjectIntMap_locateKey), "$put6", $rt_wrapFunction2(cbgu_ObjectIntMap_put), "$get6", $rt_wrapFunction2(cbgu_ObjectIntMap_get), "$resize", $rt_wrapFunction1(cbgu_ObjectIntMap_resize)],
cgxgbwp_AssetDownloadImpl$5$1, 0, jl_Object, [cgxgbwd_EventListenerWrapper], 0, 0, 0, 0, ["$_init_142", $rt_wrapFunction3(cgxgbwp_AssetDownloadImpl$5$1__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$5$1_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$5$1_handleEvent$exported$0)],
jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper_computeValue)],
jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_132", function(var_1, var_2, var_3, var_4, var_5) { jn_ByteBuffer__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$get14", $rt_wrapFunction3(jn_ByteBuffer_get), "$get7", $rt_wrapFunction1(jn_ByteBuffer_get0), "$put15", $rt_wrapFunction1(jn_ByteBuffer_put0), "$put0", $rt_wrapFunction3(jn_ByteBuffer_put1), "$put", $rt_wrapFunction1(jn_ByteBuffer_put), "$hasArray", $rt_wrapFunction0(jn_ByteBuffer_hasArray), "$array", $rt_wrapFunction0(jn_ByteBuffer_array),
"$order", $rt_wrapFunction1(jn_ByteBuffer_order), "$clear2", $rt_wrapFunction0(jn_ByteBuffer_clear), "$flip", $rt_wrapFunction0(jn_ByteBuffer_flip), "$limit4", $rt_wrapFunction1(jn_ByteBuffer_limit), "$position1", $rt_wrapFunction1(jn_ByteBuffer_position), "$flip0", $rt_wrapFunction0(jn_ByteBuffer_flip0), "$limit0", $rt_wrapFunction1(jn_ByteBuffer_limit0), "$position2", $rt_wrapFunction1(jn_ByteBuffer_position0)],
jn_ByteBufferImpl, 0, jn_ByteBuffer, [], 0, 0, 0, 0, ["$_init_28", $rt_wrapFunction2(jn_ByteBufferImpl__init_1), "$_init_131", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { jn_ByteBufferImpl__init_2(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$get11", $rt_wrapFunction1(jn_ByteBufferImpl_get), "$isReadOnly", $rt_wrapFunction0(jn_ByteBufferImpl_isReadOnly), "$asCharBuffer", $rt_wrapFunction0(jn_ByteBufferImpl_asCharBuffer), "$asShortBuffer", $rt_wrapFunction0(jn_ByteBufferImpl_asShortBuffer),
"$getInt", $rt_wrapFunction1(jn_ByteBufferImpl_getInt), "$putInt", $rt_wrapFunction2(jn_ByteBufferImpl_putInt), "$asIntBuffer", $rt_wrapFunction0(jn_ByteBufferImpl_asIntBuffer), "$asLongBuffer", $rt_wrapFunction0(jn_ByteBufferImpl_asLongBuffer), "$asFloatBuffer", $rt_wrapFunction0(jn_ByteBufferImpl_asFloatBuffer), "$asDoubleBuffer", $rt_wrapFunction0(jn_ByteBufferImpl_asDoubleBuffer)],
cbgm_Plane, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_133", $rt_wrapFunction2(cbgm_Plane__init_0), "$set10", $rt_wrapFunction3(cbgm_Plane_set)],
cbgggf_FreeType$Size, 0, cbgggf_FreeType$Pointer, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgggf_FreeType$Size__init_0), "$getMetrics", $rt_wrapFunction0(cbgggf_FreeType$Size_getMetrics)],
cbgm_Frustum, 0, jl_Object, [], 0, 3, 0, cbgm_Frustum_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Frustum__init_0), "$update0", $rt_wrapFunction1(cbgm_Frustum_update)],
cbgmc_Ray, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_Ray_$callClinit, ["$_init_63", $rt_wrapFunction2(cbgmc_Ray__init_0)],
jnc_BufferUnderflowException, "BufferUnderflowException", 17, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_BufferUnderflowException__init_0)],
jur_MultiLineSOLSet, 0, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_94", $rt_wrapFunction1(jur_MultiLineSOLSet__init_0), "$matches", $rt_wrapFunction3(jur_MultiLineSOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineSOLSet_hasConsumed)],
cbgggf_FreeTypeFontGenerator$Hinting, 0, jl_Enum, [], 12, 3, 0, cbgggf_FreeTypeFontGenerator$Hinting_$callClinit, 0,
otjc_JSString, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cbgg_Pixmap$2, 0, jl_Object, [], 32, 0, 0, cbgg_Pixmap$2_$callClinit, 0,
cbggg_VertexBufferObject, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$_init_128", $rt_wrapFunction3(cbggg_VertexBufferObject__init_0), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObject_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObject_bind), "$unbind", $rt_wrapFunction2(cbggg_VertexBufferObject_unbind)],
cbggg_VertexArray, 0, cbggg_VertexBufferObject, [], 0, 3, 0, 0, ["$_init_129", $rt_wrapFunction2(cbggg_VertexArray__init_0)],
jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower_computeValue)],
oti_AsyncCallback, 0, jl_Object, [], 3, 3, 0, 0, 0,
otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cbgggf_FreeType$Library, 0, cbgggf_FreeType$Pointer, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgggf_FreeType$Library__init_0), "$dispose", $rt_wrapFunction0(cbgggf_FreeType$Library_dispose), "$newFace", $rt_wrapFunction2(cbgggf_FreeType$Library_newFace), "$newMemoryFace", $rt_wrapFunction2(cbgggf_FreeType$Library_newMemoryFace), "$createStroker", $rt_wrapFunction0(cbgggf_FreeType$Library_createStroker)],
cbggg_PixmapTextureData, 0, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, ["$_init_22", function(var_1, var_2, var_3, var_4, var_5) { cbggg_PixmapTextureData__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$disposePixmap", $rt_wrapFunction0(cbggg_PixmapTextureData_disposePixmap), "$consumePixmap", $rt_wrapFunction0(cbggg_PixmapTextureData_consumePixmap), "$getWidth", $rt_wrapFunction0(cbggg_PixmapTextureData_getWidth), "$getHeight", $rt_wrapFunction0(cbggg_PixmapTextureData_getHeight), "$getFormat", $rt_wrapFunction0(cbggg_PixmapTextureData_getFormat),
"$useMipMaps0", $rt_wrapFunction0(cbggg_PixmapTextureData_useMipMaps), "$isManaged", $rt_wrapFunction0(cbggg_PixmapTextureData_isManaged), "$getType", $rt_wrapFunction0(cbggg_PixmapTextureData_getType), "$consumeCustomData", $rt_wrapFunction1(cbggg_PixmapTextureData_consumeCustomData), "$isPrepared0", $rt_wrapFunction0(cbggg_PixmapTextureData_isPrepared), "$prepare", $rt_wrapFunction0(cbggg_PixmapTextureData_prepare)],
jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase_computeValue)],
cbggg_IndexBufferObjectSubData, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$_init_67", $rt_wrapFunction2(cbggg_IndexBufferObjectSubData__init_0), "$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumMaxIndices), "$setIndices0", $rt_wrapFunction3(cbggg_IndexBufferObjectSubData_setIndices), "$getBuffer0", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_bind),
"$unbind0", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_unbind)],
jur_PreviousMatch, 0, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_PreviousMatch__init_0), "$matches", $rt_wrapFunction3(jur_PreviousMatch_matches), "$hasConsumed", $rt_wrapFunction1(jur_PreviousMatch_hasConsumed)],
cbggg_PixmapPacker$PixmapPackerRectangle, 0, cbgm_Rectangle, [], 0, 3, 0, 0, ["$_init_123", $rt_wrapFunction4(cbggg_PixmapPacker$PixmapPackerRectangle__init_1), "$_init_124", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { cbggg_PixmapPacker$PixmapPackerRectangle__init_2(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }],
jur_NonCapFSet, 0, jur_FSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_NonCapFSet__init_), "$matches", $rt_wrapFunction3(jur_NonCapFSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_NonCapFSet_hasConsumed)],
cbgm_MathUtils, 0, jl_Object, [], 4, 3, 0, cbgm_MathUtils_$callClinit, 0,
cbg_ApplicationLogger, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_UCISupplCharSet, 0, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_UCISupplCharSet__init_0), "$accepts", $rt_wrapFunction2(jur_UCISupplCharSet_accepts)],
jl_System, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction2(jur_AbstractCharClass$LazyRange__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyRange_computeValue)],
jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit_computeValue)],
jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, 0, ["$find1", $rt_wrapFunction1(jur_Matcher_find0), "$find0", $rt_wrapFunction0(jur_Matcher_find), "$start0", $rt_wrapFunction1(jur_Matcher_start0), "$end", $rt_wrapFunction1(jur_Matcher_end0), "$start10", $rt_wrapFunction0(jur_Matcher_start), "$end0", $rt_wrapFunction0(jur_Matcher_end), "$hasTransparentBounds", $rt_wrapFunction0(jur_Matcher_hasTransparentBounds), "$_init_85", $rt_wrapFunction2(jur_Matcher__init_0)],
jur_DotAllSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_DotAllSet__init_0), "$matches", $rt_wrapFunction3(jur_DotAllSet_matches), "$setNext", $rt_wrapFunction1(jur_DotAllSet_setNext), "$getType0", $rt_wrapFunction0(jur_DotAllSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotAllSet_hasConsumed)],
jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 15, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_120", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1__init_0), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1_contains)],
jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$_init_2", $rt_wrapFunction1(jl_Object$monitorExit$lambda$_8_0__init_0), "$run", $rt_wrapFunction0(jl_Object$monitorExit$lambda$_8_0_run)],
jur_UCISupplRangeSet, 0, jur_SupplRangeSet, [], 0, 0, 0, 0, ["$_init_96", $rt_wrapFunction1(jur_UCISupplRangeSet__init_0), "$contains", $rt_wrapFunction1(jur_UCISupplRangeSet_contains)]]);
$rt_metadata([jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase_computeValue)],
jur_HangulDecomposedCharSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_89", $rt_wrapFunction2(jur_HangulDecomposedCharSet__init_0), "$setNext", $rt_wrapFunction1(jur_HangulDecomposedCharSet_setNext), "$matches", $rt_wrapFunction3(jur_HangulDecomposedCharSet_matches), "$first", $rt_wrapFunction1(jur_HangulDecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HangulDecomposedCharSet_hasConsumed)],
cgxgbw_WebGL20, 0, jl_Object, [cbgg_GL20], 0, 3, 0, 0, ["$_init_155", $rt_wrapFunction1(cgxgbw_WebGL20__init_0), "$copy3", $rt_wrapFunction1(cgxgbw_WebGL20_copy), "$copy4", $rt_wrapFunction1(cgxgbw_WebGL20_copy0), "$copy2", $rt_wrapFunction1(cgxgbw_WebGL20_copy1), "$glBindTexture", $rt_wrapFunction2(cgxgbw_WebGL20_glBindTexture), "$glClear", $rt_wrapFunction1(cgxgbw_WebGL20_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbw_WebGL20_glClearColor), "$glDepthMask", $rt_wrapFunction1(cgxgbw_WebGL20_glDepthMask),
"$glDisable", $rt_wrapFunction1(cgxgbw_WebGL20_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbw_WebGL20_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbw_WebGL20_glDrawElements), "$glEnable", $rt_wrapFunction1(cgxgbw_WebGL20_glEnable), "$glGenTexture", $rt_wrapFunction0(cgxgbw_WebGL20_glGenTexture), "$glPixelStorei", $rt_wrapFunction2(cgxgbw_WebGL20_glPixelStorei), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbw_WebGL20_glTexImage2D(this, var_1,
var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbw_WebGL20_glTexParameterf), "$glTexSubImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbw_WebGL20_glTexSubImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glViewport", $rt_wrapFunction4(cgxgbw_WebGL20_glViewport), "$glAttachShader", $rt_wrapFunction2(cgxgbw_WebGL20_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbw_WebGL20_glBindBuffer),
"$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbw_WebGL20_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbw_WebGL20_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbw_WebGL20_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbw_WebGL20_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbw_WebGL20_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbw_WebGL20_glCreateShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbw_WebGL20_glDisableVertexAttribArray),
"$glDrawElements0", $rt_wrapFunction4(cgxgbw_WebGL20_glDrawElements0), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbw_WebGL20_glEnableVertexAttribArray), "$glGenBuffer", $rt_wrapFunction0(cgxgbw_WebGL20_glGenBuffer), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbw_WebGL20_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbw_WebGL20_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbw_WebGL20_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbw_WebGL20_glGetAttribLocation),
"$glGetFloatv", $rt_wrapFunction2(cgxgbw_WebGL20_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbw_WebGL20_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbw_WebGL20_glGetProgramInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbw_WebGL20_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbw_WebGL20_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbw_WebGL20_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbw_WebGL20_glLinkProgram), "$glShaderSource",
$rt_wrapFunction2(cgxgbw_WebGL20_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbw_WebGL20_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbw_WebGL20_glUniform1i), "$glUniformMatrix4fv", function(var_1, var_2, var_3, var_4, var_5) { cgxgbw_WebGL20_glUniformMatrix4fv(this, var_1, var_2, var_3, var_4, var_5); }, "$glUseProgram", $rt_wrapFunction1(cgxgbw_WebGL20_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbw_WebGL20_glVertexAttribPointer(this,
var_1, var_2, var_3, var_4, var_5, var_6); }],
cgxgbwp_Blob, 0, jl_Object, [], 4, 3, 0, 0, ["$_init_143", $rt_wrapFunction1(cgxgbwp_Blob__init_0), "$length", $rt_wrapFunction0(cgxgbwp_Blob_length), "$get11", $rt_wrapFunction1(cgxgbwp_Blob_get), "$read2", $rt_wrapFunction0(cgxgbwp_Blob_read), "$toBase64", $rt_wrapFunction0(cgxgbwp_Blob_toBase64)],
jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct_computeValue)],
cbggg_VertexBufferObjectWithVAO, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, cbggg_VertexBufferObjectWithVAO_$callClinit, ["$_init_128", $rt_wrapFunction3(cbggg_VertexBufferObjectWithVAO__init_0), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObjectWithVAO_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_bind), "$unbind", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_unbind)],
otcic_Console, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_GlyphLayout$GlyphRun, "GlyphLayout$GlyphRun", 12, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun__init_), "$reset0", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_toString)],
jlr_InvocationTargetException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
cbggg_PixmapPacker$SkylineStrategy, 0, jl_Object, [cbggg_PixmapPacker$PackStrategy], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_PixmapPacker$SkylineStrategy__init_0), "$pack1", $rt_wrapFunction3(cbggg_PixmapPacker$SkylineStrategy_pack)],
jur_WordBoundary, 0, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_52", $rt_wrapFunction1(jur_WordBoundary__init_0), "$matches", $rt_wrapFunction3(jur_WordBoundary_matches), "$hasConsumed", $rt_wrapFunction1(jur_WordBoundary_hasConsumed)],
jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace_computeValue)],
cbgu_BufferUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_Double, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Double_$callClinit, 0,
otjde_MouseEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
otjb_WindowEventTarget, 0, jl_Object, [otjde_EventTarget, otjde_FocusEventTarget, otjde_MouseEventTarget, otjde_KeyboardEventTarget, otjde_LoadEventTarget, otjde_GamepadEventTarget], 3, 3, 0, 0, 0,
otjb_StorageProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
otjb_Window, 0, jl_Object, [otj_JSObject, otjb_WindowEventTarget, otjb_StorageProvider, otjc_JSArrayReader], 1, 3, 0, 0, ["$addEventListener$exported$0", $rt_wrapFunction2(otjb_Window_addEventListener$exported$0), "$removeEventListener$exported$1", $rt_wrapFunction2(otjb_Window_removeEventListener$exported$1), "$get$exported$2", $rt_wrapFunction1(otjb_Window_get$exported$2), "$removeEventListener$exported$3", $rt_wrapFunction3(otjb_Window_removeEventListener$exported$3), "$dispatchEvent$exported$4", $rt_wrapFunction1(otjb_Window_dispatchEvent$exported$4),
"$getLength$exported$5", $rt_wrapFunction0(otjb_Window_getLength$exported$5), "$addEventListener$exported$6", $rt_wrapFunction3(otjb_Window_addEventListener$exported$6)],
jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
cbgm_Matrix4, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Matrix4__init_0), "$set3", $rt_wrapFunction1(cbgm_Matrix4_set), "$set11", $rt_wrapFunction1(cbgm_Matrix4_set0), "$mul0", $rt_wrapFunction1(cbgm_Matrix4_mul0), "$idt0", $rt_wrapFunction0(cbgm_Matrix4_idt), "$setToOrtho2D", $rt_wrapFunction4(cbgm_Matrix4_setToOrtho2D), "$setToOrtho", function(var_1, var_2, var_3, var_4, var_5, var_6) { return cbgm_Matrix4_setToOrtho(this, var_1, var_2, var_3, var_4,
var_5, var_6); }, "$setToTranslation", $rt_wrapFunction3(cbgm_Matrix4_setToTranslation), "$setToLookAt0", $rt_wrapFunction2(cbgm_Matrix4_setToLookAt), "$setToLookAt", $rt_wrapFunction3(cbgm_Matrix4_setToLookAt0)],
jur_ReluctantAltQuantifierSet, 0, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$_init_42", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet_matches)],
jl_NegativeArraySizeException, "NegativeArraySizeException", 18, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_NegativeArraySizeException__init_0)],
cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row__init_0)],
jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace_computeValue)],
cgxgbwp_AssetDownloadImpl$3, 0, cgxgbw_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_148", $rt_wrapFunction2(cgxgbwp_AssetDownloadImpl$3__init_0), "$onProgress", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$3_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$3_onFailure), "$onSuccess1", $rt_wrapFunction2(cgxgbwp_AssetDownloadImpl$3_onSuccess), "$onSuccess0", $rt_wrapFunction2(cgxgbwp_AssetDownloadImpl$3_onSuccess0)],
cgxgbwd_EventHandlerWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbwp_AssetDownloadImpl$2, 0, jl_Object, [cgxgbwd_EventHandlerWrapper], 0, 0, 0, 0, ["$_init_147", $rt_wrapFunction4(cgxgbwp_AssetDownloadImpl$2__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$2_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$2_handleEvent$exported$0)],
cgxgbwp_AssetDownloadImpl$5, 0, cgxgbw_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_149", function(var_1, var_2, var_3, var_4, var_5) { cgxgbwp_AssetDownloadImpl$5__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$onProgress", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$5_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$5_onFailure), "$onSuccess1", $rt_wrapFunction2(cgxgbwp_AssetDownloadImpl$5_onSuccess), "$onSuccess0", $rt_wrapFunction2(cgxgbwp_AssetDownloadImpl$5_onSuccess0)],
cgxgbwp_AssetDownloadImpl$4, 0, jl_Object, [cgxgbwd_EventHandlerWrapper], 0, 0, 0, 0, ["$_init_147", $rt_wrapFunction4(cgxgbwp_AssetDownloadImpl$4__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$4_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$4_handleEvent$exported$0)],
cgxgbwp_AssetDownloadImpl$7, 0, jl_Object, [], 32, 0, 0, cgxgbwp_AssetDownloadImpl$7_$callClinit, 0,
cgxgbwp_AssetDownloadImpl$6, 0, jl_Object, [cgxgbwd_EventHandlerWrapper], 0, 0, 0, 0, ["$_init_148", $rt_wrapFunction2(cgxgbwp_AssetDownloadImpl$6__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$6_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$6_handleEvent$exported$0)],
jl_NumberFormatException, "NumberFormatException", 18, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_NumberFormatException__init_1), "$_init_", $rt_wrapFunction1(jl_NumberFormatException__init_2)],
cgxgbwp_AssetDownloadImpl$1, 0, jl_Object, [cgxgbwd_EventHandlerWrapper], 0, 0, 0, 0, ["$_init_147", $rt_wrapFunction4(cgxgbwp_AssetDownloadImpl$1__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$1_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl$1_handleEvent$exported$0)],
cbgu_Array$ArrayIterator, 0, jl_Object, [ju_Iterator, jl_Iterable], 0, 3, 0, 0, ["$_init_68", $rt_wrapFunction2(cbgu_Array$ArrayIterator__init_0), "$hasNext", $rt_wrapFunction0(cbgu_Array$ArrayIterator_hasNext), "$next0", $rt_wrapFunction0(cbgu_Array$ArrayIterator_next)],
jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
cgxgbtdi_TeaTimer, 0, cgxgbwd_TimerWrapper, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtdi_TeaTimer__init_0)],
jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored_computeValue)],
cbgu_Array$ArrayIterable, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_69", $rt_wrapFunction1(cbgu_Array$ArrayIterable__init_0), "$_init_68", $rt_wrapFunction2(cbgu_Array$ArrayIterable__init_2), "$iterator0", $rt_wrapFunction0(cbgu_Array$ArrayIterable_iterator)],
jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl_computeValue)],
jl_IllegalStateException, "IllegalStateException", 18, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalStateException__init_1), "$_init_", $rt_wrapFunction1(jl_IllegalStateException__init_2)],
cgxgbtd_TeaTypedArrays, 0, cgxgbwdt_TypedArrays, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtd_TeaTypedArrays__init_), "$createFloat32Array", $rt_wrapFunction1(cgxgbtd_TeaTypedArrays_createFloat32Array), "$createInt32Array", $rt_wrapFunction1(cgxgbtd_TeaTypedArrays_createInt32Array), "$createInt16Array", $rt_wrapFunction1(cgxgbtd_TeaTypedArrays_createInt16Array), "$createInt8Array", $rt_wrapFunction1(cgxgbtd_TeaTypedArrays_createInt8Array), "$createUint8Array", $rt_wrapFunction1(cgxgbtd_TeaTypedArrays_createUint8Array)],
jur_HighSurrogateCharSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_90", $rt_wrapFunction1(jur_HighSurrogateCharSet__init_0), "$setNext", $rt_wrapFunction1(jur_HighSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_HighSurrogateCharSet_matches), "$find", $rt_wrapFunction3(jur_HighSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_HighSurrogateCharSet_findBack), "$first", $rt_wrapFunction1(jur_HighSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HighSurrogateCharSet_hasConsumed)],
jur_ReluctantCompositeQuantifierSet, 0, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$_init_93", $rt_wrapFunction4(jur_ReluctantCompositeQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_ReluctantCompositeQuantifierSet_matches)],
cgxgbw_WebApplicationLogger, 0, jl_Object, [cbg_ApplicationLogger], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbw_WebApplicationLogger__init_0), "$log0", $rt_wrapFunction2(cgxgbw_WebApplicationLogger_log)],
jur_SOLSet, 0, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_SOLSet__init_0), "$matches", $rt_wrapFunction3(jur_SOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_SOLSet_hasConsumed)],
otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, 0, ["$_init_146", $rt_wrapFunction1(otpp_AsyncCallbackWrapper__init_0), "$complete", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_complete), "$error", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_error)],
cbgm_Vector3, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector3_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Vector3__init_1), "$_init_62", $rt_wrapFunction3(cbgm_Vector3__init_2), "$set4", $rt_wrapFunction3(cbgm_Vector3_set), "$set2", $rt_wrapFunction1(cbgm_Vector3_set0), "$add4", $rt_wrapFunction1(cbgm_Vector3_add), "$add9", $rt_wrapFunction3(cbgm_Vector3_add0), "$sub", $rt_wrapFunction1(cbgm_Vector3_sub), "$sub0", $rt_wrapFunction3(cbgm_Vector3_sub0), "$scl", $rt_wrapFunction1(cbgm_Vector3_scl),
"$len2", $rt_wrapFunction0(cbgm_Vector3_len2), "$nor", $rt_wrapFunction0(cbgm_Vector3_nor), "$dot", $rt_wrapFunction1(cbgm_Vector3_dot), "$crs0", $rt_wrapFunction1(cbgm_Vector3_crs), "$crs", $rt_wrapFunction3(cbgm_Vector3_crs0)],
cbgu_IntArray, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_IntArray__init_0), "$_init_67", $rt_wrapFunction2(cbgu_IntArray__init_2), "$add7", $rt_wrapFunction1(cbgu_IntArray_add), "$get4", $rt_wrapFunction1(cbgu_IntArray_get), "$clear", $rt_wrapFunction0(cbgu_IntArray_clear), "$ensureCapacity0", $rt_wrapFunction1(cbgu_IntArray_ensureCapacity), "$resize2", $rt_wrapFunction1(cbgu_IntArray_resize), "$hashCode0", $rt_wrapFunction0(cbgu_IntArray_hashCode), "$equals", $rt_wrapFunction1(cbgu_IntArray_equals)],
cbgu_OrderedMap, 0, cbgu_ObjectMap, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_OrderedMap__init_0), "$put1", $rt_wrapFunction2(cbgu_OrderedMap_put)],
jl_IllegalAccessException, "IllegalAccessException", 18, jl_ReflectiveOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalAccessException__init_0)]]);
$rt_metadata([cbgur_Constructor, 0, jl_Object, [], 4, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(cbgur_Constructor__init_0), "$getDeclaringClass", $rt_wrapFunction0(cbgur_Constructor_getDeclaringClass), "$setAccessible", $rt_wrapFunction1(cbgur_Constructor_setAccessible), "$newInstance0", $rt_wrapFunction1(cbgur_Constructor_newInstance)],
jn_ShortBufferOverArray, 0, jn_ShortBufferImpl, [], 0, 0, 0, 0, ["$_init_65", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_ShortBufferOverArray__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement2", $rt_wrapFunction1(jn_ShortBufferOverArray_getElement), "$putElement2", $rt_wrapFunction2(jn_ShortBufferOverArray_putElement), "$readOnly", $rt_wrapFunction0(jn_ShortBufferOverArray_readOnly)],
cgxgbwp_AssetDownloadImpl, 0, jl_Object, [cgxgbwp_AssetDownloader$AssetDownload], 0, 3, 0, 0, ["$_init_98", $rt_wrapFunction1(cgxgbwp_AssetDownloadImpl__init_0), "$isUseBrowserCache", $rt_wrapFunction0(cgxgbwp_AssetDownloadImpl_isUseBrowserCache), "$getHostPageBaseURL", $rt_wrapFunction0(cgxgbwp_AssetDownloadImpl_getHostPageBaseURL), "$getQueue", $rt_wrapFunction0(cgxgbwp_AssetDownloadImpl_getQueue), "$subtractQueue", $rt_wrapFunction0(cgxgbwp_AssetDownloadImpl_subtractQueue), "$addQueue", $rt_wrapFunction0(cgxgbwp_AssetDownloadImpl_addQueue),
"$load0", $rt_wrapFunction4(cgxgbwp_AssetDownloadImpl_load), "$loadText", $rt_wrapFunction2(cgxgbwp_AssetDownloadImpl_loadText), "$loadScript", $rt_wrapFunction2(cgxgbwp_AssetDownloadImpl_loadScript), "$loadAudio", $rt_wrapFunction2(cgxgbwp_AssetDownloadImpl_loadAudio), "$loadBinary", $rt_wrapFunction2(cgxgbwp_AssetDownloadImpl_loadBinary), "$loadImage", $rt_wrapFunction3(cgxgbwp_AssetDownloadImpl_loadImage), "$loadImage0", $rt_wrapFunction4(cgxgbwp_AssetDownloadImpl_loadImage0)],
jlr_Modifier, 0, jl_Object, [], 0, 3, 0, jlr_Modifier_$callClinit, 0,
cbgu_NumberUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue)],
ju_HashMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$newElementArray0", $rt_wrapFunction1(ju_HashMap_newElementArray), "$_init_0", $rt_wrapFunction0(ju_HashMap__init_0), "$_init_3", $rt_wrapFunction1(ju_HashMap__init_2), "$_init_15", $rt_wrapFunction2(ju_HashMap__init_4), "$get1", $rt_wrapFunction1(ju_HashMap_get), "$getEntry", $rt_wrapFunction1(ju_HashMap_getEntry), "$findNonNullKeyEntry", $rt_wrapFunction3(ju_HashMap_findNonNullKeyEntry), "$findNullKeyEntry", $rt_wrapFunction0(ju_HashMap_findNullKeyEntry),
"$put1", $rt_wrapFunction2(ju_HashMap_put), "$putImpl", $rt_wrapFunction2(ju_HashMap_putImpl), "$createHashedEntry", $rt_wrapFunction3(ju_HashMap_createHashedEntry), "$rehash0", $rt_wrapFunction1(ju_HashMap_rehash), "$rehash", $rt_wrapFunction0(ju_HashMap_rehash0), "$remove1", $rt_wrapFunction1(ju_HashMap_remove), "$removeEntry", $rt_wrapFunction1(ju_HashMap_removeEntry)],
jur_UMultiLineEOLSet, 0, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_UMultiLineEOLSet__init_0), "$matches", $rt_wrapFunction3(jur_UMultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UMultiLineEOLSet_hasConsumed)],
cbgu_FloatArray, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_FloatArray__init_0), "$_init_67", $rt_wrapFunction2(cbgu_FloatArray__init_2), "$add8", $rt_wrapFunction1(cbgu_FloatArray_add), "$addAll1", $rt_wrapFunction1(cbgu_FloatArray_addAll), "$addAll2", $rt_wrapFunction3(cbgu_FloatArray_addAll0), "$addAll4", $rt_wrapFunction3(cbgu_FloatArray_addAll1), "$get5", $rt_wrapFunction1(cbgu_FloatArray_get), "$removeRange", $rt_wrapFunction2(cbgu_FloatArray_removeRange), "$clear", $rt_wrapFunction0(cbgu_FloatArray_clear),
"$ensureCapacity2", $rt_wrapFunction1(cbgu_FloatArray_ensureCapacity), "$resize3", $rt_wrapFunction1(cbgu_FloatArray_resize), "$truncate0", $rt_wrapFunction1(cbgu_FloatArray_truncate)],
jnc_CoderResult, 0, jl_Object, [], 0, 3, 0, jnc_CoderResult_$callClinit, ["$_init_152", $rt_wrapFunction2(jnc_CoderResult__init_0), "$isUnderflow", $rt_wrapFunction0(jnc_CoderResult_isUnderflow), "$isOverflow", $rt_wrapFunction0(jnc_CoderResult_isOverflow), "$isError", $rt_wrapFunction0(jnc_CoderResult_isError), "$isMalformed", $rt_wrapFunction0(jnc_CoderResult_isMalformed), "$isUnmappable", $rt_wrapFunction0(jnc_CoderResult_isUnmappable), "$length", $rt_wrapFunction0(jnc_CoderResult_length), "$throwException",
$rt_wrapFunction0(jnc_CoderResult_throwException)],
jur_EOLSet, 0, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_EOLSet__init_), "$matches", $rt_wrapFunction3(jur_EOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOLSet_hasConsumed)],
cbgggf_FreeType$SizeMetrics, 0, cbgggf_FreeType$Pointer, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgggf_FreeType$SizeMetrics__init_0), "$getAscender", $rt_wrapFunction0(cbgggf_FreeType$SizeMetrics_getAscender), "$getDescender", $rt_wrapFunction0(cbgggf_FreeType$SizeMetrics_getDescender), "$getHeight", $rt_wrapFunction0(cbgggf_FreeType$SizeMetrics_getHeight)],
cgxgbw_WebApplication$2, 0, jl_Object, [], 32, 0, 0, cgxgbw_WebApplication$2_$callClinit, 0,
jur_Lexer, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_13", $rt_wrapFunction2(jur_Lexer__init_0), "$peek0", $rt_wrapFunction0(jur_Lexer_peek), "$setMode", $rt_wrapFunction1(jur_Lexer_setMode), "$restoreFlags", $rt_wrapFunction1(jur_Lexer_restoreFlags), "$peekSpecial", $rt_wrapFunction0(jur_Lexer_peekSpecial), "$isSpecial", $rt_wrapFunction0(jur_Lexer_isSpecial), "$isNextSpecial", $rt_wrapFunction0(jur_Lexer_isNextSpecial), "$next2", $rt_wrapFunction0(jur_Lexer_next), "$nextSpecial", $rt_wrapFunction0(jur_Lexer_nextSpecial),
"$lookAhead", $rt_wrapFunction0(jur_Lexer_lookAhead), "$back", $rt_wrapFunction0(jur_Lexer_back), "$toString", $rt_wrapFunction0(jur_Lexer_toString), "$isEmpty", $rt_wrapFunction0(jur_Lexer_isEmpty), "$isLetter", $rt_wrapFunction0(jur_Lexer_isLetter0), "$isHighSurrogate0", $rt_wrapFunction0(jur_Lexer_isHighSurrogate0), "$isLowSurrogate0", $rt_wrapFunction0(jur_Lexer_isLowSurrogate0), "$getIndex", $rt_wrapFunction0(jur_Lexer_getIndex)],
jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock_computeValue)],
jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace_computeValue)],
otjt_Int32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
cgxgbw_WebApplication$1, 0, cgxgbw_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_102", $rt_wrapFunction1(cgxgbw_WebApplication$1__init_0), "$onSuccess0", $rt_wrapFunction2(cgxgbw_WebApplication$1_onSuccess)],
cgxgbw_WebApplication$1$1, 0, jl_Object, [cgxgbws_SoundManagerCallbackWrapper], 0, 0, 0, 0, ["$_init_153", $rt_wrapFunction2(cgxgbw_WebApplication$1$1__init_0), "$onready", $rt_wrapFunction0(cgxgbw_WebApplication$1$1_onready), "$ontimeout", $rt_wrapFunction0(cgxgbw_WebApplication$1$1_ontimeout), "$onready$exported$0", $rt_wrapFunction0(cgxgbw_WebApplication$1$1_onready$exported$0), "$ontimeout$exported$1", $rt_wrapFunction0(cgxgbw_WebApplication$1$1_ontimeout$exported$1)],
jn_ShortBufferOverByteBufferBigEndian, 0, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_ShortBufferOverByteBufferBigEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement2", $rt_wrapFunction1(jn_ShortBufferOverByteBufferBigEndian_getElement), "$putElement2", $rt_wrapFunction2(jn_ShortBufferOverByteBufferBigEndian_putElement)],
cgxgbw_WebGraphics, 0, jl_Object, [cbg_Graphics], 0, 3, 0, 0, ["$_init_99", $rt_wrapFunction1(cgxgbw_WebGraphics__init_0), "$update1", $rt_wrapFunction0(cgxgbw_WebGraphics_update), "$getGL20", $rt_wrapFunction0(cgxgbw_WebGraphics_getGL20), "$getWidth", $rt_wrapFunction0(cgxgbw_WebGraphics_getWidth), "$getHeight", $rt_wrapFunction0(cgxgbw_WebGraphics_getHeight), "$supportsExtension", $rt_wrapFunction1(cgxgbw_WebGraphics_supportsExtension)]]);
function $rt_array(cls, data) {
    this.$monitor = null;
    this.$id$ = 0;
    this.type = cls;
    this.data = data;
    this.constructor = $rt_arraycls(cls);
}
$rt_array.prototype = Object.create(($rt_objcls()).prototype);
$rt_array.prototype.toString = function() {
    var str = "[";
    for (var i = 0;i < this.data.length;++i) {
        if (i > 0) {
            str += ", ";
        }
        str += this.data[i].toString();
    }
    str += "]";
    return str;
};
$rt_setCloneMethod($rt_array.prototype, function() {
    var dataCopy;
    if ('slice' in this.data) {
        dataCopy = this.data.slice();
    } else {
        dataCopy = new this.data.constructor(this.data.length);
        for (var i = 0;i < dataCopy.length;++i) {
            dataCopy[i] = this.data[i];
        }
    }
    return new $rt_array(this.type, dataCopy);
});
$rt_stringPool(["Can\'t enter monitor from another thread synchronously", "@", "Couldn\'t get glyph, FreeType error code: ", "Constructor not found for class: ", "Security violation occurred while getting constructor for class: \'", "\'.", "Security violation while getting constructor for class: ", "String contains invalid digits: ", "String contains digits out of radix ", ": ", "The value is too big for int type: ", "String is null or empty", "Illegal radix: ", "Replacement preconditions do not hold", "Action must be non-null",
"main", "\tat ", "Caused by: ", "Android", "Desktop", "HeadlessDesktop", "Applet", "WebGL", "iOS", "loadFactor must be > 0 and < 1: ", "objects cannot be null.", "BIG_ENDIAN", "LITTLE_ENDIAN", "Pixmap", "Custom", "IDLE", "QUEUE_ASSETS_LOADED", "INIT_SOUND", "APP_CREATE", "APP_READY", "#iterator() cannot be used nested.", "mousedown", "mouseup", "mousemove", "wheel", "touchstart", "touchmove", "touchcancel", "touchend", "keydown", "keypress", "keyup", "CSS1Compat", "null", "Index out of bounds", "New position ",
" is outside of range [0;", "]", "New limit ", "CLEAR", "BLACK", "WHITE", "LIGHT_GRAY", "GRAY", "DARK_GRAY", "BLUE", "NAVY", "ROYAL", "SLATE", "SKY", "CYAN", "TEAL", "GREEN", "CHARTREUSE", "LIME", "FOREST", "OLIVE", "YELLOW", "GOLD", "GOLDENROD", "ORANGE", "BROWN", "TAN", "FIREBRICK", "RED", "SCARLET", "CORAL", "SALMON", "PINK", "MAGENTA", "PURPLE", "VIOLET", "MAROON", "", "Lower", "Upper", "ASCII", "Alpha", "Digit", "Alnum", "Punct", "Graph", "Print", "Blank", "Cntrl", "XDigit", "javaLowerCase", "javaUpperCase",
"javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart", "javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar", "javaTitleCase", "javaUnicodeIdentifierPart", "javaUnicodeIdentifierStart", "Space", "w", "W", "s", "S", "d", "D", "BasicLatin", "Latin-1Supplement", "LatinExtended-A", "LatinExtended-B", "IPAExtensions", "SpacingModifierLetters", "CombiningDiacriticalMarks", "Greek", "Cyrillic", "CyrillicSupplement",
"Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan", "Myanmar", "Georgian", "HangulJamo", "Ethiopic", "EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer", "Mongolian", "Limbu", "TaiLe", "NewTaiLue", "KhmerSymbols", "Buginese", "PhoneticExtensions", "PhoneticExtensionsSupplement",
"CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts", "CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols", "NumberForms", "Arrows", "MathematicalOperators", "MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing", "BlockElements", "GeometricShapes", "MiscellaneousSymbols", "Dingbats", "MiscellaneousMathematicalSymbols-A", "SupplementalArrows-A", "BraillePatterns",
"SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows", "Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended", "SupplementalPunctuation", "CJKRadicalsSupplement", "KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana", "Bopomofo", "HangulCompatibilityJamo", "Kanbun", "BopomofoExtended", "CJKStrokes", "KatakanaPhoneticExtensions", "EnclosedCJKLettersandMonths", "CJKCompatibility",
"CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters", "SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates", "LowSurrogates", "PrivateUseArea", "CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors", "VerticalForms", "CombiningHalfMarks", "CJKCompatibilityForms", "SmallFormVariants", "ArabicPresentationForms-B", "HalfwidthandFullwidthForms", "all",
"Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "N", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC", "Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc", "Sk", "So", "Pi", "Pf", "FILL", "STROKE", "Couldn\'t load image \'", "\', file does not exist", "rgba(", ",", ")", "Already prepared", "Call prepare() before calling getPixmap()", "This TextureData implementation does not upload data itself", "The last char in dst ", " is outside of array of size ",
"Length ", " must be non-negative", "Offset ", "0", "The last int in src ", "canvas", "charsetName is null", "Should never been thrown", "US-ASCII", "GL_EXT_texture_filter_anisotropic", "New data must have the same managed status as the old data", "IGNORE", "REPLACE", "REPORT", "Index ", "COPY", "copy", "DESTINATION_ATOP", "destination-atop", "DESTINATION_IN", "destination-in", "DESTINATION_OUT", "destination-out", "DESTINATION_OVER", "destination-over", "LIGHTER", "lighter", "SOURCE_ATOP", "source-atop", "SOURCE_IN",
"source-in", "SOURCE_OUT", "source-out", "SOURCE_OVER", "source-over", "XOR", "xor", "Image", "i", "Audio", "a", "Text", "t", "Binary", "b", "Directory", "vertex shader must not be null", "fragment shader must not be null", "Fragment shader:\n", "Vertex shader\n", "An attempted fetch uniform from uncompiled shader \n", "No uniform with name \'", "\' in shader", "Classpath", "Internal", "External", "Absolute", "Local", "<init>", "No buffer allocated!", "\u0000ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890\"!`?\'.,;:()[]{}<>|/@\\^$â‚¬-%+=#_&~* ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ",
"UTF-16", "UTF-16BE", "UTF-16LE", "GL_ARB_framebuffer_object", "GL_EXT_framebuffer_object", "texture width and height must be square when using mipmapping.", "The last short in src ", "The last float in src ", "start + count must be <= size: ", " + ", " <= ", "index can\'t be >= size: ", " >= ", "end can\'t be >= size: ", "start can\'t be > end: ", " > ", "Array is empty.", "additionalCapacity must be >= 0: ", "newSize must be >= 0: ", "ISO-8859-1", "MirroredRepeat", "ClampToEdge", "Repeat", " glyphs packed in ",
" page(s) in ", " ms", " ", "pt: The quick brown fox jumps over the lazy dog", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\n1234567890\"!`?\'.,;:()[]{}<>|/@\\^$-%+=#_&~*", "Nearest", "Linear", "MipMap", "MipMapNearestNearest", "MipMapLinearNearest", "MipMapNearestLinear", "MipMapLinearLinear", "UTF-8", "ErrorLoading: ", "\n", ":", "Invalid assets description file.", "Couldn\'t render glyph, FreeType error code: ", "Glyph is not yet rendered", ", ", "object cannot be null.", "Class cannot be created (missing no-arg constructor): ",
"Unable to create new instance: ", "VertexArray", "VertexBufferObject", "VertexBufferObjectSubData", "VertexBufferObjectWithVAO", "key cannot be null.", "Patter is null", "\\Q", "\\E", "\\\\E\\Q", "java.runtime.name", "os.name", "Windows", "OS X", "no OS", "Linux", ".html", "index.html", "index-debug.html", "assets/", "assets.txt", "scripts/soundmanager2-jsmin.js", "Can\'t have more than 8191 sprites per batch: ", "a_position", "a_color", "a_texCoord0", "attribute vec4 a_position;\nattribute vec4 a_color;\nattribute vec2 a_texCoord0;\nuniform mat4 u_projTrans;\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\n\nvoid main()\n{\n   v_color = a_color;\n   v_color.a = v_color.a * (255.0/254.0);\n   v_texCoords = a_texCoord0;\n   gl_Position =  u_projTrans * a_position;\n}\n",
"#ifdef GL_ES\n#define LOWP lowp\nprecision mediump float;\n#else\n#define LOWP \n#endif\nvarying LOWP vec4 v_color;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\nvoid main()\n{\n  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n}", "Error compiling shader: ", "SpriteBatch.end must be called before begin.", "SpriteBatch.begin must be called before end.", "SpriteBatch.begin must be called before draw.", "u_projTrans", "u_texture", "Unmappable characters of length ", "Couldn\'t set size for font",
"-", "No x-height character found in font", "No cap character found in font", "FreeTypeFontGenerator", "Couldn\'t render char: ", "Malformed input of length ", "None", "SourceOver", "NearestNeighbour", "BiLinear", "scripts/freetype.js", "Couldn\'t initialize FreeType library", "texture cannot be null.", "If no regions are specified, the font data must have an images path.", "Intensity", "LuminanceAlpha", "RGB565", "RGBA4444", "RGB888", "RGBA8888", "The specified font must contain at least one texture page.",
"Pixmap has already been packed with name: ", ".9", "\\.", "Page size too small for pixmap.", "Page size too small for pixmap: ", "  ", "(.+)_(\\d+)$", "FileType \'", "\' Not supported in Dragome backend", " does not exist", "\\", "/", "Regular", "data/arial.ttf", "Italic", "data/arial-italic.ttf", "attributes must be >= 1", "{", "}", "Tiny", "Small", "Medium", "Large", "Huge", "ReallyHuge", "JustTooBig", "Mesh attempting to access memory outside of the index buffer (count: ", ", offset: ", ", max: ", "\' not supported in Dragome backend",
"capacity must be >= 0: ", "The required capacity is too large: ", "error", "Capacity is negative: ", "The last byte in dst ", "The last byte in src ", "Slight", "Full", "AutoSlight", "AutoMedium", "AutoFull", "Couldn\'t load font, FreeType error code: ", "Couldn\'t create FreeType stroker, FreeType error code: ", "prepare() must not be called on a PixmapTextureData instance as it is already prepared.", "IndexBufferObject cannot be used after it has been disposed.", "Either src or dest is null", "java.version",
"1.8", "TeaVM", "file.separator", "path.separator", "line.separator", "java.io.tmpdir", "java.vm.version", "user.home", "/tmp", "Can only cope with FloatBuffer and ShortBuffer at the moment", "glGetFloat not supported by WebGL backend", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "==", "=", ", #", "dst must be a ByteBuffer", "Buffers must be of same type or ByteBuffer", "data must be a ByteBuffer or FloatBuffer", "Script loaded: ", "data:", ";base64,", "Asset loaded: ", "Exception occurred in constructor for class: ",
"Illegal argument(s) supplied to constructor for class: ", "Could not instantiate instance of class: ", "Unsupported asset type ", "Loading asset : ", "Loading script : ", "offset + length must be <= size: ", "Is", "In"]);
jl_String.prototype.toString = function() {
    return $rt_ustr(this);
};
jl_String.prototype.valueOf = jl_String.prototype.toString;
jl_Object.prototype.toString = function() {
    return $rt_ustr(jl_Object_toString(this));
};
jl_Object.prototype.__teavm_class__ = function() {
    return $dbg_class(this);
};
var Long_eq;
var Long_ne;
var Long_gt;
var Long_ge;
var Long_lt;
var Long_le;
var Long_compare;
var Long_add;
var Long_sub;
var Long_inc;
var Long_dec;
var Long_mul;
var Long_div;
var Long_rem;
var Long_udiv;
var Long_urem;
var Long_neg;
var Long_and;
var Long_or;
var Long_xor;
var Long_shl;
var Long_shr;
var Long_shru;
var Long_not;
if (typeof BigInt !== 'function') {
    Long_eq = function(a, b) {
        return a.hi === b.hi && a.lo === b.lo;
    };
    Long_ne = function(a, b) {
        return a.hi !== b.hi || a.lo !== b.lo;
    };
    Long_gt = function(a, b) {
        if (a.hi < b.hi) {
            return false;
        }
        if (a.hi > b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x > y;
        }
        return (a.lo & 1) > (b.lo & 1);
    };
    Long_ge = function(a, b) {
        if (a.hi < b.hi) {
            return false;
        }
        if (a.hi > b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x >= y;
        }
        return (a.lo & 1) >= (b.lo & 1);
    };
    Long_lt = function(a, b) {
        if (a.hi > b.hi) {
            return false;
        }
        if (a.hi < b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x < y;
        }
        return (a.lo & 1) < (b.lo & 1);
    };
    Long_le = function(a, b) {
        if (a.hi > b.hi) {
            return false;
        }
        if (a.hi < b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x <= y;
        }
        return (a.lo & 1) <= (b.lo & 1);
    };
    Long_add = function(a, b) {
        if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
            return Long_fromNumber(a.lo + b.lo);
        } else if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) + Long_toNumber(b));
        }
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        var lolo = a_lolo + b_lolo | 0;
        var lohi = a_lohi + b_lohi + (lolo >> 16) | 0;
        var hilo = a_hilo + b_hilo + (lohi >> 16) | 0;
        var hihi = a_hihi + b_hihi + (hilo >> 16) | 0;
        return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
    };
    Long_inc = function(a) {
        var lo = a.lo + 1 | 0;
        var hi = a.hi;
        if (lo === 0) {
            hi = hi + 1 | 0;
        }
        return new Long(lo, hi);
    };
    Long_dec = function(a) {
        var lo = a.lo - 1 | 0;
        var hi = a.hi;
        if (lo ===  -1) {
            hi = hi - 1 | 0;
        }
        return new Long(lo, hi);
    };
    Long_neg = function(a) {
        return Long_inc(new Long(a.lo ^ 0xFFFFFFFF, a.hi ^ 0xFFFFFFFF));
    };
    Long_sub = function(a, b) {
        if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
            return Long_fromNumber(a.lo - b.lo);
        }
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        var lolo = a_lolo - b_lolo | 0;
        var lohi = a_lohi - b_lohi + (lolo >> 16) | 0;
        var hilo = a_hilo - b_hilo + (lohi >> 16) | 0;
        var hihi = a_hihi - b_hihi + (hilo >> 16) | 0;
        return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
    };
    Long_compare = function(a, b) {
        var r = a.hi - b.hi;
        if (r !== 0) {
            return r;
        }
        r = (a.lo >>> 1) - (b.lo >>> 1);
        if (r !== 0) {
            return r;
        }
        return (a.lo & 1) - (b.lo & 1);
    };
    Long_mul = function(a, b) {
        var positive = Long_isNegative(a) === Long_isNegative(b);
        if (Long_isNegative(a)) {
            a = Long_neg(a);
        }
        if (Long_isNegative(b)) {
            b = Long_neg(b);
        }
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        var lolo = 0;
        var lohi = 0;
        var hilo = 0;
        var hihi = 0;
        lolo = a_lolo * b_lolo | 0;
        lohi = lolo >>> 16;
        lohi = (lohi & 0xFFFF) + a_lohi * b_lolo | 0;
        hilo = hilo + (lohi >>> 16) | 0;
        lohi = (lohi & 0xFFFF) + a_lolo * b_lohi | 0;
        hilo = hilo + (lohi >>> 16) | 0;
        hihi = hilo >>> 16;
        hilo = (hilo & 0xFFFF) + a_hilo * b_lolo | 0;
        hihi = hihi + (hilo >>> 16) | 0;
        hilo = (hilo & 0xFFFF) + a_lohi * b_lohi | 0;
        hihi = hihi + (hilo >>> 16) | 0;
        hilo = (hilo & 0xFFFF) + a_lolo * b_hilo | 0;
        hihi = hihi + (hilo >>> 16) | 0;
        hihi = hihi + a_hihi * b_lolo + a_hilo * b_lohi + a_lohi * b_hilo + a_lolo * b_hihi | 0;
        var result = new Long(lolo & 0xFFFF | lohi << 16, hilo & 0xFFFF | hihi << 16);
        return positive ? result : Long_neg(result);
    };
    Long_div = function(a, b) {
        if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
        }
        return (Long_divRem(a, b))[0];
    };
    Long_udiv = function(a, b) {
        if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
        }
        return (Long_udivRem(a, b))[0];
    };
    Long_rem = function(a, b) {
        if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) % Long_toNumber(b));
        }
        return (Long_divRem(a, b))[1];
    };
    Long_urem = function(a, b) {
        if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
        }
        return (Long_udivRem(a, b))[1];
    };
    function Long_divRem(a, b) {
        if (b.lo === 0 && b.hi === 0) {
            throw new Error("Division by zero");
        }
        var positive = Long_isNegative(a) === Long_isNegative(b);
        if (Long_isNegative(a)) {
            a = Long_neg(a);
        }
        if (Long_isNegative(b)) {
            b = Long_neg(b);
        }
        a = new LongInt(a.lo, a.hi, 0);
        b = new LongInt(b.lo, b.hi, 0);
        var q = LongInt_div(a, b);
        a = new Long(a.lo, a.hi);
        q = new Long(q.lo, q.hi);
        return positive ? [q, a] : [Long_neg(q), Long_neg(a)];
    }
    function Long_udivRem(a, b) {
        if (b.lo === 0 && b.hi === 0) {
            throw new Error("Division by zero");
        }
        a = new LongInt(a.lo, a.hi, 0);
        b = new LongInt(b.lo, b.hi, 0);
        var q = LongInt_div(a, b);
        a = new Long(a.lo, a.hi);
        q = new Long(q.lo, q.hi);
        return [q, a];
    }
    function Long_shiftLeft16(a) {
        return new Long(a.lo << 16, a.lo >>> 16 | a.hi << 16);
    }
    function Long_shiftRight16(a) {
        return new Long(a.lo >>> 16 | a.hi << 16, a.hi >>> 16);
    }
    Long_and = function(a, b) {
        return new Long(a.lo & b.lo, a.hi & b.hi);
    };
    Long_or = function(a, b) {
        return new Long(a.lo | b.lo, a.hi | b.hi);
    };
    Long_xor = function(a, b) {
        return new Long(a.lo ^ b.lo, a.hi ^ b.hi);
    };
    Long_shl = function(a, b) {
        b &= 63;
        if (b === 0) {
            return a;
        } else if (b < 32) {
            return new Long(a.lo << b, a.lo >>> 32 - b | a.hi << b);
        } else if (b === 32) {
            return new Long(0, a.lo);
        } else {
            return new Long(0, a.lo << b - 32);
        }
    };
    Long_shr = function(a, b) {
        b &= 63;
        if (b === 0) {
            return a;
        } else if (b < 32) {
            return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >> b);
        } else if (b === 32) {
            return new Long(a.hi, a.hi >> 31);
        } else {
            return new Long(a.hi >> b - 32, a.hi >> 31);
        }
    };
    Long_shru = function(a, b) {
        b &= 63;
        if (b === 0) {
            return a;
        } else if (b < 32) {
            return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >>> b);
        } else if (b === 32) {
            return new Long(a.hi, 0);
        } else {
            return new Long(a.hi >>> b - 32, 0);
        }
    };
    Long_not = function(a) {
        return new Long(~a.hi, ~a.lo);
    };
    function LongInt(lo, hi, sup) {
        this.lo = lo;
        this.hi = hi;
        this.sup = sup;
    }
    function LongInt_mul(a, b) {
        var a_lolo = (a.lo & 0xFFFF) * b | 0;
        var a_lohi = (a.lo >>> 16) * b | 0;
        var a_hilo = (a.hi & 0xFFFF) * b | 0;
        var a_hihi = (a.hi >>> 16) * b | 0;
        var sup = a.sup * b | 0;
        a_lohi = a_lohi + (a_lolo >>> 16) | 0;
        a_hilo = a_hilo + (a_lohi >>> 16) | 0;
        a_hihi = a_hihi + (a_hilo >>> 16) | 0;
        sup = sup + (a_hihi >>> 16) | 0;
        a.lo = a_lolo & 0xFFFF | a_lohi << 16;
        a.hi = a_hilo & 0xFFFF | a_hihi << 16;
        a.sup = sup & 0xFFFF;
    }
    function LongInt_sub(a, b) {
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        a_lolo = a_lolo - b_lolo | 0;
        a_lohi = a_lohi - b_lohi + (a_lolo >> 16) | 0;
        a_hilo = a_hilo - b_hilo + (a_lohi >> 16) | 0;
        a_hihi = a_hihi - b_hihi + (a_hilo >> 16) | 0;
        var sup = a.sup - b.sup + (a_hihi >> 16) | 0;
        a.lo = a_lolo & 0xFFFF | a_lohi << 16;
        a.hi = a_hilo & 0xFFFF | a_hihi << 16;
        a.sup = sup;
    }
    function LongInt_add(a, b) {
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        a_lolo = a_lolo + b_lolo | 0;
        a_lohi = a_lohi + b_lohi + (a_lolo >> 16) | 0;
        a_hilo = a_hilo + b_hilo + (a_lohi >> 16) | 0;
        a_hihi = a_hihi + b_hihi + (a_hilo >> 16) | 0;
        var sup = a.sup + b.sup + (a_hihi >> 16) | 0;
        a.lo = a_lolo & 0xFFFF | a_lohi << 16;
        a.hi = a_hilo & 0xFFFF | a_hihi << 16;
        a.sup = sup;
    }
    function LongInt_inc(a) {
        a.lo = a.lo + 1 | 0;
        if (a.lo === 0) {
            a.hi = a.hi + 1 | 0;
            if (a.hi === 0) {
                a.sup = a.sup + 1 & 0xFFFF;
            }
        }
    }
    function LongInt_dec(a) {
        a.lo = a.lo - 1 | 0;
        if (a.lo ===  -1) {
            a.hi = a.hi - 1 | 0;
            if (a.hi ===  -1) {
                a.sup = a.sup - 1 & 0xFFFF;
            }
        }
    }
    function LongInt_ucompare(a, b) {
        var r = a.sup - b.sup;
        if (r !== 0) {
            return r;
        }
        r = (a.hi >>> 1) - (b.hi >>> 1);
        if (r !== 0) {
            return r;
        }
        r = (a.hi & 1) - (b.hi & 1);
        if (r !== 0) {
            return r;
        }
        r = (a.lo >>> 1) - (b.lo >>> 1);
        if (r !== 0) {
            return r;
        }
        return (a.lo & 1) - (b.lo & 1);
    }
    function LongInt_numOfLeadingZeroBits(a) {
        var n = 0;
        var d = 16;
        while (d > 0) {
            if (a >>> d !== 0) {
                a >>>= d;
                n = n + d | 0;
            }
            d = d / 2 | 0;
        }
        return 31 - n;
    }
    function LongInt_shl(a, b) {
        if (b === 0) {
            return;
        }
        if (b < 32) {
            a.sup = (a.hi >>> 32 - b | a.sup << b) & 0xFFFF;
            a.hi = a.lo >>> 32 - b | a.hi << b;
            a.lo <<= b;
        } else if (b === 32) {
            a.sup = a.hi & 0xFFFF;
            a.hi = a.lo;
            a.lo = 0;
        } else if (b < 64) {
            a.sup = (a.lo >>> 64 - b | a.hi << b - 32) & 0xFFFF;
            a.hi = a.lo << b;
            a.lo = 0;
        } else if (b === 64) {
            a.sup = a.lo & 0xFFFF;
            a.hi = 0;
            a.lo = 0;
        } else {
            a.sup = a.lo << b - 64 & 0xFFFF;
            a.hi = 0;
            a.lo = 0;
        }
    }
    function LongInt_shr(a, b) {
        if (b === 0) {
            return;
        }
        if (b === 32) {
            a.lo = a.hi;
            a.hi = a.sup;
            a.sup = 0;
        } else if (b < 32) {
            a.lo = a.lo >>> b | a.hi << 32 - b;
            a.hi = a.hi >>> b | a.sup << 32 - b;
            a.sup >>>= b;
        } else if (b === 64) {
            a.lo = a.sup;
            a.hi = 0;
            a.sup = 0;
        } else if (b < 64) {
            a.lo = a.hi >>> b - 32 | a.sup << 64 - b;
            a.hi = a.sup >>> b - 32;
            a.sup = 0;
        } else {
            a.lo = a.sup >>> b - 64;
            a.hi = 0;
            a.sup = 0;
        }
    }
    function LongInt_copy(a) {
        return new LongInt(a.lo, a.hi, a.sup);
    }
    function LongInt_div(a, b) {
        var bits = b.hi !== 0 ? LongInt_numOfLeadingZeroBits(b.hi) : LongInt_numOfLeadingZeroBits(b.lo) + 32;
        var sz = 1 + (bits / 16 | 0);
        var dividentBits = bits % 16;
        LongInt_shl(b, bits);
        LongInt_shl(a, dividentBits);
        var q = new LongInt(0, 0, 0);
        while (sz-- > 0) {
            LongInt_shl(q, 16);
            var digitA = (a.hi >>> 16) + 0x10000 * a.sup;
            var digitB = b.hi >>> 16;
            var digit = digitA / digitB | 0;
            var t = LongInt_copy(b);
            LongInt_mul(t, digit);
            if (LongInt_ucompare(t, a) >= 0) {
                while (LongInt_ucompare(t, a) > 0) {
                    LongInt_sub(t, b);
                     --digit;
                }
            } else {
                while (true) {
                    var nextT = LongInt_copy(t);
                    LongInt_add(nextT, b);
                    if (LongInt_ucompare(nextT, a) > 0) {
                        break;
                    }
                    t = nextT;
                    ++digit;
                }
            }
            LongInt_sub(a, t);
            q.lo |= digit;
            LongInt_shl(a, 16);
        }
        LongInt_shr(a, bits + 16);
        return q;
    }
} else {
    Long_eq = function(a, b) {
        return a === b;
    };
    Long_ne = function(a, b) {
        return a !== b;
    };
    Long_gt = function(a, b) {
        return a > b;
    };
    Long_ge = function(a, b) {
        return a >= b;
    };
    Long_lt = function(a, b) {
        return a < b;
    };
    Long_le = function(a, b) {
        return a <= b;
    };
    Long_add = function(a, b) {
        return BigInt.asIntN(64, a + b);
    };
    Long_inc = function(a) {
        return BigInt.asIntN(64, a + 1);
    };
    Long_dec = function(a) {
        return BigInt.asIntN(64, a - 1);
    };
    Long_neg = function(a) {
        return BigInt.asIntN(64,  -a);
    };
    Long_sub = function(a, b) {
        return BigInt.asIntN(64, a - b);
    };
    Long_compare = function(a, b) {
        return a < b ?  -1 : a > b ? 1 : 0;
    };
    Long_mul = function(a, b) {
        return BigInt.asIntN(64, a * b);
    };
    Long_div = function(a, b) {
        return BigInt.asIntN(64, a / b);
    };
    Long_udiv = function(a, b) {
        return BigInt.asIntN(64, BigInt.asUintN(64, a) / BigInt.asUintN(64, b));
    };
    Long_rem = function(a, b) {
        return BigInt.asIntN(64, a % b);
    };
    Long_urem = function(a, b) {
        return BigInt.asIntN(64, BigInt.asUintN(64, a) % BigInt.asUintN(64, b));
    };
    Long_and = function(a, b) {
        return BigInt.asIntN(64, a & b);
    };
    Long_or = function(a, b) {
        return BigInt.asIntN(64, a | b);
    };
    Long_xor = function(a, b) {
        return BigInt.asIntN(64, a ^ b);
    };
    Long_shl = function(a, b) {
        return BigInt.asIntN(64, a << BigInt(b & 63));
    };
    Long_shr = function(a, b) {
        return BigInt.asIntN(64, a >> BigInt(b & 63));
    };
    Long_shru = function(a, b) {
        return BigInt.asIntN(64, BigInt.asUintN(64, a) >> BigInt(b & 63));
    };
    Long_not = function(a) {
        return BigInt.asIntN(64, ~a);
    };
}
var Long_add = Long_add;

var Long_sub = Long_sub;

var Long_mul = Long_mul;

var Long_div = Long_div;

var Long_rem = Long_rem;

var Long_or = Long_or;

var Long_and = Long_and;

var Long_xor = Long_xor;

var Long_shl = Long_shl;

var Long_shr = Long_shr;

var Long_shru = Long_shru;

var Long_compare = Long_compare;

var Long_eq = Long_eq;

var Long_ne = Long_ne;

var Long_lt = Long_lt;

var Long_le = Long_le;

var Long_gt = Long_gt;

var Long_ge = Long_ge;

var Long_not = Long_not;

var Long_neg = Long_neg;

function TeaVMThread(runner) {
    this.status = 3;
    this.stack = [];
    this.suspendCallback = null;
    this.runner = runner;
    this.attribute = null;
    this.completeCallback = null;
}
TeaVMThread.prototype.push = function() {
    for (var i = 0;i < arguments.length;++i) {
        this.stack.push(arguments[i]);
    }
    return this;
};
TeaVMThread.prototype.s = TeaVMThread.prototype.push;
TeaVMThread.prototype.pop = function() {
    return this.stack.pop();
};
TeaVMThread.prototype.l = TeaVMThread.prototype.pop;
TeaVMThread.prototype.isResuming = function() {
    return this.status === 2;
};
TeaVMThread.prototype.isSuspending = function() {
    return this.status === 1;
};
TeaVMThread.prototype.suspend = function(callback) {
    this.suspendCallback = callback;
    this.status = 1;
};
TeaVMThread.prototype.start = function(callback) {
    if (this.status !== 3) {
        throw new Error("Thread already started");
    }
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 0;
    this.completeCallback = callback ? callback : function(result) {
        if (result instanceof Error) {
            throw result;
        }
    };
    this.run();
};
TeaVMThread.prototype.resume = function() {
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 2;
    this.run();
};
TeaVMThread.prototype.run = function() {
    $rt_currentNativeThread = this;
    var result;
    try {
        result = this.runner();
    } catch (e){
        result = e;
    } finally {
        $rt_currentNativeThread = null;
    }
    if (this.suspendCallback !== null) {
        var self = this;
        var callback = this.suspendCallback;
        this.suspendCallback = null;
        callback(function() {
            self.resume();
        });
    } else if (this.status === 0) {
        this.completeCallback(result);
    }
};
function $rt_suspending() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isSuspending();
}
function $rt_resuming() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isResuming();
}
function $rt_suspend(callback) {
    var nativeThread = $rt_nativeThread();
    if (nativeThread === null) {
        throw new Error("Suspension point reached from non-threading context (perhaps, from native JS method).");
    }
    return nativeThread.suspend(callback);
}
function $rt_startThread(runner, callback) {
    (new TeaVMThread(runner)).start(callback);
}
var $rt_currentNativeThread = null;
function $rt_nativeThread() {
    return $rt_currentNativeThread;
}
function $rt_invalidPointer() {
    throw new Error("Invalid recorded state");
}
main = $rt_mainStarter(cgxgbt_TeaLauncher_main);
main.javaException = $rt_javaException;
(function() {
    var c;
    c = cgxgbw_WebInput.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = otjc_JSArray.prototype;
    c.getLength = c.$getLength$exported$1;
    c.get = c.$get$exported$0;
    c = cgxgbtdi_TeaWindow.prototype;
    c.onAnimationFrame = c.$onAnimationFrame$exported$0;
    c = cgxgbwp_AssetDownloadImpl$5$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = otjb_Window.prototype;
    c.dispatchEvent = c.$dispatchEvent$exported$4;
    c.addEventListener = c.$addEventListener$exported$0;
    c.removeEventListener = c.$removeEventListener$exported$1;
    c.getLength = c.$getLength$exported$5;
    c.get = c.$get$exported$2;
    c.addEventListener = c.$addEventListener$exported$6;
    c.removeEventListener = c.$removeEventListener$exported$3;
    c = cgxgbwp_AssetDownloadImpl$2.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbwp_AssetDownloadImpl$4.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbwp_AssetDownloadImpl$6.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbwp_AssetDownloadImpl$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbw_WebApplication$1$1.prototype;
    c.onready = c.$onready$exported$0;
    c.ontimeout = c.$ontimeout$exported$1;
})();
})();
