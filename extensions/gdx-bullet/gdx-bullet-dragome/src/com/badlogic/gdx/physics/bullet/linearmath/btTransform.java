/*-------------------------------------------------------
 * This file was generated by XpeCodeGen
 * Version 1.0.0
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.badlogic.gdx.physics.bullet.linearmath;

import com.badlogic.gdx.math.Matrix4;
import com.badlogic.gdx.physics.bullet.BulletBase;

/** @author xpenatan */
public class btTransform extends BulletBase {

    public static Matrix4 tmp_param1 = new Matrix4();

	final public static btTransform btTransform_1 = new btTransform(); // Pointer

    public btTransform() {
        resetObj(createNative(), true);
    }

    private static long createNative() {
		return com.dragome.commons.javascript.ScriptHelper.evalLong("Bullet.getPointer(new Bullet.btTransform());",null);
    }

	protected void cacheObj() {
		com.dragome.commons.javascript.ScriptHelper.put("addr",this.cPointer,this);
		this.jsObj = com.dragome.commons.javascript.ScriptHelper.eval("Bullet.wrapPointer(addr,Bullet.btTransform);",this);
	}

    public static void set(btTransform tra, float[] value) {
		com.dragome.commons.javascript.ScriptHelper.put("value",value,null);
		tra.checkPointer();
		com.dragome.commons.javascript.ScriptHelper.put("transform",tra.jsObj,null);
		com.dragome.commons.javascript.ScriptHelper.evalNoResult("transform.setFromOpenGLMatrix(value);",null);
    }

    public static void get(btTransform tra, float[] value) {
		tra.checkPointer();
		getOpenGLMatrix(tra.jsObj, value);
    }

	public static void getOpenGLMatrix(Object transform, float[] value) {
		com.dragome.commons.javascript.ScriptHelper.put("value",value,null);
		com.dragome.commons.javascript.ScriptHelper.put("transform",transform,null);
		com.dragome.commons.javascript.ScriptHelper.evalNoResult("var ptr=Bullet.ensureFloat32(value);transform.getOpenGLMatrix(ptr);ptr=ptr>>2;for(i=0;i<16;i++){value[i]=Bullet.HEAPF32[(ptr+i)];};",null);
	}

    public static void set(Matrix4 in, btTransform out) {
		out.checkPointer();
		btTransform.set(out, in.val);
    }

    public static void get(btTransform in, Matrix4 out) {
		in.checkPointer();
		btTransform.get(in, out.val);
    }

    public void set(Matrix4 in) {
        btTransform.set(this, in.val);
    }

    public void get(Matrix4 out) {
        btTransform.get(this, out.val);
    }
}
